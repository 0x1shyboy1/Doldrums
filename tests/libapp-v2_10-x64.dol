  ___      _    _                   
 |   \ ___| |__| |_ _ _  _ _ __  ___
 | |) / _ \ / _` | '_| || | '  \(_-<
 |___/\___/_\__,_|_|  \_,_|_|_|_/__/
-------------------------------------

# SUMMARY

Magic: 0xf5f5dcdc
Snapshot size (including 4B of magic): 754129B
Kind: Full AOT (full + AOT code)
Version: 8ee4ef7a67df9845fba331734198a953 (Dart v2.10)
Features: product, no-dwarf_stack_traces_mode, no-causal_async_stacks, lazy_async_stacks, no-lazy_dispatchers, use_bare_instructions, dedup_instructions, no-"asserts", x64-sysv, no-null-safety
Base objects count: 1012
Objects count: 58366
Clusters count: 257
Field table length: 3324
Data image offset: 754144

# CLASSES

class _RegExp@0150898 extends Object implements RegExp {

    _RegExp@0150898 _RegExp@0150898.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2a738
    }

    Iterable allMatches(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16d9d4
    }

    RegExpMatch matchAsPrefix(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe3d2c
    }

    bool hasMatch(DynamicType, DynamicType) {
        Code at absolute offset: 0x7f4a8
    }

    bool get:isUnicode(DynamicType) {
        Code at absolute offset: 0xf410
    }

    int get:_groupCount@0150898(DynamicType) {
        Code at absolute offset: 0xe3cac
    }

    List _ExecuteMatch@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe4134
    }

    List _ExecuteMatchSticky@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe3c3c
    }
}

class _Uint8ArrayView@7027147 extends __Uint8ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 implements Uint8List {

    _Uint8ArrayView@7027147 _Uint8ArrayView@7027147._@7027147(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1255b4
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1219b8
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xfbbd0
    }

    Uint8List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cc68
    }
}

class _ByteBuffer@7027147 extends Object implements ByteBuffer {

    _ByteBuffer@7027147 _ByteBuffer@7027147._New@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x18f34
    }

    int get:lengthInBytes(DynamicType) {
        Code at absolute offset: 0x19090
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0xcca08
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x18842c
    }

    ByteData asByteData(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x186d8
    }

    Uint8List asUint8List(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x17610
    }

    Int32List asInt32List(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18318
    }

    Int64List asInt64List(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x17f48
    }

    Float64List asFloat64List(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x17958
    }
}

class _Float64ArrayView@7027147 extends __Float64ArrayView&_TypedListView&_DoubleListMixin&_TypedDoubleListMixin@7027147 implements Float64List {

    _Float64ArrayView@7027147 _Float64ArrayView@7027147._@7027147(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    double [](DynamicType, DynamicType) {
        Code at absolute offset: 0x12429c
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11f518
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf96c4
    }

    Float64List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x173f2c
    }
}

class _Int64ArrayView@7027147 extends __Int64ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 implements Int64List {

    _Int64ArrayView@7027147 _Int64ArrayView@7027147._@7027147(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x124908
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x12003c
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf96c4
    }

    Int64List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cad0
    }
}

class _Int32ArrayView@7027147 extends __Int32ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 implements Int32List {

    _Int32ArrayView@7027147 _Int32ArrayView@7027147._@7027147(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x124e30
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x120810
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf98d8
    }

    Int32List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cb58
    }
}

class _ByteDataView@7027147 extends Object implements ByteData {

    _ByteDataView@7027147 _ByteDataView@7027147._@7027147(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _ByteBuffer@7027147 get:buffer(DynamicType) {
        Code at absolute offset: 0x157590
    }

    int getUint8(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int getUint16(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType setUint16(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int getInt32(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType setInt32(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int getUint32(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType setUint32(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int getInt64(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType setInt64(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType setFloat32(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    double getFloat64(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType setFloat64(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int get:offsetInBytes(DynamicType) {
        Code at absolute offset: 0xe41b4
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0xf8ae
    }
}

class num extends Object implements Comparable {

    num parse(DynamicType, DynamicType) {
        Code at absolute offset: 0x1ca04
    }

    num tryParse(DynamicType) {
        Code at absolute offset: 0x1ca6c
    }
}

class _LibraryPrefix@0150898 extends Object {
    Map _loads@0150898

    Map get:_loads@0150898() {
        Code at absolute offset: 0xfaa0
    }

    bool _isLoaded@0150898(DynamicType) {
        Code at absolute offset: 0x307f0
    }

    VoidType _setLoaded@0150898(DynamicType) {
        Code at absolute offset: 0xe341c
    }

    Object _loadingUnit@0150898(DynamicType) {
        Code at absolute offset: 0xe33e8
    }

    VoidType _issueLoad@0150898(DynamicType) {
        Code at absolute offset: 0xe33b4
    }
}

class FutureOr<T> extends Object {
}

class _RawReceivePortImpl@1026248 extends Object implements RawReceivePort {
    Map _handlerMap@1026248

    Map get:_handlerMap@1026248() {
        Code at absolute offset: 0xfaa0
    }

    _RawReceivePortImpl@1026248 _RawReceivePortImpl@1026248.(DynamicType) {
        Code at absolute offset: 0x6d570
    }

    VoidType close(DynamicType) {
        Code at absolute offset: 0x6d4f8
    }

    SendPort get:sendPort(DynamicType) {
        Code at absolute offset: 0x6d48c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x188970
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15ccb0
    }

    DynamicType _get_id@1026248(DynamicType) {
        Code at absolute offset: 0x6ccdc
    }

    DynamicType _get_sendport@1026248(DynamicType) {
        Code at absolute offset: 0x6d27c
    }

    DynamicType _lookupHandler@1026248(DynamicType) {
        Code at absolute offset: 0x6d434
    }

    VoidType _handleMessage@1026248(DynamicType, DynamicType) {
        Code at absolute offset: 0x6ce3c
    }

    DynamicType _closeInternal@1026248(DynamicType) {
        Code at absolute offset: 0x6ce08
    }

    VoidType set:handler(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType _initHandlerMap@1026248() {
        Code at absolute offset: 0x6cd34
    }
}

class _SendPortImpl@1026248 extends Object implements SendPort {

    VoidType send(DynamicType, DynamicType) {
        Code at absolute offset: 0x6d1a8
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1888ac
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15cc40
    }

    DynamicType _get_id@1026248(DynamicType) {
        Code at absolute offset: 0x6d248
    }

    DynamicType _get_hashcode@1026248(DynamicType) {
        Code at absolute offset: 0x6d214
    }

    VoidType _sendInternal@1026248(DynamicType, DynamicType) {
        Code at absolute offset: 0x6d1d8
    }
}

class _ExternalFloat64x2Array@7027147 extends __Float64x2List&_TypedList&_Float64x2ListMixin@7027147 implements Float64x2List {

    Float64x2 [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1238a0
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11e964
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf8bfc
    }

    Float64x2List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x161ec4
    }

    Float64x2 _getIndexedFloat64x2@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0xf8e38
    }

    VoidType _setIndexedFloat64x2@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf8de4
    }
}

class _Float64x2ArrayView@7027147 extends __Float64x2ArrayView&_TypedListView&_Float64x2ListMixin@7027147 implements Float64x2List {

    Float64x2 [](DynamicType, DynamicType) {
        Code at absolute offset: 0x123950
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11ea5c
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf8bfc
    }

    Float64x2List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x161ec4
    }
}

class _Float64x2List@7027147 extends __Float64x2List&_TypedList&_Float64x2ListMixin@7027147 implements Float64x2List {

    Float64x2 [](DynamicType, DynamicType) {
        Code at absolute offset: 0x123a2c
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11eb80
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf8bfc
    }

    Float64x2List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x161ec4
    }

    Float64x2 _getIndexedFloat64x2@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0xf8e38
    }

    VoidType _setIndexedFloat64x2@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf8de4
    }
}

class _ExternalInt32x4Array@7027147 extends __Int32x4List&_TypedList&_Int32x4ListMixin@7027147 implements Int32x4List {

    Int32x4 [](DynamicType, DynamicType) {
        Code at absolute offset: 0x123b2c
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11ecc8
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf8bfc
    }

    Int32x4List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x1625cc
    }

    Int32x4 _getIndexedInt32x4@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _setIndexedInt32x4@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _Int32x4ArrayView@7027147 extends __Int32x4ArrayView&_TypedListView&_Int32x4ListMixin@7027147 implements Int32x4List {

    Int32x4 [](DynamicType, DynamicType) {
        Code at absolute offset: 0x123c20
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11eddc
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf8bfc
    }

    Int32x4List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x1625cc
    }
}

class _Int32x4List@7027147 extends __Int32x4List&_TypedList&_Int32x4ListMixin@7027147 implements Int32x4List {

    Int32x4 [](DynamicType, DynamicType) {
        Code at absolute offset: 0x123d24
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11ef00
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf8bfc
    }

    Int32x4List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x1625cc
    }

    VoidType _setIndexedInt32x4@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _ExternalFloat32x4Array@7027147 extends __Float32x4List&_TypedList&_Float32x4ListMixin@7027147 implements Float32x4List {

    Float32x4 [](DynamicType, DynamicType) {
        Code at absolute offset: 0x123e68
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11f064
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf8bfc
    }

    Float32x4List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x1653e0
    }

    VoidType _setIndexedFloat32x4@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _Float32x4ArrayView@7027147 extends __Float32x4ArrayView&_TypedListView&_Float32x4ListMixin@7027147 implements Float32x4List {

    Float32x4 [](DynamicType, DynamicType) {
        Code at absolute offset: 0x123f5c
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11f178
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf8bfc
    }

    Float32x4List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x1653e0
    }
}

class _Float32x4List@7027147 extends __Float32x4List&_TypedList&_Float32x4ListMixin@7027147 implements Float32x4List {

    Float32x4 [](DynamicType, DynamicType) {
        Code at absolute offset: 0x124060
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11f29c
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf8bfc
    }

    Float32x4List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x1653e0
    }

    VoidType _setIndexedFloat32x4@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _ExternalFloat64Array@7027147 extends __Float64List&_TypedList&_DoubleListMixin&_TypedDoubleListMixin@7027147 implements Float64List {

    double [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1241a4
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11f400
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf96c4
    }

    Float64List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x173f2c
    }
}

class _Float64List@7027147 extends __Float64List&_TypedList&_DoubleListMixin&_TypedDoubleListMixin@7027147 implements Float64List {

    double [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1243a0
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11f63c
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf96c4
    }

    Float64List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x173f2c
    }
}

class _ExternalFloat32Array@7027147 extends __Float32List&_TypedList&_DoubleListMixin&_TypedDoubleListMixin@7027147 implements Float32List {

    double [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1244e8
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11f7a4
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf98d8
    }

    Float32List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x173f70
    }
}

class _Float32ArrayView@7027147 extends __Float32ArrayView&_TypedListView&_DoubleListMixin&_TypedDoubleListMixin@7027147 implements Float32List {

    double [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1245e4
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11f8c0
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf98d8
    }

    Float32List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x173f70
    }
}

class _Float32List@7027147 extends __Float32List&_TypedList&_DoubleListMixin&_TypedDoubleListMixin@7027147 implements Float32List {

    double [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1246ec
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11f9e8
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf98d8
    }

    Float32List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x173f70
    }
}

class _ExternalUint64Array@7027147 extends __Uint64List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Uint64List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x12483c
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11fb58
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf96c4
    }

    Uint64List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13ca8c
    }

    int _getIndexedUint64@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _Uint64ArrayView@7027147 extends __Uint64ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 implements Uint64List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x124908
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11fc78
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf96c4
    }

    Uint64List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13ca8c
    }
}

class _Uint64List@7027147 extends __Uint64List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Uint64List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1249e4
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11fda4
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf96c4
    }

    Uint64List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13ca8c
    }

    int _getIndexedUint64@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _ExternalInt64Array@7027147 extends __Int64List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Int64List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x12483c
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11ff1c
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf96c4
    }

    Int64List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cad0
    }

    int _getIndexedInt64@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _Int64List@7027147 extends __Int64List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Int64List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1249e4
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x120168
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf96c4
    }

    Int64List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cad0
    }

    int _getIndexedInt64@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _ExternalUint32Array@7027147 extends __Uint32List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Uint32List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x124b08
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1202e0
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf98d8
    }

    Uint32List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cb14
    }
}

class _Uint32ArrayView@7027147 extends __Uint32ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 implements Uint32List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x124bc4
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x120408
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf98d8
    }

    Uint32List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cb14
    }
}

class _Uint32List@7027147 extends __Uint32List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Uint32List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x124c8c
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x12053c
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf98d8
    }

    Uint32List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cb14
    }
}

class _ExternalInt32Array@7027147 extends __Int32List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Int32List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x124d74
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1206b8
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf98d8
    }

    Int32List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cb58
    }
}

class _Int32List@7027147 extends __Int32List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Int32List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x124efc
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x120974
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xf98d8
    }

    Int32List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cb58
    }
}

class _ExternalUint16Array@7027147 extends __Uint16List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Uint16List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x124fe8
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x120b20
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xd8410
    }

    Uint16List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cb9c
    }
}

class _Uint16ArrayView@7027147 extends __Uint16ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 implements Uint16List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1250a4
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x120c48
    }

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x118ba8
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xd8410
    }

    Uint16List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cb9c
    }
}

class _Uint16List@7027147 extends __Uint16List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Uint16List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x12516c
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x120d7c
    }

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x118cf4
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xd8410
    }

    Uint16List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cb9c
    }
}

class _ExternalInt16Array@7027147 extends __Int16List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Int16List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x125254
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x120efc
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xd8410
    }

    Int16List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cbe0
    }
}

class _Int16ArrayView@7027147 extends __Int16ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 implements Int16List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x125310
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x121048
    }

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1198c4
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xd8410
    }

    Int16List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cbe0
    }
}

class _Int16List@7027147 extends __Int16List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Int16List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1253d8
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1211a4
    }

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x119a10
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xd8410
    }

    Int16List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cbe0
    }
}

class _ExternalUint8ClampedArray@7027147 extends __Uint8ClampedList&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Uint8ClampedList {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1254c0
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x121348
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xfbbd0
    }

    Uint8ClampedList _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cc24
    }
}

class _Uint8ClampedArrayView@7027147 extends __Uint8ClampedArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 implements Uint8ClampedList {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1255b4
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x121514
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xfbbd0
    }

    Uint8ClampedList _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cc24
    }
}

class _Uint8ClampedList@7027147 extends __Uint8ClampedList&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Uint8ClampedList {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x125678
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x12166c
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xfbbd0
    }

    Uint8ClampedList _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cc24
    }
}

class _ExternalUint8Array@7027147 extends __Uint8List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Uint8List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1254c0
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x121830
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xfbbd0
    }

    Uint8List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cc68
    }
}

class _Uint8List@7027147 extends __Uint8List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Uint8List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x125678
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x121aec
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xfbbd0
    }

    Uint8List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13cc68
    }
}

class _ExternalInt8Array@7027147 extends __Int8List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Int8List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x125764
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x121c70
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xfbbd0
    }

    Int8List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13ccac
    }
}

class _Int8ArrayView@7027147 extends __Int8ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 implements Int8List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x125820
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x121d8c
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xfbbd0
    }

    Int8List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13ccac
    }
}

class _Int8List@7027147 extends __Int8List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 implements Int8List {

    int [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1258e4
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x121ee4
    }

    int get:elementSizeInBytes(DynamicType) {
        Code at absolute offset: 0xfbbd0
    }

    Int8List _createList@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x13ccac
    }
}

class DynamicLibrary extends Object {

    int getHandle(DynamicType) {
        Code at absolute offset: 0x15cac4
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1884a8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15ca80
    }
}

class Pointer<T> extends NativeType {

    int get:address(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1885ac
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x156714
    }
}

class NativeType extends Object {
}

class _CapabilityImpl@1026248 extends Object implements Capability {

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x188a34
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15cd30
    }

    DynamicType _equals@1026248(DynamicType, DynamicType) {
        Code at absolute offset: 0x15cdd4
    }

    DynamicType _get_hashcode@1026248(DynamicType) {
        Code at absolute offset: 0x15cda0
    }
}

class _Type@0150898 extends _AbstractType@0150898 {

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15d29c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x188ed8
    }
}

class _MirrorReference@2408521 extends Object {

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x188810
    }
}

class Float extends Object {
}

class Double extends Object {
}

class Int64 extends Object {
}

class Int32 extends Object {
}

class Void extends Object {
}

class _TransferableTypedDataImpl@1026248 extends Object implements TransferableTypedData {
}

class Uint8 extends _NativeInteger@8050071 {
}

class Float extends _NativeDouble@8050071 {
}

class Int64 extends _NativeInteger@8050071 {
}

class NativeFunction<T> extends NativeType {
}

class Uint16 extends _NativeInteger@8050071 {
}

class Uint32 extends _NativeInteger@8050071 {
}

class Handle extends NativeType {
}

class Uint64 extends _NativeInteger@8050071 {
}

class Int16 extends _NativeInteger@8050071 {
}

class Int32 extends _NativeInteger@8050071 {
}

class Int8 extends _NativeInteger@8050071 {
}

class Double extends _NativeDouble@8050071 {
}

class IntPtr extends _NativeInteger@8050071 {
}

class Void extends NativeType {
}

class _UserTag@5383715 extends Object implements UserTag {
}

class _TypeParameter@0150898 extends _AbstractType@0150898 {
}

class _TypeRef@0150898 extends _AbstractType@0150898 {
}

class _StackTrace@0150898 extends Object implements StackTrace {
}

class _WeakProperty@0150898 extends Object {

    _WeakProperty@0150898 _WeakProperty@0150898.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x64668
    }

    DynamicType get:key(DynamicType) {
        Code at absolute offset: 0x1ae59e
    }

    DynamicType get:value(DynamicType) {
        Code at absolute offset: 0x1ae52e
    }

    VoidType set:value(DynamicType, DynamicType) {
        Code at absolute offset: 0x1ae4b2
    }

    _WeakProperty@0150898 _new@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x645e8
    }

    DynamicType _getKey@0150898(DynamicType) {
        Code at absolute offset: 0x1ae5c4
    }

    DynamicType _getValue@0150898(DynamicType) {
        Code at absolute offset: 0x1ae554
    }

    DynamicType _setValue@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x1ae4dc
    }
}

class _Float64x2@7027147 extends Object implements Float64x2 {

    Float64x2 +(DynamicType, DynamicType) {
        Code at absolute offset: 0x1aea08
    }

    Float64x2 -(DynamicType, DynamicType) {
        Code at absolute offset: 0x1ae864
    }

    Float64x2 *(DynamicType, DynamicType) {
        Code at absolute offset: 0x1ae6c0
    }
}

class _Int32x4@7027147 extends Object implements Int32x4 {

    Int32x4 +(DynamicType, DynamicType) {
        Code at absolute offset: 0x1aec54
    }

    Int32x4 -(DynamicType, DynamicType) {
        Code at absolute offset: 0x1aeb58
    }
}

class _Float32x4@7027147 extends Object implements Float32x4 {

    Float32x4 +(DynamicType, DynamicType) {
        Code at absolute offset: 0x1af0e4
    }

    Float32x4 -(DynamicType, DynamicType) {
        Code at absolute offset: 0x1aef40
    }

    Float32x4 *(DynamicType, DynamicType) {
        Code at absolute offset: 0x1aed9c
    }
}

class _InternalLinkedHashMap@3220832<K, V> extends __InternalLinkedHashMap&_HashVMBase&MapMixin&_LinkedHashMapMixin&_HashBase&_OperatorEqualsAndHashCode@3220832 implements LinkedHashMap {

    _InternalLinkedHashMap@3220832 _InternalLinkedHashMap@3220832.(DynamicType) {
        Code at absolute offset: 0x209a4
    }
}

class _GrowableList@0150898<T> extends ListBase {
    _List@0150898 _emptyList@0150898

    _List@0150898 get:_emptyList@0150898() {
        Code at absolute offset: 0xfaa0
    }

    VoidType insert(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1928cc
    }

    T removeAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x108e6c
    }

    bool remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x82a38
    }

    VoidType insertAll(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18c5dc
    }

    VoidType setAll(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18c988
    }

    List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10bb9c
    }

    _GrowableList@0150898 _GrowableList@0150898.(DynamicType, DynamicType) {
        Code at absolute offset: 0xe960
    }

    _GrowableList@0150898 _GrowableList@0150898.withCapacity(DynamicType, DynamicType) {
        Code at absolute offset: 0x16828
    }

    _GrowableList@0150898 _GrowableList@0150898.generate(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _GrowableList@0150898 _GrowableList@0150898._withData@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0xe568
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    VoidType set:length(DynamicType, DynamicType) {
        Code at absolute offset: 0xe720
    }

    T [](DynamicType, DynamicType) {
        Code at absolute offset: 0x125c1c
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x12217c
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x122f12
    }

    VoidType addAll(DynamicType, DynamicType) {
        Code at absolute offset: 0x50744
    }

    T removeLast(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    T get:first(DynamicType) {
        Code at absolute offset: 0x1345a4
    }

    T get:last(DynamicType) {
        Code at absolute offset: 0x1291f4
    }

    T get:single(DynamicType) {
        Code at absolute offset: 0x1339a4
    }

    _List@0150898 _allocateData@0150898(DynamicType) {
        Code at absolute offset: 0xe668
    }

    VoidType _grow@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0xe464
    }

    VoidType _shrink@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe840
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x13c718
    }

    String join(DynamicType, DynamicType) {
        Code at absolute offset: 0x139510
    }

    String _joinWithSeparator@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x1399bc
    }

    T elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x12b43c
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x135c50
    }

    bool get:isNotEmpty(DynamicType) {
        Code at absolute offset: 0x1350bc
    }

    VoidType clear(DynamicType) {
        Code at absolute offset: 0x5b050
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1559a4
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x13663c
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x13a1ec
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x12ca84
    }
}

class _ImmutableList@0150898<E> extends UnmodifiableListBase {

    _ImmutableList@0150898 _ImmutableList@0150898._from@0150898(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2fda4
    }

    E [](DynamicType, DynamicType) {
        Code at absolute offset: 0x125a98
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10b7c0
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x13b2fc
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x136544
    }

    E get:first(DynamicType) {
        Code at absolute offset: 0x1344e8
    }

    E get:last(DynamicType) {
        Code at absolute offset: 0x129120
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x139fb8
    }
}

class _List@0150898<E> extends FixedLengthListBase {

    _List@0150898 _List@0150898.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _List@0150898 _List@0150898.filled(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    E [](DynamicType, DynamicType) {
        Code at absolute offset: 0x125b3c
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1220dc
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    _List@0150898 _slice@0150898(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _List@0150898 _sliceInternal@0150898(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10bb10
    }

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11dbc8
    }

    List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10b92c
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x13b2fc
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x136544
    }

    E get:first(DynamicType) {
        Code at absolute offset: 0x1344e8
    }

    E get:last(DynamicType) {
        Code at absolute offset: 0x129120
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x13a0b0
    }
}

class bool extends Object {

    int get:_identityHashCode@0150898(DynamicType) {
        Code at absolute offset: 0x15d080
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15d080
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1559cc
    }
}

class _ExternalTwoByteString@0150898 extends _StringBase@0150898 {

    int codeUnitAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x16f410
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x18868c
    }
}

class _ExternalOneByteString@0150898 extends _StringBase@0150898 {

    int codeUnitAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x16f4c4
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x18868c
    }
}

class _TwoByteString@0150898 extends _StringBase@0150898 {

    String _allocateFromTwoByteList@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11f1c
    }

    int codeUnitAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x16f57c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1886d0
    }
}

class _OneByteString@0150898 extends _StringBase@0150898 {

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15cbd0
    }

    int codeUnitAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x16f62c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x188770
    }

    String _substringUncheckedNative@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x187734
    }

    List _splitWithCharCode@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x1678fc
    }

    List split(DynamicType, DynamicType) {
        Code at absolute offset: 0x167870
    }

    DynamicType _concatAll@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x13adc
    }

    int indexOf(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15e948
    }

    bool contains(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15f694
    }

    String *(DynamicType, DynamicType) {
        Code at absolute offset: 0x56f04
    }

    String padLeft(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x162424
    }

    String toLowerCase(DynamicType) {
        Code at absolute offset: 0x15f2c0
    }

    String toUpperCase(DynamicType) {
        Code at absolute offset: 0x161f88
    }

    _OneByteString@0150898 _allocate@0150898(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int _setRange@0150898(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x12fc4
    }
}

class _Double@0150898 extends Object implements double {
    List _cache@0150898
    int _cacheEvictIndex@0150898

    List get:_cache@0150898() {
        Code at absolute offset: 0xfaa0
    }

    _Double@0150898 _Double@0150898.fromInteger(DynamicType, DynamicType) {
        Code at absolute offset: 0x1c8b8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15d0a8
    }

    int get:_identityHashCode@0150898(DynamicType) {
        Code at absolute offset: 0x172134
    }

    double +(DynamicType, DynamicType) {
        Code at absolute offset: 0x15dedc
    }

    double -(DynamicType, DynamicType) {
        Code at absolute offset: 0x15e1d4
    }

    double *(DynamicType, DynamicType) {
        Code at absolute offset: 0x189118
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x188bd4
    }

    bool _equal@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x188cb8
    }

    bool _equalToInteger@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x15e584
    }

    bool <(DynamicType, DynamicType) {
        Code at absolute offset: 0x16224c
    }

    bool >(DynamicType, DynamicType) {
        Code at absolute offset: 0x16525c
    }

    bool _greaterThan@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x1652f0
    }

    double _addFromInteger@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x187884
    }

    double _subFromInteger@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x16e28c
    }

    double _mulFromInteger@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x16b70c
    }

    bool _greaterThanFromInteger@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x16b5dc
    }

    bool get:isNegative(DynamicType) {
        Code at absolute offset: 0x163714
    }

    bool get:isNaN(DynamicType) {
        Code at absolute offset: 0x162610
    }

    bool get:isFinite(DynamicType) {
        Code at absolute offset: 0x1603e4
    }

    int round(DynamicType) {
        Code at absolute offset: 0x188580
    }

    int floor(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int ceil(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    double roundToDouble(DynamicType) {
        Code at absolute offset: 0x452d0
    }

    double floorToDouble(DynamicType) {
        Code at absolute offset: 0xba730
    }

    double ceilToDouble(DynamicType) {
        Code at absolute offset: 0xcdb78
    }

    num clamp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xdd6b8
    }

    int toInt(DynamicType) {
        Code at absolute offset: 0x45238
    }

    double toDouble(DynamicType) {
        Code at absolute offset: 0x155994
    }

    String _toString@0150898(DynamicType) {
        Code at absolute offset: 0x155cac
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1559f8
    }

    String toStringAsFixed(DynamicType, DynamicType) {
        Code at absolute offset: 0x90ed4
    }

    String _toStringAsFixed@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x90fbc
    }

    int compareTo(DynamicType, DynamicType) {
        Code at absolute offset: 0x1325bc
    }
}

class _Mint@0150898 extends _IntegerImplementation@0150898 {

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x155994
    }

    int get:_identityHashCode@0150898(DynamicType) {
        Code at absolute offset: 0x155994
    }

    int get:bitLength(DynamicType) {
        Code at absolute offset: 0x18907c
    }

    int _bitAndFromSmi@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x187af4
    }
}

class _Smi@0150898 extends _IntegerImplementation@0150898 {

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x155994
    }

    int get:_identityHashCode@0150898(DynamicType) {
        Code at absolute offset: 0x155994
    }

    int get:bitLength(DynamicType) {
        Code at absolute offset: 0x1890fc
    }

    int &(DynamicType, DynamicType) {
        Code at absolute offset: 0x188b90
    }

    int _bitAndFromSmi@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x187bc0
    }

    int _positiveBase10Length@0150898(DynamicType) {
        Code at absolute offset: 0x155f94
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x155d48
    }

    int _negativeBase10Length@0150898(DynamicType) {
        Code at absolute offset: 0x156420
    }

    String _negativeToString@0150898(DynamicType) {
        Code at absolute offset: 0x156104
    }
}

class _IntegerImplementation@0150898 extends Object implements int {

    num +(DynamicType, DynamicType) {
        Code at absolute offset: 0x15dfc8
    }

    num -(DynamicType, DynamicType) {
        Code at absolute offset: 0x15e2c0
    }

    num *(DynamicType, DynamicType) {
        Code at absolute offset: 0x189204
    }

    int ~/(DynamicType, DynamicType) {
        Code at absolute offset: 0x1c10c
    }

    int unary-(DynamicType) {
        Code at absolute offset: 0x38be4
    }

    int &(DynamicType, DynamicType) {
        Code at absolute offset: 0x188b34
    }

    int |(DynamicType, DynamicType) {
        Code at absolute offset: 0x11ba4
    }

    num remainder(DynamicType, DynamicType) {
        Code at absolute offset: 0x1c088
    }

    int _bitAndFromInteger@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x187b20
    }

    int _bitOrFromInteger@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x11c00
    }

    int _addFromInteger@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x187904
    }

    int _subFromInteger@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x16e30c
    }

    int _mulFromInteger@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x16b7d4
    }

    int _truncDivFromInteger@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x1c1dc
    }

    int _remainderFromInteger@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool <(DynamicType, DynamicType) {
        Code at absolute offset: 0x1622dc
    }

    bool >(DynamicType, DynamicType) {
        Code at absolute offset: 0x165370
    }

    bool <=(DynamicType, DynamicType) {
        Code at absolute offset: 0xb0c44
    }

    bool _greaterThanFromInteger@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x16b65c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x188d38
    }

    bool _equalToInteger@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x15e604
    }

    int abs(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool get:isOdd(DynamicType) {
        Code at absolute offset: 0x2e640
    }

    bool get:isNaN(DynamicType) {
        Code at absolute offset: 0x31fa8
    }

    bool get:isNegative(DynamicType) {
        Code at absolute offset: 0x163748
    }

    bool get:isFinite(DynamicType) {
        Code at absolute offset: 0x80f34
    }

    int compareTo(DynamicType, DynamicType) {
        Code at absolute offset: 0x1327f0
    }

    int round(DynamicType) {
        Code at absolute offset: 0x155994
    }

    double toDouble(DynamicType) {
        Code at absolute offset: 0x188b04
    }

    String toRadixString(DynamicType, DynamicType) {
        Code at absolute offset: 0x38720
    }

    String _toPow2String@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x38748
    }

    String _minInt64ToRadixString@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x38970
    }
}

class _Closure@0150898 extends Object implements Function {
    DynamicType _instantiator_type_arguments@0150898
    DynamicType _function_type_arguments@0150898
    DynamicType _delayed_type_arguments@0150898
    DynamicType _function@0150898
    DynamicType _context@0150898
    DynamicType _hash@0150898

    DynamicType get:_instantiator_type_arguments@0150898(DynamicType) {
        Code at absolute offset: 0xe3bfc
    }

    VoidType set:_instantiator_type_arguments@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x80ff8
    }

    DynamicType get:_function_type_arguments@0150898(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    VoidType set:_function_type_arguments@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x594f0
    }

    DynamicType get:_delayed_type_arguments@0150898(DynamicType) {
        Code at absolute offset: 0x415bc
    }

    VoidType set:_delayed_type_arguments@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x596ac
    }

    DynamicType get:_function@0150898(DynamicType) {
        Code at absolute offset: 0xa451c
    }

    VoidType set:_function@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0xe2d0c
    }

    DynamicType get:_context@0150898(DynamicType) {
        Code at absolute offset: 0x36838
    }

    VoidType set:_context@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x1afe54
    }

    DynamicType get:_hash@0150898(DynamicType) {
        Code at absolute offset: 0x1afe48
    }

    VoidType set:_hash@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x1afe14
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x188e3c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15d164
    }

    _Closure@0150898 get:call(DynamicType) {
        Code at absolute offset: 0x1afaae
    }

    int _computeHash@0150898(DynamicType) {
        Code at absolute offset: 0x15d21c
    }
}

class Never {
}

class Null extends Object {

    int get:_identityHashCode@0150898(DynamicType) {
        Code at absolute offset: 0x158f5c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158f5c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x15590c
    }
}

class Object {
    Random _hashCodeRnd@0150898

    Random get:_hashCodeRnd@0150898() {
        Code at absolute offset: 0xfaa0
    }

    int _objectHashCode@0150898(DynamicType) {
        Code at absolute offset: 0x14fc00
    }

    int get:_identityHashCode@0150898(DynamicType) {
        Code at absolute offset: 0x15d328
    }

    String _toString@0150898(DynamicType) {
        Code at absolute offset: 0xf8e0
    }

    bool _haveSameRuntimeType@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x7015c
    }

    bool _instanceOf@0150898(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1aff58
    }

    bool _simpleInstanceOf@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x1afed8
    }

    bool _simpleInstanceOfTrue@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x80f34
    }

    bool _simpleInstanceOfFalse@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x31fa8
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x189060
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15d328
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x156610
    }

    DynamicType noSuchMethod(DynamicType, DynamicType) {
        Code at absolute offset: 0x1afeb0
    }

    Type get:runtimeType(DynamicType) {
        Code at absolute offset: 0x165840
    }
}

class _SyncIterator@0150898<T> extends Object implements Iterator {

    VoidType set:_current@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:_yieldEachIterable@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    T get:current(DynamicType) {
        Code at absolute offset: 0xed9c
    }

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xe020
    }
}

class Iterator<E> extends Object {
}

class Iterable<E> extends Object {

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x12eaa0
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13215c
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x1319f4
    }

    String join(DynamicType, DynamicType) {
        Code at absolute offset: 0x12f75c
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x13066c
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x12ca84
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x132f9c
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x12cdec
    }

    bool get:isNotEmpty(DynamicType) {
        Code at absolute offset: 0x129b04
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x1287ac
    }

    E get:first(DynamicType) {
        Code at absolute offset: 0x12917c
    }

    E get:single(DynamicType) {
        Code at absolute offset: 0x127ea0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x140c68
    }
}

class Set<E> extends EfficientLengthIterable {
}

class EfficientLengthIterable<T> extends Iterable {
}

class MappedIterator<S, T> extends Iterator {

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xe9d4
    }

    T get:current(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class WhereIterator<E> extends Iterator {

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xeae4
    }

    E get:current(DynamicType) {
        Code at absolute offset: 0xee04
    }
}

class SkipIterator<E> extends Iterator {

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xec0c
    }

    E get:current(DynamicType) {
        Code at absolute offset: 0xee04
    }
}

class _FixedSizeArrayIterator@0150898<E> extends Object implements Iterator {

    _FixedSizeArrayIterator@0150898 _FixedSizeArrayIterator@0150898.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    E get:current(DynamicType) {
        Code at absolute offset: 0xee40
    }

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xecdc
    }
}

class _ImmutableMapKeyIterator@0150898<E> extends Object implements Iterator {

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xee54
    }

    E get:current(DynamicType) {
        Code at absolute offset: 0xe41b4
    }
}

class _ImmutableMapValueIterator@0150898<E> extends Object implements Iterator {

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xef70
    }

    E get:current(DynamicType) {
        Code at absolute offset: 0xe41b4
    }
}

class RegExp extends Object implements Pattern {
    Map _cache@0150898
    LinkedList _recentlyUsed@0150898

    Map get:_cache@0150898() {
        Code at absolute offset: 0xfaa0
    }

    LinkedList get:_recentlyUsed@0150898() {
        Code at absolute offset: 0xfaa0
    }

    RegExp RegExp.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2a134
    }
}

class Pattern extends Object {
}

class LinkedList<E> extends Iterable {

    VoidType addFirst(DynamicType, DynamicType) {
        Code at absolute offset: 0x2a428
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0xf4de
    }

    bool remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x2a84c
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12d960
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x132e6c
    }

    E get:first(DynamicType) {
        Code at absolute offset: 0x12902c
    }

    E get:last(DynamicType) {
        Code at absolute offset: 0x1095e0
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x131700
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x12cc74
    }

    VoidType _insertBefore@3220832(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf55c
    }

    VoidType _unlink@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0x2a518
    }
}

class StateError extends Error {

    String get:message(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14080c
    }
}

class Error extends Object {
    StackTrace _stackTrace@0150898

    StackTrace get:_stackTrace@0150898(DynamicType) {
        Code at absolute offset: 0xe3bfc
    }

    VoidType set:_stackTrace@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x80f04
    }

    String safeToString(DynamicType) {
        Code at absolute offset: 0xe3b34
    }

    String _stringToSafeString@0150898(DynamicType) {
        Code at absolute offset: 0xf960
    }

    String _objectToString@0150898(DynamicType) {
        Code at absolute offset: 0xf8b8
    }

    StackTrace get:stackTrace(DynamicType) {
        Code at absolute offset: 0x13a1d8
    }
}

class StackTrace extends Object {
}

class String extends Object implements Comparable, Pattern {

    String String.fromCharCodes(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x156d4
    }

    String String.fromCharCode(DynamicType, DynamicType) {
        Code at absolute offset: 0xfeac
    }

    String String.fromEnvironment(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfe0c
    }
}

class Comparable<T> extends Object {

    int compare(DynamicType, DynamicType) {
        Code at absolute offset: 0xfc84
    }
}

class RangeError extends ArgumentError {

    RangeError RangeError.(DynamicType, DynamicType) {
        Code at absolute offset: 0x107fc
    }

    RangeError RangeError.value(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    RangeError RangeError.range(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10020
    }

    int checkValidIndex(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x105a8
    }

    int checkValidRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x103b0
    }

    int checkNotNegative(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10308
    }

    String get:_errorExplanation@0150898(DynamicType) {
        Code at absolute offset: 0x171708
    }
}

class ArgumentError extends Error {

    DynamicType get:message(DynamicType) {
        Code at absolute offset: 0x10172
    }

    ArgumentError ArgumentError.(DynamicType, DynamicType) {
        Code at absolute offset: 0x102a0
    }

    ArgumentError ArgumentError.value(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x101cc
    }

    T checkNotNull(DynamicType, DynamicType) {
        Code at absolute offset: 0x1017c
    }

    String get:_errorName@0150898(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String get:_errorExplanation@0150898(DynamicType) {
        Code at absolute offset: 0x12f6a4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x13f2bc
    }
}

class IndexError extends ArgumentError implements RangeError {

    IndexError IndexError.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10698
    }

    String get:_errorExplanation@0150898(DynamicType) {
        Code at absolute offset: 0x171890
    }
}

class _StringBase@0150898 extends Object implements String {

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15cb44
    }

    int get:_identityHashCode@0150898(DynamicType) {
        Code at absolute offset: 0x171d38
    }

    bool get:_isOneByte@0150898(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String createFromCharCodes(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11ca0
    }

    int _scanCodeUnits@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11fa4
    }

    String _createStringFromIterable@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10ca4
    }

    String _createOneByteString@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1145c
    }

    String _createFromCodePoints@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10850
    }

    String [](DynamicType, DynamicType) {
        Code at absolute offset: 0x10a94
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x1407c
    }

    String +(DynamicType, DynamicType) {
        Code at absolute offset: 0x10958
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x155994
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x152f8
    }

    int compareTo(DynamicType, DynamicType) {
        Code at absolute offset: 0x132184
    }

    bool _substringMatches@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1307c
    }

    bool endsWith(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool startsWith(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x154a8
    }

    int indexOf(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15e724
    }

    int lastIndexOf(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13e34
    }

    String substring(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13cd4
    }

    String _substringUnchecked@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x136e8
    }

    String _substringUncheckedNative@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1876ac
    }

    int _firstNonWhitespace@0150898(DynamicType) {
        Code at absolute offset: 0x14f30
    }

    int _lastNonWhitespace@0150898(DynamicType) {
        Code at absolute offset: 0x1409c
    }

    String trim(DynamicType) {
        Code at absolute offset: 0x15230
    }

    String trimLeft(DynamicType) {
        Code at absolute offset: 0x14854
    }

    String trimRight(DynamicType) {
        Code at absolute offset: 0x13380
    }

    String padLeft(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16234c
    }

    bool contains(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15f560
    }

    String replaceRange(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x12a10
    }

    int _addReplaceSlice@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x12d70
    }

    String replaceAll(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x14bdc
    }

    String _joinReplaceAllOneByteResult@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x143a4
    }

    String _joinReplaceAllResult@0150898(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x12ce0
    }

    String _interpolateSingle@0150898(DynamicType) {
        Code at absolute offset: 0x147c8
    }

    String _interpolate@0150898(DynamicType) {
        Code at absolute offset: 0x13840
    }

    Iterable allMatches(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16d90c
    }

    Match matchAsPrefix(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1271c
    }

    List split(DynamicType, DynamicType) {
        Code at absolute offset: 0x167360
    }

    String toUpperCase(DynamicType) {
        Code at absolute offset: 0x161f08
    }

    String toLowerCase(DynamicType) {
        Code at absolute offset: 0x15f240
    }

    String _concatRange@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10b90
    }

    String _concatRangeNative@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10c1c
    }
}

class :: {
    bool is64Bit
    _Closure@0150898 _printClosure@11040228
    _Closure@0150898 printToZone

    bool get:is64Bit() {
        Code at absolute offset: 0xfaa0
    }

    _Closure@0150898 get:_printClosure@11040228() {
        Code at absolute offset: 0x1194c
    }

    String allocateOneByteString(DynamicType) {
        Code at absolute offset: 0x155d8
    }

    VoidType writeIntoOneByteString(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11834
    }

    String allocateTwoByteString(DynamicType) {
        Code at absolute offset: 0x11850
    }

    VoidType writeIntoTwoByteString(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11aa4
    }

    bool _inquireIs64Bit@11040228() {
        Code at absolute offset: 0x11680
    }

    bool _classRangeCheck@11040228(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x119fc
    }

    DynamicType _prependTypeArguments@11040228(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x119b8
    }

    DynamicType _boundsCheckForPartialInstantiation@11040228(DynamicType, DynamicType) {
        Code at absolute offset: 0x1197c
    }

    VoidType spawnFunction(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x117cc
    }

    VoidType _unsupportedPrint@11040228(DynamicType) {
        Code at absolute offset: 0x11abc
    }

    int parseHexByte(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int _checkCount@11040228(DynamicType) {
        Code at absolute offset: 0x1176c
    }

    List makeListFixedLength(DynamicType) {
        Code at absolute offset: 0x115bc
    }

    VoidType printToConsole(DynamicType) {
        Code at absolute offset: 0x116f4
    }
}

class UnsupportedError extends Error {

    String get:message(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    UnsupportedError UnsupportedError.(DynamicType, DynamicType) {
        Code at absolute offset: 0x11ae8
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1407b0
    }
}

class _StringMatch@0150898 extends Object implements Match {

    int get:end(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String [](DynamicType, DynamicType) {
        Code at absolute offset: 0x12958
    }

    String group(DynamicType, DynamicType) {
        Code at absolute offset: 0x12984
    }
}

class Match extends Object {
}

class _JsonStringStringifier@10003594 extends _JsonStringifier@10003594 {

    _JsonStringStringifier@10003594 _JsonStringStringifier@10003594.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String stringify(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfa10
    }

    VoidType printOn(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfa70
    }

    String get:_partialResult@10003594(DynamicType) {
        Code at absolute offset: 0xfc58
    }

    VoidType writeNumber(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a9c
    }

    VoidType writeString(DynamicType, DynamicType) {
        Code at absolute offset: 0x15e64
    }

    VoidType writeStringSlice(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15df4
    }

    VoidType writeCharCode(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _JsonStringifier@10003594 extends Object {

    _JsonStringifier@10003594 _JsonStringifier@10003594.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType writeStringContent(DynamicType, DynamicType) {
        Code at absolute offset: 0x1578c
    }

    VoidType _checkCycle@10003594(DynamicType, DynamicType) {
        Code at absolute offset: 0x16b14
    }

    VoidType _removeSeen@10003594(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType writeObject(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaf0
    }

    bool writeJsonValue(DynamicType, DynamicType) {
        Code at absolute offset: 0x16c78
    }

    VoidType writeList(DynamicType, DynamicType) {
        Code at absolute offset: 0x1749f4
    }

    bool writeMap(DynamicType, DynamicType) {
        Code at absolute offset: 0x1746a8
    }
}

class StringBuffer extends Object implements StringSink {

    StringBuffer StringBuffer.(DynamicType, DynamicType) {
        Code at absolute offset: 0x17088
    }

    VoidType _ensureCapacity@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x160ac
    }

    VoidType _consumeBuffer@0150898(DynamicType) {
        Code at absolute offset: 0x16144
    }

    VoidType _addPart@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x16208
    }

    VoidType _compact@0150898(DynamicType) {
        Code at absolute offset: 0x163f4
    }

    String _create@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16864
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType write(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a08
    }

    VoidType writeCharCode(DynamicType, DynamicType) {
        Code at absolute offset: 0x15e9c
    }

    VoidType writeAll(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x165a0
    }

    VoidType writeln(DynamicType, DynamicType) {
        Code at absolute offset: 0x1652c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x141d04
    }
}

class StringSink extends Object {
}

class Uint16List extends Object implements List, _TypedIntList@7027147 {

    Uint16List Uint16List.(DynamicType, DynamicType) {
        Code at absolute offset: 0x168ec
    }
}

class _TypedIntList@7027147 extends TypedData {
}

class TypedData extends Object {
}

class JsonUnsupportedObjectError extends Error {

    String toString(DynamicType) {
        Code at absolute offset: 0x1409d0
    }
}

class JsonCyclicError extends JsonUnsupportedObjectError {

    String toString(DynamicType) {
        Code at absolute offset: 0x1409c0
    }
}

class JsonEncoder extends Converter {

    String convert(DynamicType, DynamicType) {
        Code at absolute offset: 0xf9d8
    }
}

class Converter<S, T> extends StreamTransformerBase {
}

class StreamTransformerBase<S, T> extends Object implements StreamTransformer {
}

class StreamTransformer<S, T> extends Object {
}

class JsonCodec extends Codec {

    DynamicType decode(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x19790
    }

    String encode(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf998
    }
}

class Codec<S, T> extends Object {

    T encode(DynamicType, DynamicType) {
        Code at absolute offset: 0x17108
    }
}

class _Utf8Encoder@10003594 extends Object {

    _Utf8Encoder@10003594 _Utf8Encoder@10003594.withBufferSize(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Uint8List _createBuffer@10003594(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _writeReplacementCharacter@10003594(DynamicType) {
        Code at absolute offset: 0x1732c
    }

    bool _writeSurrogate@10003594(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x173bc
    }

    int _fillBuffer@10003594(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x19178
    }
}

class Uint8List extends Object implements List, _TypedIntList@7027147 {

    Uint8List Uint8List.(DynamicType, DynamicType) {
        Code at absolute offset: 0x19674
    }

    Uint8List Uint8List.view(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175dc
    }
}

class __Uint8ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8ArrayView&_TypedListView&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11b0b4
    }

    Uint8List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10b368
    }
}

class __Int8ArrayView&_TypedListView&_IntListMixin@7027147 extends _TypedListView@7027147 implements _IntListMixin@7027147 {

    int lastIndexWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x109134
    }

    List +(DynamicType, DynamicType) {
        Code at absolute offset: 0x17856
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13c8b0
    }

    Iterable take(DynamicType, DynamicType) {
        Code at absolute offset: 0x1099d0
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x133b40
    }

    Iterable get:reversed(DynamicType) {
        Code at absolute offset: 0x125d44
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x135d54
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x139cc8
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x1351b0
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x13af4c
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x1369e8
    }

    Iterable expand(DynamicType, DynamicType) {
        Code at absolute offset: 0x1236c0
    }

    int firstWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x122338
    }

    int elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x129a4c
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x122d62
    }

    VoidType sort(DynamicType, DynamicType) {
        Code at absolute offset: 0x123218
    }

    int get:first(DynamicType) {
        Code at absolute offset: 0x13442c
    }

    int get:last(DynamicType) {
        Code at absolute offset: 0x128f70
    }

    VoidType fillRange(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1336b4
    }
}

class _TypedListView@7027147 extends _TypedListBase@7027147 implements TypedData {

    _ByteBuffer@7027147 get:buffer(DynamicType) {
        Code at absolute offset: 0x157590
    }

    int get:offsetInBytes(DynamicType) {
        Code at absolute offset: 0xe41b4
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0xf8ae
    }
}

class _TypedListBase@7027147 extends Object {

    String join(DynamicType, DynamicType) {
        Code at absolute offset: 0x136f04
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x135554
    }

    bool get:isNotEmpty(DynamicType) {
        Code at absolute offset: 0x1345fc
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x15591c
    }

    bool _setRange@7027147(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x178b8
    }
}

class ByteBuffer extends Object {
}

class __Float64ArrayView&_TypedListView&_DoubleListMixin&_TypedDoubleListMixin@7027147 extends __Float32ArrayView&_TypedListView&_DoubleListMixin@7027147 implements _TypedDoubleListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10fd24
    }

    Float64List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10a318
    }
}

class __Float32ArrayView&_TypedListView&_DoubleListMixin@7027147 extends _TypedListView@7027147 implements _DoubleListMixin@7027147 {

    int lastIndexWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x109134
    }

    List +(DynamicType, DynamicType) {
        Code at absolute offset: 0x17c5e
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13c888
    }

    Iterable take(DynamicType, DynamicType) {
        Code at absolute offset: 0x10996c
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x133af4
    }

    Iterable get:reversed(DynamicType) {
        Code at absolute offset: 0x125d24
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x135d20
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x139c7c
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x135180
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x13ab40
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x136908
    }

    Iterable expand(DynamicType, DynamicType) {
        Code at absolute offset: 0x1235e8
    }

    double firstWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x122338
    }

    double elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x129670
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x122c8a
    }

    VoidType sort(DynamicType, DynamicType) {
        Code at absolute offset: 0x123198
    }

    double get:first(DynamicType) {
        Code at absolute offset: 0x134154
    }

    double get:last(DynamicType) {
        Code at absolute offset: 0x128c30
    }
}

class _DoubleListMixin@7027147 extends Object implements List {
}

class _TypedDoubleListMixin@7027147<SpawnedType> extends _DoubleListMixin@7027147 implements List {
}

class :: {

    int _toInt@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int _toInt8@7027147(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int _toClampedUint8@7027147(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int _toInt16@7027147(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int _toInt32@7027147(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _rangeCheck@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18f70
    }

    VoidType _offsetAlignmentCheck@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x17cc0
    }
}

class Float64List extends Object implements List, _TypedFloatList@7027147 {

    Float64List Float64List.(DynamicType, DynamicType) {
        Code at absolute offset: 0x17e2c
    }
}

class _TypedFloatList@7027147 extends TypedData {
}

class __Int64ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8ArrayView&_TypedListView&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x113fd0
    }

    Int64List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10a888
    }
}

class _TypedIntListMixin@7027147<SpawnedType> extends _IntListMixin@7027147 implements List {
}

class _IntListMixin@7027147 extends Object implements List {
}

class Int64List extends Object implements List, _TypedIntList@7027147 {

    Int64List Int64List.(DynamicType, DynamicType) {
        Code at absolute offset: 0x181fc
    }
}

class __Int32ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8ArrayView&_TypedListView&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x116b3c
    }

    Int32List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10ac28
    }
}

class Int32List extends Object implements List, _TypedIntList@7027147 {

    Int32List Int32List.(DynamicType, DynamicType) {
        Code at absolute offset: 0x185bc
    }
}

class _TypedList@7027147 extends _TypedListBase@7027147 {

    int get:offsetInBytes(DynamicType) {
        Code at absolute offset: 0x39550
    }

    int get:lengthInBytes(DynamicType) {
        Code at absolute offset: 0x190f8
    }

    _ByteBuffer@7027147 get:buffer(DynamicType) {
        Code at absolute offset: 0x1575b8
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    VoidType _setInt8@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18cf0
    }

    VoidType _setUint8@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18b70
    }

    VoidType _setInt16@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18bb0
    }

    VoidType _setUint16@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x189a8
    }

    VoidType _setInt32@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18d30
    }

    VoidType _setUint32@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18968
    }

    VoidType _setInt64@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18db0
    }

    VoidType _setUint64@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18c30
    }

    VoidType _setFloat32@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18bf0
    }

    VoidType _setFloat64@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x188e8
    }

    VoidType _setFloat32x4@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18d70
    }

    VoidType _setInt32x4@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18928
    }

    Float64x2 _getFloat64x2@7027147(DynamicType, DynamicType) {
        Code at absolute offset: 0x18c70
    }

    VoidType _setFloat64x2@7027147(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18b30
    }

    VoidType _setCodeUnits@7027147(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x189e8
    }
}

class ByteData extends Object implements TypedData {

    ByteData ByteData._view@7027147(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18e60
    }

    ByteData ByteData.(DynamicType, DynamicType) {
        Code at absolute offset: 0x18df0
    }
}

class Utf8Encoder extends Converter {

    Uint8List convert(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x17174
    }
}

class FormatException extends Object implements Exception {

    String get:message(DynamicType) {
        Code at absolute offset: 0x19b76
    }

    FormatException FormatException.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x19ba8
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x141394
    }
}

class Exception extends Object {

    Exception Exception.(DynamicType, DynamicType) {
        Code at absolute offset: 0x19b80
    }
}

class _Exception@0150898 extends Object implements Exception {

    DynamicType get:message(DynamicType) {
        Code at absolute offset: 0x19b76
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x141320
    }
}

class _ChunkedJsonParser@10003594<T> extends Object {

    VoidType set:buffer(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _ChunkedJsonParser@10003594 _ChunkedJsonParser@10003594.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType saveState(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int restoreState(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType close(DynamicType) {
        Code at absolute offset: 0x19934
    }

    int parsePartial(DynamicType, DynamicType) {
        Code at absolute offset: 0x1e800
    }

    int parsePartialNumber(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1eb90
    }

    int parsePartialString(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1f264
    }

    int parsePartialKeyword(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1e914
    }

    VoidType parse(DynamicType, DynamicType) {
        Code at absolute offset: 0x1f69c
    }

    int parseTrue(DynamicType, DynamicType) {
        Code at absolute offset: 0x1de28
    }

    int parseFalse(DynamicType, DynamicType) {
        Code at absolute offset: 0x1e4c8
    }

    int parseNull(DynamicType, DynamicType) {
        Code at absolute offset: 0x1f494
    }

    int parseKeywordPrefix(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1df14
    }

    int parseString(DynamicType, DynamicType) {
        Code at absolute offset: 0x1e5d4
    }

    int chunkString(DynamicType, DynamicType) {
        Code at absolute offset: 0x1dddc
    }

    int chunkStringEscapeU(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1ddfc
    }

    int parseStringToBuffer(DynamicType, DynamicType) {
        Code at absolute offset: 0x1e154
    }

    int parseStringEscape(DynamicType, DynamicType) {
        Code at absolute offset: 0x1da70
    }

    int beginChunkNumber(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x19c90
    }

    VoidType addNumberChunk(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1e0b4
    }

    int continueChunkNumber(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1f1cc
    }

    int finishChunkNumber(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1f578
    }

    int parseNumber(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1cbac
    }

    Never fail(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x19a98
    }
}

class _JsonStringParser@10003594 extends _ChunkedJsonParser@10003594 {

    _JsonStringParser@10003594 _JsonStringParser@10003594.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int getChar(DynamicType, DynamicType) {
        Code at absolute offset: 0x1a2b8
    }

    String getString(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1a238
    }

    VoidType beginString(DynamicType) {
        Code at absolute offset: 0x1a1d4
    }

    VoidType addSliceToString(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1a0f4
    }

    VoidType addCharToString(DynamicType, DynamicType) {
        Code at absolute offset: 0x1a048
    }

    String endString(DynamicType) {
        Code at absolute offset: 0x19fac
    }

    VoidType copyCharsToList(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x19d40
    }

    double parseDouble(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x19e44
    }
}

class :: {

    double _parseDouble@10003594(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x19ea8
    }

    DynamicType _parseJson@10003594(DynamicType, DynamicType) {
        Code at absolute offset: 0x19800
    }

    DynamicType _defaultToEncodable@10003594(DynamicType) {
        Code at absolute offset: 0x19f30
    }
}

class _NumberBuffer@10003594 extends Object {

    _NumberBuffer@10003594 _NumberBuffer@10003594.(DynamicType, DynamicType) {
        Code at absolute offset: 0x1a314
    }

    int _initialCapacity@10003594(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType ensureCapacity(DynamicType, DynamicType) {
        Code at absolute offset: 0x1cad4
    }

    String getString(DynamicType) {
        Code at absolute offset: 0x1c978
    }

    num parseNum(DynamicType) {
        Code at absolute offset: 0x1c9d0
    }

    double parseDouble(DynamicType) {
        Code at absolute offset: 0x1a3ac
    }
}

class double extends num {

    double _nativeParse@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1a530
    }

    double _tryParseDouble@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1a5e0
    }

    double _parse@0150898(DynamicType) {
        Code at absolute offset: 0x1a44c
    }

    double parse(DynamicType, DynamicType) {
        Code at absolute offset: 0x1a3e0
    }

    double tryParse(DynamicType) {
        Code at absolute offset: 0x1a5b8
    }
}

class int extends num {
    Int64List _int64OverflowLimits@0150898

    Int64List get:_int64OverflowLimits@0150898() {
        Code at absolute offset: 0xfaa0
    }

    int _tryParseSmi@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1ad68
    }

    int _parse@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1b0a4
    }

    Null _kNull@0150898(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int _throwFormatException@0150898(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1c518
    }

    int _parseRadix@0150898(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1b554
    }

    _Smi@0150898 _parseBlock@0150898(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1c260
    }

    int _initInt64OverflowLimits@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x1bddc
    }

    int parse(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1c69c
    }

    int tryParse(DynamicType, DynamicType) {
        Code at absolute offset: 0x1afd0
    }
}

class _BuildJsonListener@10003594 extends _JsonListener@10003594 {

    String get:key(DynamicType) {
        Code at absolute offset: 0x1d792
    }

    DynamicType get:value(DynamicType) {
        Code at absolute offset: 0x1d772
    }

    _BuildJsonListener@10003594 _BuildJsonListener@10003594.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType pushContainer(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType popContainer(DynamicType) {
        Code at absolute offset: 0x1d7ec
    }

    VoidType handleString(DynamicType, DynamicType) {
        Code at absolute offset: 0x1da3c
    }

    VoidType handleNumber(DynamicType, DynamicType) {
        Code at absolute offset: 0x1d724
    }

    VoidType handleBool(DynamicType, DynamicType) {
        Code at absolute offset: 0x1da00
    }

    VoidType handleNull(DynamicType) {
        Code at absolute offset: 0x1da1c
    }

    VoidType beginObject(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType propertyName(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType propertyValue(DynamicType) {
        Code at absolute offset: 0x174608
    }

    VoidType endObject(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType beginArray(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType arrayElement(DynamicType) {
        Code at absolute offset: 0x1745b0
    }

    VoidType endArray(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _JsonListener@10003594 extends Object {
}

class _HashBase@3220832 extends Object implements _HashVMBase@3220832 {

    int _indexSizeToHashMask@3220832(DynamicType) {
        Code at absolute offset: 0x20a6c
    }

    VoidType _setDeletedAt@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _HashVMBase@3220832 extends Object {

    VoidType set:_index@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class Uint32List extends Object implements List, _TypedIntList@7027147 {

    Uint32List Uint32List.(DynamicType, DynamicType) {
        Code at absolute offset: 0x20b9c
    }
}

class Map<K, V> extends Object {

    Map Map._fromLiteral@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x20818
    }

    Map Map.(DynamicType) {
        Code at absolute offset: 0x30898
    }

    Map Map.unmodifiable(DynamicType, DynamicType) {
        Code at absolute offset: 0x20cc8
    }
}

class UnmodifiableMapView<K, V> extends _UnmodifiableMapView&MapView&_UnmodifiableMapMixin@3220832 {
}

class _UnmodifiableMapView&MapView&_UnmodifiableMapMixin@3220832<K, V> extends MapView implements _UnmodifiableMapMixin@3220832 {

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1263cc
    }

    V remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x12e7b8
    }
}

class MapView<K, V> extends Object implements Map {

    V [](DynamicType, DynamicType) {
        Code at absolute offset: 0x13336e
    }

    bool containsKey(DynamicType, DynamicType) {
        Code at absolute offset: 0x13e880
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x130c24
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x12fc04
    }

    bool get:isNotEmpty(DynamicType) {
        Code at absolute offset: 0x134550
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x132d44
    }

    Iterable get:keys(DynamicType) {
        Code at absolute offset: 0x125be0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14308c
    }
}

class _UnmodifiableMapMixin@3220832<K, V> extends Object implements Map {
}

class LinkedHashMap<K, V> extends Object implements Map {

    LinkedHashMap LinkedHashMap.identity(DynamicType) {
        Code at absolute offset: 0x20dc8
    }

    LinkedHashMap LinkedHashMap.from(DynamicType, DynamicType) {
        Code at absolute offset: 0x20d1c
    }
}

class _HashFieldBase@3220832 extends Object {

    _HashFieldBase@3220832 _HashFieldBase@3220832.(DynamicType, DynamicType) {
        Code at absolute offset: 0x20e10
    }
}

class _CompactLinkedIdentityHashMap@3220832<K, V> extends __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin&_LinkedHashMapMixin&_HashBase&_IdenticalAndIdentityHashCode@3220832 implements LinkedHashMap {

    _CompactLinkedIdentityHashMap@3220832 _CompactLinkedIdentityHashMap@3220832.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin&_LinkedHashMapMixin&_HashBase&_IdenticalAndIdentityHashCode@3220832<K, V> extends __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin&_LinkedHashMapMixin&_HashBase@3220832 implements _IdenticalAndIdentityHashCode@3220832 {

    __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin&_LinkedHashMapMixin&_HashBase&_IdenticalAndIdentityHashCode@3220832 __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin&_LinkedHashMapMixin&_HashBase&_IdenticalAndIdentityHashCode@3220832.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int _hashCode@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0x21648
    }
}

class __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin&_LinkedHashMapMixin&_HashBase@3220832<K, V> extends __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin&_LinkedHashMapMixin@3220832 implements _HashBase@3220832 {

    __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin&_LinkedHashMapMixin&_HashBase@3220832 __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin&_LinkedHashMapMixin&_HashBase@3220832.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int get:_checkSum@3220832(DynamicType) {
        Code at absolute offset: 0x16bf38
    }

    bool _isModifiedSince@3220832(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x165ed4
    }
}

class __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin&_LinkedHashMapMixin@3220832<K, V> extends __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin@3220832 implements _LinkedHashMapMixin@3220832 {

    __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin&_LinkedHashMapMixin@3220832 __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin&_LinkedHashMapMixin@3220832.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x1333b0
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x12faa4
    }

    bool get:isNotEmpty(DynamicType) {
        Code at absolute offset: 0x134480
    }

    VoidType _rehash@3220832(DynamicType) {
        Code at absolute offset: 0x211cc
    }

    VoidType _init@3220832(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x21258
    }

    VoidType _regenerateIndex@3220832(DynamicType) {
        Code at absolute offset: 0x20ef2
    }

    VoidType _insert@3220832(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x21098
    }

    int _findValueOrInsertPoint@3220832(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe390c
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x125eac
    }

    V remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x12de9c
    }

    Object _getValueOrData@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0x21434
    }

    bool containsKey(DynamicType, DynamicType) {
        Code at absolute offset: 0x13e34c
    }

    V [](DynamicType, DynamicType) {
        Code at absolute offset: 0x13315e
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x130738
    }

    Iterable get:keys(DynamicType) {
        Code at absolute offset: 0x1259d0
    }

    Iterable get:values(DynamicType) {
        Code at absolute offset: 0x160a48
    }
}

class __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin@3220832<K, V> extends _HashFieldBase@3220832 implements MapMixin {

    __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin@3220832 __CompactLinkedIdentityHashMap&_HashFieldBase&MapMixin@3220832.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x140b94
    }
}

class MapMixin<K, V> extends Object implements Map {

    String toString(DynamicType) {
        Code at absolute offset: 0x140b94
    }
}

class _LinkedHashMapMixin@3220832<K, V> extends Object implements _HashBase@3220832 {
}

class :: {
    _Closure@0150898 _uriBaseClosure@0150898
    List _scannerTables@0150898

    _Closure@0150898 get:_uriBaseClosure@0150898() {
        Code at absolute offset: 0x2e874
    }

    List get:_scannerTables@0150898() {
        Code at absolute offset: 0xfaa0
    }

    VoidType _completeLoads@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe36b0
    }

    Future _loadLibrary@0150898(DynamicType) {
        Code at absolute offset: 0xe34d4
    }

    VoidType _checkLoaded@0150898(DynamicType) {
        Code at absolute offset: 0x2e920
    }

    int _getHash@0150898(DynamicType) {
        Code at absolute offset: 0x2e914
    }

    VoidType _setHash@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x2e900
    }

    Uri _unsupportedUriBase@0150898() {
        Code at absolute offset: 0x2e8a4
    }

    int identityHashCode(DynamicType) {
        Code at absolute offset: 0x21670
    }

    VoidType print(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    List _createTables@0150898() {
        Code at absolute offset: 0x216d0
    }

    int _scan@0150898(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2c71c
    }

    int _startsWithData@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x2e704
    }
}

class Uri extends Object {

    Uri get:base() {
        Code at absolute offset: 0x2e808
    }

    Uri parse(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2b420
    }

    String encodeFull(DynamicType) {
        Code at absolute offset: 0x254b4
    }

    List _parseIPv4Address@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x25014
    }

    List parseIPv6Address(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x245cc
    }
}

class _Uri@0150898 extends Object implements Uri {
    bool _isWindowsCached@0150898
    String _text@0150898
    int hashCode

    bool get:_isWindowsCached@0150898() {
        Code at absolute offset: 0xfaa0
    }

    String get:scheme(DynamicType) {
        Code at absolute offset: 0xe3bfc
    }

    String get:path(DynamicType) {
        Code at absolute offset: 0x36838
    }

    String get:_text@0150898(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15676c
    }

    bool get:_isWindowsPlatform@0150898() {
        Code at absolute offset: 0x25d90
    }

    _Uri@0150898 _Uri@0150898.notSimple(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2af08
    }

    _Uri@0150898 _Uri@0150898.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x25e04
    }

    String get:userInfo(DynamicType) {
        Code at absolute offset: 0xedf0
    }

    String get:host(DynamicType) {
        Code at absolute offset: 0x16c3ac
    }

    int get:port(DynamicType) {
        Code at absolute offset: 0x16d6a8
    }

    int _defaultPort@0150898(DynamicType) {
        Code at absolute offset: 0x2ad6c
    }

    String get:query(DynamicType) {
        Code at absolute offset: 0x163770
    }

    String get:fragment(DynamicType) {
        Code at absolute offset: 0x1621a4
    }

    bool isScheme(DynamicType, DynamicType) {
        Code at absolute offset: 0x25974
    }

    bool _compareScheme@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x259d8
    }

    Never _fail@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x27690
    }

    _Uri@0150898 _Uri@0150898.file(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x29658
    }

    _Uri@0150898 _Uri@0150898.directory(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2b314
    }

    bool get:_isWindows@0150898() {
        Code at absolute offset: 0x2b39c
    }

    VoidType _checkWindowsPathReservedCharacters@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x29ef0
    }

    VoidType _checkWindowsDriveLetter@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x2a8bc
    }

    Uri _makeFileUri@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x296fc
    }

    DynamicType _makeWindowsFileUrl@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x29828
    }

    int _makePort@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x2ad14
    }

    String _makeHost@0150898(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x27c04
    }

    int _checkZoneID@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x29244
    }

    String _normalizeZoneID@0150898(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x28b04
    }

    String _normalizeRegName@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x28108
    }

    String _makeScheme@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x29310
    }

    String _canonicalizeScheme@0150898(DynamicType) {
        Code at absolute offset: 0x2956c
    }

    String _makeUserInfo@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2ae80
    }

    String _makePath@0150898(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x26d34
    }

    String _normalizePath@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x26f34
    }

    String _makeQuery@0150898(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2b280
    }

    String _makeFragment@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2adec
    }

    String _normalizeEscape@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2795c
    }

    String _escapeChar@0150898(DynamicType) {
        Code at absolute offset: 0x276d4
    }

    String _normalizeOrSubstring@0150898(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x26fe4
    }

    String _normalize@0150898(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x270a4
    }

    String _mergePaths@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2a95c
    }

    bool _mayContainDotSegments@0150898(DynamicType) {
        Code at absolute offset: 0x2652c
    }

    String _removeDotSegments@0150898(DynamicType) {
        Code at absolute offset: 0x261f8
    }

    String _normalizeRelativePath@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x265d8
    }

    String _escapeScheme@0150898(DynamicType) {
        Code at absolute offset: 0x26af4
    }

    Uri resolveUri(DynamicType, DynamicType) {
        Code at absolute offset: 0x16dba0
    }

    bool get:hasScheme(DynamicType) {
        Code at absolute offset: 0x2b3dc
    }

    bool get:hasAuthority(DynamicType) {
        Code at absolute offset: 0x1601b8
    }

    bool get:hasQuery(DynamicType) {
        Code at absolute offset: 0x36804
    }

    bool get:hasFragment(DynamicType) {
        Code at absolute offset: 0x16b55c
    }

    bool get:hasAbsolutePath(DynamicType) {
        Code at absolute offset: 0x2acc4
    }

    VoidType _writeAuthority@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x25ca4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x141d6c
    }

    String _initializeText@0150898(DynamicType) {
        Code at absolute offset: 0x25b34
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x173334
    }

    String _uriEncode@0150898(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x254fc
    }
}

class IterableElementError extends Object {

    StateError noElement() {
        Code at absolute offset: 0x26aa0
    }

    StateError tooMany() {
        Code at absolute offset: 0x26ad8
    }

    StateError tooFew() {
        Code at absolute offset: 0x26abc
    }
}

class ConcurrentModificationError extends Error {

    String toString(DynamicType) {
        Code at absolute offset: 0x140858
    }
}

class LinkedListEntry<E> extends Object {

    VoidType set:_list@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:_next@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType unlink(DynamicType) {
        Code at absolute offset: 0x2a494
    }
}

class _RegExpHashValue@0150898 extends Object {

    _RegExpHashKey@0150898 get:key(DynamicType) {
        Code at absolute offset: 0xf8ae
    }
}

class _RegExpHashKey@0150898 extends LinkedListEntry {

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x156690
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x172c44
    }
}

class ListIterator<E> extends Object implements Iterator {

    ListIterator ListIterator.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    E get:current(DynamicType) {
        Code at absolute offset: 0xee40
    }

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xe50d4
    }
}

class _SimpleUri@0150898 extends Object implements Uri {

    bool get:hasAuthority(DynamicType) {
        Code at absolute offset: 0x1601ec
    }

    bool get:hasQuery(DynamicType) {
        Code at absolute offset: 0x165e84
    }

    bool get:hasFragment(DynamicType) {
        Code at absolute offset: 0x16b590
    }

    bool get:_isFile@0150898(DynamicType) {
        Code at absolute offset: 0x2c400
    }

    bool get:_isHttp@0150898(DynamicType) {
        Code at absolute offset: 0x2c468
    }

    bool get:_isHttps@0150898(DynamicType) {
        Code at absolute offset: 0x2c234
    }

    bool get:_isPackage@0150898(DynamicType) {
        Code at absolute offset: 0x2c29c
    }

    bool isScheme(DynamicType, DynamicType) {
        Code at absolute offset: 0x2c1e4
    }

    String get:scheme(DynamicType) {
        Code at absolute offset: 0x16bed0
    }

    String _computeScheme@0150898(DynamicType) {
        Code at absolute offset: 0x2c304
    }

    String get:userInfo(DynamicType) {
        Code at absolute offset: 0x172ce8
    }

    String get:host(DynamicType) {
        Code at absolute offset: 0x16c444
    }

    int get:port(DynamicType) {
        Code at absolute offset: 0x16d700
    }

    String get:path(DynamicType) {
        Code at absolute offset: 0x15c888
    }

    String get:query(DynamicType) {
        Code at absolute offset: 0x16379c
    }

    String get:fragment(DynamicType) {
        Code at absolute offset: 0x1621d0
    }

    Uri resolveUri(DynamicType, DynamicType) {
        Code at absolute offset: 0x16e07c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x156794
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17370c
    }

    Uri _toNonSimple@0150898(DynamicType) {
        Code at absolute offset: 0x2c4d0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x13a1d8
    }
}

class _DataUri@0150898 extends _Uri@0150898 {

    _DataUri@0150898 _DataUri@0150898.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2cacc
    }
}

class UriData extends Object {

    Uri get:uri(DynamicType) {
        Code at absolute offset: 0x2c8e4
    }

    Uri _computeUri@0150898(DynamicType) {
        Code at absolute offset: 0x2c94c
    }

    UriData _parse@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2cb7c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x141da8
    }
}

class Base64Codec extends Codec {

    String normalize(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2d3e8
    }

    VoidType _checkPadding@10003594(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2dd84
    }
}

class Base64Encoder extends Converter {
}

class Int8List extends Object implements List, _TypedIntList@7027147 {

    Int8List Int8List.(DynamicType, DynamicType) {
        Code at absolute offset: 0x2e524
    }

    Int8List Int8List.fromList(DynamicType, DynamicType) {
        Code at absolute offset: 0x2e4c0
    }
}

class _Base64Decoder@10003594 extends Object {
    List _inverseAlphabet@10003594

    List get:_inverseAlphabet@10003594() {
        Code at absolute offset: 0xfaa0
    }
}

class _DeferredNotLoadedError@0150898 extends Error implements NoSuchMethodError {

    String toString(DynamicType) {
        Code at absolute offset: 0x13f254
    }
}

class NoSuchMethodError extends Error {

    NoSuchMethodError NoSuchMethodError._withType@0150898(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x30620
    }

    VoidType _throwNew@0150898(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x305d0
    }

    Map _NamedArgumentsMap@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x303f4
    }

    String _existingMethodSignature@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3036c
    }

    String _toStringPlain@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x2ed14
    }

    String _symbolToString@0150898(DynamicType) {
        Code at absolute offset: 0x2e9c8
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x13f7b8
    }
}

class Symbol extends Object implements Symbol {

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x174cbc
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x156e10
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1432b8
    }

    String computeUnmangledName(DynamicType) {
        Code at absolute offset: 0x2ea08
    }
}

class Symbol extends Object {
}

class _InvocationMirror@0150898 extends Object implements Invocation {

    _InvocationMirror@0150898 _InvocationMirror@0150898._withType@0150898(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2fa48
    }

    VoidType _setMemberNameAndType@0150898(DynamicType) {
        Code at absolute offset: 0x30070
    }

    Symbol get:memberName(DynamicType) {
        Code at absolute offset: 0x2f9f4
    }

    int get:_typeArgsLen@0150898(DynamicType) {
        Code at absolute offset: 0x2f778
    }

    List get:typeArguments(DynamicType) {
        Code at absolute offset: 0x2fe70
    }

    List _unpackTypeArguments@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x2f988
    }

    List get:positionalArguments(DynamicType) {
        Code at absolute offset: 0x2fb80
    }

    Map get:namedArguments(DynamicType) {
        Code at absolute offset: 0x2f2e0
    }

    bool get:isAccessor(DynamicType) {
        Code at absolute offset: 0x2ffe8
    }

    bool get:isGetter(DynamicType) {
        Code at absolute offset: 0x2ff60
    }

    DynamicType _allocateInvocationMirror@0150898(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2f8f4
    }

    DynamicType _allocateInvocationMirrorForClosure@0150898(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x2f878
    }
}

class Invocation extends Object {
}

class Completer<T> extends Object {

    Completer Completer.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Completer Completer.sync(DynamicType) {
        Code at absolute offset: 0x308d0
    }
}

class _Future@4048458<T> extends Object implements Future {
    DynamicType _resultOrListeners@4048458

    DynamicType get:_resultOrListeners@4048458(DynamicType) {
        Code at absolute offset: 0xa451c
    }

    VoidType set:_resultOrListeners@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0xe2d0c
    }

    _Future@4048458 _Future@4048458.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Future@4048458 _Future@4048458.immediate(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Future@4048458 _Future@4048458.zoneValue(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Future@4048458 _Future@4048458.immediateError(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Future@4048458 _Future@4048458.value(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _setChained@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x30d9c
    }

    Future then(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x167968
    }

    Future _thenAwait@4048458(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x360c4
    }

    Future whenComplete(DynamicType, DynamicType) {
        Code at absolute offset: 0x160898
    }

    VoidType _setPendingComplete@4048458(DynamicType) {
        Code at absolute offset: 0xe2c0c
    }

    VoidType _clearPendingComplete@4048458(DynamicType) {
        Code at absolute offset: 0xe2d40
    }

    AsyncError get:_error@4048458(DynamicType) {
        Code at absolute offset: 0xe2c2c
    }

    _Future@4048458 get:_chainSource@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _setValue@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x368fc
    }

    VoidType _setErrorObject@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x334ac
    }

    VoidType _setError@4048458(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x33460
    }

    VoidType _cloneResult@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x30960
    }

    VoidType _addListener@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x361f0
    }

    VoidType _prependListeners@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x30af4
    }

    _FutureListener@4048458 _removeListeners@4048458(DynamicType) {
        Code at absolute offset: 0xe2c88
    }

    _FutureListener@4048458 _reverseListeners@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x30d40
    }

    VoidType _chainForeignFuture@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x31718
    }

    VoidType _chainCoreFuture@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x309a4
    }

    VoidType _complete@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0xe318c
    }

    VoidType _completeWithValue@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x59ccc
    }

    VoidType _completeError@4048458(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3340c
    }

    VoidType _asyncComplete@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x808f8
    }

    VoidType _asyncCompleteWithValue@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x80a28
    }

    VoidType _chainFuture@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x80ab8
    }

    VoidType _asyncCompleteError@4048458(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x97a20
    }

    VoidType _propagateToListeners@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x30dd8
    }

    Future timeout(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe2d5c
    }
}

class _Zone@4048458 extends Object implements Zone {

    _ZoneFunction@4048458 get:_errorCallback@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _ZoneFunction@4048458 get:_scheduleMicrotask@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _ZoneFunction@4048458 get:_createTimer@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _ZoneFunction@4048458 get:_createPeriodicTimer@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _ZoneFunction@4048458 get:_print@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _ZoneFunction@4048458 get:_fork@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _ZoneFunction@4048458 get:_handleUncaughtError@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool inSameErrorZone(DynamicType, DynamicType) {
        Code at absolute offset: 0x31a08
    }
}

class Zone extends Object {
    _Zone@4048458 _current@4048458

    _Zone@4048458 get:_current@4048458() {
        Code at absolute offset: 0xfaa0
    }

    Zone get:current() {
        Code at absolute offset: 0xfaa0
    }

    _Zone@4048458 _enter@4048458(DynamicType) {
        Code at absolute offset: 0x31abc
    }
}

class _ZoneFunction@4048458<T> extends Object {
}

class _AsyncCallbackEntry@4048458 extends Object {
}

class _AsyncRun@4048458 extends Object {

    VoidType _scheduleImmediate@4048458(DynamicType) {
        Code at absolute offset: 0x31f38
    }
}

class :: {
    _AsyncCallbackEntry@4048458 _nextCallback@4048458
    _AsyncCallbackEntry@4048458 _lastCallback@4048458
    _AsyncCallbackEntry@4048458 _lastPriorityCallback@4048458
    bool _isInCallbackLoop@4048458

    DynamicType _fatal@4048458(DynamicType) {
        Code at absolute offset: 0x37834
    }

    _Closure@0150898 _asyncThenWrapperHelper@4048458(DynamicType) {
        Code at absolute offset: 0x37644
    }

    _Closure@0150898 _asyncErrorWrapperHelper@4048458(DynamicType) {
        Code at absolute offset: 0x37868
    }

    Future _awaitHelper@4048458(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x35ed8
    }

    VoidType _asyncStarMoveNextHelper@4048458(DynamicType) {
        Code at absolute offset: 0x358ac
    }

    VoidType _completeOnAsyncReturn@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x31fb8
    }

    VoidType _clearAsyncThreadStackTrace@4048458() {
        Code at absolute offset: 0x1ae3e0
    }

    VoidType _setAsyncThreadStackTrace@4048458(DynamicType) {
        Code at absolute offset: 0x33664
    }

    VoidType _moveNextDebuggerStepCheck@4048458(DynamicType) {
        Code at absolute offset: 0x35934
    }

    VoidType _setScheduleImmediateClosure@4048458(DynamicType) {
        Code at absolute offset: 0x3300c
    }

    VoidType _ensureScheduleImmediate@4048458() {
        Code at absolute offset: 0x375d4
    }

    VoidType _completeWithErrorCallback@4048458(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3334c
    }

    Function _registerErrorHandler@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x36d4c
    }

    VoidType _microtaskLoop@4048458() {
        Code at absolute offset: 0x35968
    }

    VoidType _startMicrotaskLoop@4048458() {
        Code at absolute offset: 0x376e8
    }

    VoidType _scheduleAsyncCallback@4048458(DynamicType) {
        Code at absolute offset: 0x31e48
    }

    VoidType _schedulePriorityAsyncCallback@4048458(DynamicType) {
        Code at absolute offset: 0x31d08
    }

    VoidType scheduleMicrotask(DynamicType) {
        Code at absolute offset: 0x31844
    }

    VoidType _runGuarded@4048458(DynamicType) {
        Code at absolute offset: 0x33298
    }

    VoidType _nullDataHandler@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _nullErrorHandler@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x35a50
    }

    VoidType _nullDoneHandler@4048458() {
        Code at absolute offset: 0xfaa0
    }

    VoidType _rootHandleUncaughtError@4048458(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x31ca0
    }

    VoidType _rethrow@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x37608
    }

    R _rootRun@4048458(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x32000
    }

    R _rootRunUnary@4048458(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x35b54
    }

    R _rootRunBinary@4048458(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x36974
    }

    _Closure@0150898 _rootRegisterCallback@4048458(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Closure@0150898 _rootRegisterUnaryCallback@4048458(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Closure@0150898 _rootRegisterBinaryCallback@4048458(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    AsyncError _rootErrorCallback@4048458(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _rootScheduleMicrotask@4048458(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe2b58
    }

    Timer _rootCreateTimer@4048458(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x32420
    }

    Timer _rootCreatePeriodicTimer@4048458(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x32e08
    }

    VoidType _rootPrint@4048458(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x33698
    }

    VoidType _printToZone@4048458(DynamicType) {
        Code at absolute offset: 0x32338
    }

    Zone _rootFork@4048458(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x33830
    }

    R runZonedGuarded(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3721c
    }

    R _runZoned@4048458(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x33030
    }
}

class ZoneDelegate extends Object {
}

class Timer extends Object {

    Timer Timer.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x32758
    }

    VoidType run(DynamicType) {
        Code at absolute offset: 0x32718
    }

    Timer _createTimer@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x3248c
    }

    Timer _createPeriodicTimer@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x325f0
    }
}

class Duration extends Object implements Comparable {

    Duration Duration.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Duration +(DynamicType, DynamicType) {
        Code at absolute offset: 0x32c48
    }

    Duration -(DynamicType, DynamicType) {
        Code at absolute offset: 0x32b84
    }

    Duration *(DynamicType, DynamicType) {
        Code at absolute offset: 0x32a68
    }

    int get:inHours(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int get:inMinutes(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int get:inSeconds(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int get:inMicroseconds(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x173150
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x156714
    }

    int compareTo(DynamicType, DynamicType) {
        Code at absolute offset: 0x1260a8
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x140ea0
    }

    Duration unary-(DynamicType) {
        Code at absolute offset: 0x32c8c
    }
}

class AsyncError extends Object implements Error {

    StackTrace get:stackTrace(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    AsyncError AsyncError.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x334e8
    }

    StackTrace defaultStackTrace(DynamicType) {
        Code at absolute offset: 0x335a4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x141f8c
    }
}

class _CustomZone@4048458 extends _Zone@4048458 {

    _ZoneFunction@4048458 get:_scheduleMicrotask@4048458(DynamicType) {
        Code at absolute offset: 0xcbb64
    }

    _ZoneFunction@4048458 get:_handleUncaughtError@4048458(DynamicType) {
        Code at absolute offset: 0x1625b0
    }

    _CustomZone@4048458 _CustomZone@4048458.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x339c4
    }

    ZoneDelegate get:_delegate@4048458(DynamicType) {
        Code at absolute offset: 0x166f1c
    }

    ZoneDelegate get:_parentDelegate@4048458(DynamicType) {
        Code at absolute offset: 0x173dfc
    }

    Zone get:errorZone(DynamicType) {
        Code at absolute offset: 0x166fc0
    }

    VoidType runGuarded(DynamicType, DynamicType) {
        Code at absolute offset: 0x15e028
    }

    VoidType runUnaryGuarded(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16021c
    }

    VoidType runBinaryGuarded(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1721f0
    }

    _Closure@0150898 bindCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0x1638c0
    }

    _Closure@0150898 bindUnaryCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0x15ecd0
    }

    _Closure@0150898 bindCallbackGuarded(DynamicType, DynamicType) {
        Code at absolute offset: 0x15ce10
    }

    DynamicType [](DynamicType, DynamicType) {
        Code at absolute offset: 0x16139a
    }

    VoidType handleUncaughtError(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16f6e0
    }

    Zone fork(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16fa28
    }

    R run(DynamicType, DynamicType) {
        Code at absolute offset: 0x15fffc
    }

    R runUnary(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15fadc
    }

    R runBinary(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1640c4
    }

    _Closure@0150898 registerCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0x1605e0
    }

    _Closure@0150898 registerUnaryCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0x16dabc
    }

    _Closure@0150898 registerBinaryCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0x15ceec
    }

    AsyncError errorCallback(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16b404
    }

    VoidType scheduleMicrotask(DynamicType, DynamicType) {
        Code at absolute offset: 0x173a40
    }

    Timer createTimer(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x160ad8
    }

    VoidType print(DynamicType, DynamicType) {
        Code at absolute offset: 0x15ec4c
    }
}

class _HashMap@3220832<K, V> extends MapBase implements HashMap {

    _HashMap@3220832 _HashMap@3220832.(DynamicType) {
        Code at absolute offset: 0x34ec4
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x133410
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x12fb58
    }

    bool get:isNotEmpty(DynamicType) {
        Code at absolute offset: 0x1344b8
    }

    Iterable get:keys(DynamicType) {
        Code at absolute offset: 0x125a40
    }

    bool containsKey(DynamicType, DynamicType) {
        Code at absolute offset: 0x13e3a8
    }

    V [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1331de
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x126160
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x130998
    }

    V remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x12e56c
    }

    VoidType _removeEntry@3220832(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x35398
    }

    VoidType _addEntry@3220832(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x35258
    }

    VoidType _resize@3220832(DynamicType) {
        Code at absolute offset: 0x34f3c
    }
}

class MapBase<K, V> extends MapMixin {

    String mapToString(DynamicType) {
        Code at absolute offset: 0x33e50
    }
}

class :: {
    List _toStringVisiting@3220832

    List get:_toStringVisiting@3220832() {
        Code at absolute offset: 0xfaa0
    }

    VoidType _rehashObjects@3220832(DynamicType) {
        Code at absolute offset: 0x34d78
    }

    bool _isToStringVisiting@3220832(DynamicType) {
        Code at absolute offset: 0x340f8
    }

    VoidType _iterablePartsToStrings@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0x342fc
    }

    int _dynamicCompare@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0x3420c
    }

    _Closure@0150898 _defaultCompare@3220832() {
        Code at absolute offset: 0xfaa0
    }
}

class HashMap<K, V> extends Object implements Map {

    HashMap HashMap.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x34e48
    }

    HashMap HashMap.from(DynamicType, DynamicType) {
        Code at absolute offset: 0x33d60
    }
}

class _HashMapEntry@3220832<K, V> extends Object {

    K get:key(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    V get:value(DynamicType) {
        Code at absolute offset: 0x1d792
    }

    VoidType set:value(DynamicType, DynamicType) {
        Code at absolute offset: 0x351ea
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15683c
    }

    VoidType set:next(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _ZoneSpecification@4048458 extends Object implements ZoneSpecification {
}

class ZoneSpecification extends Object {

    ZoneSpecification ZoneSpecification.from(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x354a8
    }
}

class _RootZone@4048458 extends _Zone@4048458 {
    HashMap _rootMap@4048458
    ZoneDelegate _rootDelegate@4048458

    HashMap get:_rootMap@4048458() {
        Code at absolute offset: 0xfaa0
    }

    _ZoneFunction@4048458 get:_errorCallback@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _ZoneFunction@4048458 get:_scheduleMicrotask@4048458(DynamicType) {
        Code at absolute offset: 0x16aeb0
    }

    _ZoneFunction@4048458 get:_createTimer@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _ZoneFunction@4048458 get:_createPeriodicTimer@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _ZoneFunction@4048458 get:_print@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _ZoneFunction@4048458 get:_fork@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _ZoneFunction@4048458 get:_handleUncaughtError@4048458(DynamicType) {
        Code at absolute offset: 0x1625bc
    }

    Map get:_map@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    ZoneDelegate get:_delegate@4048458(DynamicType) {
        Code at absolute offset: 0x166f74
    }

    ZoneDelegate get:_parentDelegate@4048458(DynamicType) {
        Code at absolute offset: 0x173e38
    }

    Zone get:errorZone(DynamicType) {
        Code at absolute offset: 0x155994
    }

    VoidType runGuarded(DynamicType, DynamicType) {
        Code at absolute offset: 0x15e08c
    }

    VoidType runUnaryGuarded(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1602c0
    }

    VoidType runBinaryGuarded(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x172298
    }

    _Closure@0150898 bindCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0x163988
    }

    _Closure@0150898 bindUnaryCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0x15ed98
    }

    _Closure@0150898 bindCallbackGuarded(DynamicType, DynamicType) {
        Code at absolute offset: 0x15cea4
    }

    DynamicType [](DynamicType, DynamicType) {
        Code at absolute offset: 0x161492
    }

    VoidType handleUncaughtError(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16f764
    }

    Zone fork(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16faf0
    }

    R run(DynamicType, DynamicType) {
        Code at absolute offset: 0x1600e0
    }

    R runUnary(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15fbc0
    }

    R runBinary(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1641ac
    }

    _Closure@0150898 registerCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0x155994
    }

    _Closure@0150898 registerUnaryCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0x155994
    }

    _Closure@0150898 registerBinaryCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0x155994
    }

    AsyncError errorCallback(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType scheduleMicrotask(DynamicType, DynamicType) {
        Code at absolute offset: 0x173ac4
    }

    Timer createTimer(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x160b5c
    }

    VoidType print(DynamicType, DynamicType) {
        Code at absolute offset: 0x33698
    }
}

class _FutureListener@4048458<S, T> extends Object {
    Function callback

    Function get:callback(DynamicType) {
        Code at absolute offset: 0x36838
    }

    _FutureListener@4048458 _FutureListener@4048458.then(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Closure@0150898 get:_onValue@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Closure@0150898 get:_errorTest@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Closure@0150898 get:_whenCompleteAction@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool get:hasErrorCallback(DynamicType) {
        Code at absolute offset: 0x36804
    }

    FutureOr handleValue(DynamicType, DynamicType) {
        Code at absolute offset: 0x3671c
    }

    bool matchesErrorTest(DynamicType, DynamicType) {
        Code at absolute offset: 0x36640
    }

    FutureOr handleError(DynamicType, DynamicType) {
        Code at absolute offset: 0x36450
    }

    DynamicType handleWhenComplete(DynamicType) {
        Code at absolute offset: 0x363c8
    }
}

class Function extends Object {
}

class _LateInitializationError@0150898 extends Error implements LateInitializationError {

    _LateInitializationError@0150898 _LateInitializationError@0150898.(DynamicType, DynamicType) {
        Code at absolute offset: 0x11ae8
    }

    VoidType _throwNew@0150898(DynamicType) {
        Code at absolute offset: 0x36844
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x13f208
    }
}

class LateInitializationError extends Error {
}

class TransitionRoute<T> extends OverlayRoute {

    TransitionRoute TransitionRoute.(DynamicType, DynamicType) {
        Code at absolute offset: 0xb45d4
    }

    Duration get:reverseTransitionDuration(DynamicType) {
        Code at absolute offset: 0xe264c
    }

    bool get:finishedWhenPopped(DynamicType) {
        Code at absolute offset: 0xe1fac
    }

    AnimationController createAnimationController(DynamicType) {
        Code at absolute offset: 0xe23d0
    }

    Animation createAnimation(DynamicType) {
        Code at absolute offset: 0xe23ac
    }

    VoidType _handleStatusChanged@484188637(DynamicType, DynamicType) {
        Code at absolute offset: 0xe2078
    }

    VoidType install(DynamicType) {
        Code at absolute offset: 0xe2280
    }

    TickerFuture didPush(DynamicType) {
        Code at absolute offset: 0xe2230
    }

    VoidType didAdd(DynamicType) {
        Code at absolute offset: 0xe27a8
    }

    VoidType didReplace(DynamicType, DynamicType) {
        Code at absolute offset: 0x18328c
    }

    bool didPop(DynamicType, DynamicType) {
        Code at absolute offset: 0xe265c
    }

    VoidType didPopNext(DynamicType, DynamicType) {
        Code at absolute offset: 0x15d368
    }

    VoidType didChangeNext(DynamicType, DynamicType) {
        Code at absolute offset: 0x15d368
    }

    VoidType _updateSecondaryAnimation@484188637(DynamicType, DynamicType) {
        Code at absolute offset: 0xe2800
    }

    VoidType _setSecondaryAnimation@484188637(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe26c4
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x15d398
    }

    String get:debugLabel(DynamicType) {
        Code at absolute offset: 0xe24e0
    }

    DynamicType get:_handleStatusChanged@484188637(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class OverlayRoute<T> extends Route {

    OverlayRoute OverlayRoute.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    List get:overlayEntries(DynamicType) {
        Code at absolute offset: 0xee40
    }

    VoidType install(DynamicType) {
        Code at absolute offset: 0xe2020
    }

    bool didPop(DynamicType, DynamicType) {
        Code at absolute offset: 0xe1f44
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xe1f08
    }
}

class Route<T> extends Object {

    Route Route.(DynamicType, DynamicType) {
        Code at absolute offset: 0xb4744
    }

    List get:overlayEntries(DynamicType) {
        Code at absolute offset: 0x16ccf8
    }

    VoidType install(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    TickerFuture didPush(DynamicType) {
        Code at absolute offset: 0x166008
    }

    VoidType didAdd(DynamicType) {
        Code at absolute offset: 0x16707c
    }

    VoidType didReplace(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    Future willPop(DynamicType) {
        Code at absolute offset: 0x163614
    }

    bool get:willHandlePopInternally(DynamicType) {
        Code at absolute offset: 0x31fa8
    }

    bool didPop(DynamicType, DynamicType) {
        Code at absolute offset: 0x160810
    }

    VoidType didComplete(DynamicType, DynamicType) {
        Code at absolute offset: 0xe1ec4
    }

    VoidType didPopNext(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeNext(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangePrevious(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType changedExternalState(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xc04a4
    }

    bool get:isCurrent(DynamicType) {
        Code at absolute offset: 0xe01e4
    }

    bool get:isFirst(DynamicType) {
        Code at absolute offset: 0xac01c
    }

    bool get:isActive(DynamicType) {
        Code at absolute offset: 0xe1da8
    }
}

class :: {
}

class _NavigatorObservation@443124995 extends Object {
}

class RouteSettings extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x1551d8
    }
}

class _NavigatorReplaceObservation@443124995 extends _NavigatorObservation@443124995 {

    VoidType notify(DynamicType, DynamicType) {
        Code at absolute offset: 0x37a38
    }

    DynamicType get:notify(DynamicType) {
        Code at absolute offset: 0x165e6c
    }
}

class FlutterErrorDetails extends _DiagnosticableTree&Object&Diagnosticable@99198569 {
    List propertiesTransformers

    List get:propertiesTransformers() {
        Code at absolute offset: 0xfaa0
    }

    String exceptionAsString(DynamicType) {
        Code at absolute offset: 0x38f14
    }

    DiagnosticsNode get:summary(DynamicType) {
        Code at absolute offset: 0x38e74
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x13d7a0
    }

    String toString(DynamicType, DynamicType) {
        Code at absolute offset: 0x14bb88
    }

    DiagnosticsNode toDiagnosticsNode(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x38e2c
    }
}

class _DiagnosticableTree&Object&Diagnosticable@99198569 extends Object implements Diagnosticable {

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x76a5c
    }

    String toString(DynamicType, DynamicType) {
        Code at absolute offset: 0x14bb48
    }
}

class :: {

    String shortHash(DynamicType) {
        Code at absolute offset: 0x38678
    }

    String describeIdentity(DynamicType) {
        Code at absolute offset: 0x385f0
    }

    String describeEnum(DynamicType) {
        Code at absolute offset: 0x3855c
    }
}

class DiagnosticableNode<T> extends DiagnosticsNode {

    T get:value(DynamicType) {
        Code at absolute offset: 0xf8ae
    }
}

class DiagnosticableTree extends _DiagnosticableTree&Object&Diagnosticable@99198569 {

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x76a5c
    }
}

class DiagnosticsProperty<T> extends DiagnosticsNode {

    T get:value(DynamicType) {
        Code at absolute offset: 0x16c37e
    }

    VoidType _maybeCacheValue@99198569(DynamicType) {
        Code at absolute offset: 0x38c60
    }
}

class DiagnosticsNode extends Object {

    DiagnosticsNode DiagnosticsNode.message(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x38cb4
    }

    String toString(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x14c058
    }
}

class Diagnosticable extends Object {
}

class TextTreeConfiguration extends Object {
}

class DiagnosticableTreeMixin extends Object implements DiagnosticableTree {
}

class DiagnosticsTreeStyle extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class DiagnosticLevel extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class DiagnosticableTreeNode extends DiagnosticableNode {
}

class _NoDefaultValue@99198569 extends Object {
}

class :: {
}

class ErrorHint extends _ErrorDiagnostic@90022608 {

    ErrorHint ErrorHint.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _ErrorDiagnostic@90022608 extends DiagnosticsProperty {

    _ErrorDiagnostic@90022608 _ErrorDiagnostic@90022608.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3bd10
    }

    List get:value(DynamicType) {
        Code at absolute offset: 0x16c326
    }

    String valueToString(DynamicType, DynamicType) {
        Code at absolute offset: 0x38d50
    }
}

class ErrorSummary extends _ErrorDiagnostic@90022608 {

    ErrorSummary ErrorSummary.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class ErrorSpacer extends DiagnosticsProperty {
}

class ErrorDescription extends _ErrorDiagnostic@90022608 {

    ErrorDescription ErrorDescription.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _FlutterError&Error&DiagnosticableTreeMixin@90022608 extends Error implements DiagnosticableTreeMixin {
}

class _FlutterErrorDetailsNode@90022608 extends DiagnosticableNode {
}

class FlutterError extends _FlutterError&Error&DiagnosticableTreeMixin@90022608 implements AssertionError {
    _Closure@0150898 onError
    _Closure@0150898 presentError
    int _errorCount@90022608

    _Closure@0150898 get:onError() {
        Code at absolute offset: 0xfaa0
    }

    _Closure@0150898 get:presentError() {
        Code at absolute offset: 0xfaa0
    }

    FlutterError FlutterError.(DynamicType, DynamicType) {
        Code at absolute offset: 0x3b980
    }

    String get:message(DynamicType) {
        Code at absolute offset: 0x39522
    }

    VoidType dumpErrorToConsole(DynamicType, DynamicType) {
        Code at absolute offset: 0x3956c
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x139500
    }

    String toString(DynamicType, DynamicType) {
        Code at absolute offset: 0x140a70
    }

    VoidType reportError(DynamicType) {
        Code at absolute offset: 0x384d0
    }
}

class AssertionError extends Error {
}

class :: {
    _Closure@0150898 debugPrint
    int _debugPrintedCharacters@107110992
    Queue _debugPrintBuffer@107110992
    Stopwatch _debugPrintStopwatch@107110992
    Completer _debugPrintCompleter@107110992
    bool _debugPrintScheduled@107110992
    RegExp _indentPattern@107110992

    _Closure@0150898 get:debugPrint() {
        Code at absolute offset: 0xfaa0
    }

    Queue get:_debugPrintBuffer@107110992() {
        Code at absolute offset: 0xfaa0
    }

    Stopwatch get:_debugPrintStopwatch@107110992() {
        Code at absolute offset: 0xfaa0
    }

    RegExp get:_indentPattern@107110992() {
        Code at absolute offset: 0xfaa0
    }

    VoidType debugPrintThrottled(DynamicType, DynamicType) {
        Code at absolute offset: 0x397c8
    }

    VoidType _debugPrintTask@107110992() {
        Code at absolute offset: 0x399fc
    }

    Iterable debugWordWrap(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3b314
    }
}

class Queue<E> extends Object implements EfficientLengthIterable {
}

class Stopwatch extends Object {
    int _frequency@0150898

    int get:_frequency@0150898() {
        Code at absolute offset: 0xfaa0
    }

    Stopwatch Stopwatch.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int _computeFrequency@0150898() {
        Code at absolute offset: 0x39f94
    }

    VoidType start(DynamicType) {
        Code at absolute offset: 0x39ddc
    }

    VoidType stop(DynamicType) {
        Code at absolute offset: 0x3ad48
    }

    VoidType reset(DynamicType) {
        Code at absolute offset: 0x3ace0
    }

    int get:elapsedTicks(DynamicType) {
        Code at absolute offset: 0x3a290
    }

    Duration get:elapsed(DynamicType) {
        Code at absolute offset: 0x3ada8
    }

    int get:elapsedMicroseconds(DynamicType) {
        Code at absolute offset: 0x3a008
    }

    int _initTicker@0150898() {
        Code at absolute offset: 0x39f70
    }

    int _now@0150898() {
        Code at absolute offset: 0x39ec8
    }
}

class _AsyncCompleter@4048458<T> extends _Completer@4048458 {

    _AsyncCompleter@4048458 _AsyncCompleter@4048458.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType complete(DynamicType, DynamicType) {
        Code at absolute offset: 0x1731cc
    }

    VoidType _completeError@4048458(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1739c8
    }
}

class _Completer@4048458<T> extends Object implements Completer {

    _Future@4048458 get:future(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    _Completer@4048458 _Completer@4048458.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType completeError(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16f2b4
    }

    bool get:isCompleted(DynamicType) {
        Code at absolute offset: 0x3a330
    }
}

class ListQueue<E> extends ListIterable implements Queue {

    ListQueue ListQueue.(DynamicType, DynamicType) {
        Code at absolute offset: 0x3a6b0
    }

    int _calculateCapacity@3220832(DynamicType) {
        Code at absolute offset: 0x3a780
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12d65c
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x130cf4
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x12cc40
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x132bea
    }

    E get:first(DynamicType) {
        Code at absolute offset: 0x128fcc
    }

    E elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x109a34
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x3a412
    }

    VoidType addAll(DynamicType, DynamicType) {
        Code at absolute offset: 0x3ade4
    }

    VoidType clear(DynamicType) {
        Code at absolute offset: 0x3aabc
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x140bbc
    }

    VoidType addLast(DynamicType, DynamicType) {
        Code at absolute offset: 0x3aa8c
    }

    VoidType addFirst(DynamicType, DynamicType) {
        Code at absolute offset: 0x3ab54
    }

    E removeFirst(DynamicType) {
        Code at absolute offset: 0x3a364
    }

    E removeLast(DynamicType) {
        Code at absolute offset: 0x3ac54
    }

    int _nextPowerOf2@3220832(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _checkModification@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0x3aa4c
    }

    VoidType _add@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0x3a478
    }

    VoidType _grow@3220832(DynamicType) {
        Code at absolute offset: 0x3a570
    }

    int _writeToList@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0x3a948
    }

    VoidType _preGrow@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0x3a828
    }
}

class ListIterable<E> extends EfficientLengthIterable {

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12d694
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x130e58
    }

    String join(DynamicType, DynamicType) {
        Code at absolute offset: 0x12f150
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x1320d8
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x12e8c0
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x130300
    }
}

class _WordWrapParseMode@107110992 extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class _SyncIterable@0150898<T> extends IterableBase {

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12d4b4
    }
}

class IterableBase<E> extends Iterable {

    String iterableToShortString(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3b61c
    }

    String iterableToFullString(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3b3c0
    }
}

class AnimationStatus extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class :: {
}

class Animation<T> extends Listenable implements ValueListenable {

    VoidType addStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool get:isDismissed(DynamicType) {
        Code at absolute offset: 0xdf798
    }

    bool get:isCompleted(DynamicType) {
        Code at absolute offset: 0x13b028
    }

    Animation drive(DynamicType, DynamicType) {
        Code at absolute offset: 0x3c2c4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x149314
    }

    String toStringDetails(DynamicType) {
        Code at absolute offset: 0x1347fc
    }
}

class Listenable extends Object {
}

class :: {
}

class ChangeNotifier extends Object implements Listenable {

    ChangeNotifier ChangeNotifier.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x131c98
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x133058
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x3c144
    }

    VoidType notifyListeners(DynamicType) {
        Code at absolute offset: 0x3be94
    }
}

class _MergingListenable@94329750 extends Listenable {

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12d314
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12ef34
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x149910
    }
}

class ValueListenable<T> extends Listenable {
}

class _ListenerEntry@94329750 extends LinkedListEntry {
}

class ValueNotifier<T> extends ChangeNotifier implements ValueListenable {

    ValueNotifier ValueNotifier.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    T get:value(DynamicType) {
        Code at absolute offset: 0x136fa6
    }

    VoidType set:value(DynamicType, DynamicType) {
        Code at absolute offset: 0x3c1da
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14bed8
    }
}

class _AnimatedEvaluation@51105126<T> extends __AnimatedEvaluation&Animation&AnimationWithParentMixin@51105126 {

    T get:value(DynamicType) {
        Code at absolute offset: 0x13508a
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x149864
    }

    String toStringDetails(DynamicType) {
        Code at absolute offset: 0x1349b4
    }
}

class __AnimatedEvaluation&Animation&AnimationWithParentMixin@51105126<T> extends Animation implements AnimationWithParentMixin {

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12d178
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12ee20
    }

    VoidType addStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x1352e0
    }

    VoidType removeStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x136d48
    }

    AnimationStatus get:status(DynamicType) {
        Code at absolute offset: 0x139ecc
    }
}

class AnimationWithParentMixin<T> extends Object {
}

class :: {
}

class _CompoundAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin&AnimationLocalStatusListenersMixin@48411118<T> extends _CompoundAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin@48411118 implements AnimationLocalStatusListenersMixin {

    _CompoundAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin&AnimationLocalStatusListenersMixin@48411118 _CompoundAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin&AnimationLocalStatusListenersMixin@48411118.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x1352a0
    }

    VoidType removeStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x136d00
    }

    VoidType notifyStatusListeners(DynamicType, DynamicType) {
        Code at absolute offset: 0x3c33c
    }
}

class AnimationLocalStatusListenersMixin extends Object {
}

class :: {
}

class AnimationEagerListenerMixin extends Object {
}

class AnimationLocalListenersMixin extends Object {
}

class AnimationLazyListenerMixin extends Object {
}

class TrainHoppingAnimation extends _AnimationController&Animation&AnimationEagerListenerMixin&AnimationLocalListenersMixin&AnimationLocalStatusListenersMixin@47066280 {

    TrainHoppingAnimation TrainHoppingAnimation.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x95d6c
    }

    VoidType _statusChangeHandler@48411118(DynamicType, DynamicType) {
        Code at absolute offset: 0xde284
    }

    AnimationStatus get:status(DynamicType) {
        Code at absolute offset: 0x139d50
    }

    VoidType _valueChangeHandler@48411118(DynamicType) {
        Code at absolute offset: 0xdde70
    }

    double get:value(DynamicType) {
        Code at absolute offset: 0x134906
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xde384
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1493c4
    }

    DynamicType get:_statusChangeHandler@48411118(DynamicType) {
        Code at absolute offset: 0x179acc
    }

    DynamicType get:_valueChangeHandler@48411118(DynamicType) {
        Code at absolute offset: 0x179ae4
    }
}

class _AnimationController&Animation&AnimationEagerListenerMixin&AnimationLocalListenersMixin&AnimationLocalStatusListenersMixin@47066280 extends _AnimationController&Animation&AnimationEagerListenerMixin&AnimationLocalListenersMixin@47066280 implements AnimationLocalStatusListenersMixin {

    _AnimationController&Animation&AnimationEagerListenerMixin&AnimationLocalListenersMixin&AnimationLocalStatusListenersMixin@47066280 _AnimationController&Animation&AnimationEagerListenerMixin&AnimationLocalListenersMixin&AnimationLocalStatusListenersMixin@47066280.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x1351e0
    }

    VoidType removeStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x136c38
    }

    VoidType notifyStatusListeners(DynamicType, DynamicType) {
        Code at absolute offset: 0x3cf1c
    }
}

class _AnimationController&Animation&AnimationEagerListenerMixin&AnimationLocalListenersMixin@47066280 extends _AnimationController&Animation&AnimationEagerListenerMixin@47066280 implements AnimationLocalListenersMixin {

    _AnimationController&Animation&AnimationEagerListenerMixin&AnimationLocalListenersMixin@47066280 _AnimationController&Animation&AnimationEagerListenerMixin&AnimationLocalListenersMixin@47066280.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0xc0404
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12eb58
    }

    VoidType notifyListeners(DynamicType) {
        Code at absolute offset: 0x3c5a8
    }
}

class _AnimationController&Animation&AnimationEagerListenerMixin@47066280 extends Animation implements AnimationEagerListenerMixin {
}

class :: {
    SpringDescription _kFlingSpringDescription@47066280

    SpringDescription get:_kFlingSpringDescription@47066280() {
        Code at absolute offset: 0xfaa0
    }
}

class SpringDescription extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x151e40
    }
}

class :: {
}

class SpringType extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class _SpringSolution@310485910 extends Object {

    _SpringSolution@310485910 _SpringSolution@310485910.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3c850
    }
}

class _CriticalSolution@310485910 extends Object implements _SpringSolution@310485910 {

    _CriticalSolution@310485910 _CriticalSolution@310485910.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3cad4
    }

    double x(DynamicType, DynamicType) {
        Code at absolute offset: 0x184b70
    }

    double dx(DynamicType, DynamicType) {
        Code at absolute offset: 0x160b88
    }

    SpringType get:type(DynamicType) {
        Code at absolute offset: 0x16162c
    }
}

class _OverdampedSolution@310485910 extends Object implements _SpringSolution@310485910 {

    _OverdampedSolution@310485910 _OverdampedSolution@310485910.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3ca00
    }

    double x(DynamicType, DynamicType) {
        Code at absolute offset: 0x184cb4
    }

    double dx(DynamicType, DynamicType) {
        Code at absolute offset: 0x160ce8
    }

    SpringType get:type(DynamicType) {
        Code at absolute offset: 0x16163c
    }
}

class SpringSimulation extends Simulation {

    SpringSimulation SpringSimulation.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3cba4
    }

    SpringType get:type(DynamicType) {
        Code at absolute offset: 0x3cb68
    }

    double x(DynamicType, DynamicType) {
        Code at absolute offset: 0x179d60
    }

    bool isDone(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x149a60
    }
}

class Simulation extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x149a50
    }
}

class :: {
}

class _UnderdampedSolution@310485910 extends Object implements _SpringSolution@310485910 {

    _UnderdampedSolution@310485910 _UnderdampedSolution@310485910.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3c948
    }

    double x(DynamicType, DynamicType) {
        Code at absolute offset: 0x184f20
    }

    double dx(DynamicType, DynamicType) {
        Code at absolute offset: 0x160f60
    }

    SpringType get:type(DynamicType) {
        Code at absolute offset: 0x16164c
    }
}

class _AnimationDirection@47066280 extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class AnimationBehavior extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class AnimationController extends _AnimationController&Animation&AnimationEagerListenerMixin&AnimationLocalListenersMixin&AnimationLocalStatusListenersMixin@47066280 {
    double _value@47066280
    AnimationStatus _status@47066280

    double get:_value@47066280(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    AnimationStatus get:_status@47066280(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    AnimationController AnimationController.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xbbcc8
    }

    double get:value(DynamicType) {
        Code at absolute offset: 0x1348b6
    }

    VoidType set:value(DynamicType, DynamicType) {
        Code at absolute offset: 0x1749a0
    }

    VoidType _internalSetValue@47066280(DynamicType, DynamicType) {
        Code at absolute offset: 0xbc024
    }

    bool get:isAnimating(DynamicType) {
        Code at absolute offset: 0xdd9ac
    }

    AnimationStatus get:status(DynamicType) {
        Code at absolute offset: 0x139d14
    }

    TickerFuture forward(DynamicType, DynamicType) {
        Code at absolute offset: 0xc7a00
    }

    TickerFuture reverse(DynamicType, DynamicType) {
        Code at absolute offset: 0x177834
    }

    TickerFuture animateTo(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xba670
    }

    TickerFuture animateBack(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb7a84
    }

    TickerFuture _animateToInternal@47066280(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb7b3c
    }

    TickerFuture fling(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x92998
    }

    TickerFuture _startSimulation@47066280(DynamicType, DynamicType) {
        Code at absolute offset: 0x3ccf0
    }

    VoidType stop(DynamicType, DynamicType) {
        Code at absolute offset: 0x92c3c
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xdd8dc
    }

    VoidType _checkStatusChanged@47066280(DynamicType) {
        Code at absolute offset: 0x3ceb4
    }

    VoidType _tick@47066280(DynamicType, DynamicType) {
        Code at absolute offset: 0xdda00
    }

    String toStringDetails(DynamicType) {
        Code at absolute offset: 0x134628
    }

    DynamicType get:reverse(DynamicType) {
        Code at absolute offset: 0x1782b0
    }

    DynamicType get:_tick@47066280(DynamicType) {
        Code at absolute offset: 0x179ab4
    }
}

class _FrameCallbackEntry@359222615 extends Object {

    _FrameCallbackEntry@359222615 _FrameCallbackEntry@359222615.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
    double _timeDilation@359222615

    bool defaultSchedulingStrategy(DynamicType, DynamicType) {
        Code at absolute offset: 0x3d47c
    }
}

class _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding@441399801 extends _WidgetsFlutterBinding&BindingBase&GestureBinding@441399801 implements SchedulerBinding {

    _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding@441399801 _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding@441399801.(DynamicType) {
        Code at absolute offset: 0x81fd8
    }

    VoidType initInstances(DynamicType) {
        Code at absolute offset: 0x65708
    }

    VoidType addTimingsCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0xd9848
    }

    VoidType removeTimingsCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0x856bc
    }

    VoidType _executeTimingsCallbacks@359222615(DynamicType, DynamicType) {
        Code at absolute offset: 0xd9a44
    }

    VoidType initServiceExtensions(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType handleAppLifecycleStateChanged(DynamicType, DynamicType) {
        Code at absolute offset: 0x5a86c
    }

    Future scheduleTask(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xdd200
    }

    VoidType unlocked(DynamicType) {
        Code at absolute offset: 0xdd360
    }

    VoidType _ensureEventLoopCallback@359222615(DynamicType) {
        Code at absolute offset: 0xdc8bc
    }

    VoidType _runTasks@359222615(DynamicType) {
        Code at absolute offset: 0xdc870
    }

    bool handleEventLoopCallback(DynamicType) {
        Code at absolute offset: 0xdc944
    }

    int get:transientCallbackCount(DynamicType) {
        Code at absolute offset: 0x3d588
    }

    int scheduleFrameCallback(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3d38c
    }

    VoidType cancelFrameCallbackWithId(DynamicType, DynamicType) {
        Code at absolute offset: 0x933cc
    }

    VoidType addPersistentFrameCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addPostFrameCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Future get:endOfFrame(DynamicType) {
        Code at absolute offset: 0xdcf8c
    }

    VoidType _setFramesEnabledState@359222615(DynamicType, DynamicType) {
        Code at absolute offset: 0x5a910
    }

    VoidType ensureFrameCallbacksRegistered(DynamicType) {
        Code at absolute offset: 0xdc230
    }

    VoidType ensureVisualUpdate(DynamicType) {
        Code at absolute offset: 0xda7b4
    }

    VoidType scheduleFrame(DynamicType) {
        Code at absolute offset: 0xdd504
    }

    VoidType scheduleForcedFrame(DynamicType) {
        Code at absolute offset: 0x85074
    }

    VoidType scheduleWarmUpFrame(DynamicType) {
        Code at absolute offset: 0xd9c78
    }

    VoidType resetEpoch(DynamicType) {
        Code at absolute offset: 0xdd198
    }

    Duration _adjustForEpoch@359222615(DynamicType, DynamicType) {
        Code at absolute offset: 0xdce7c
    }

    VoidType _handleBeginFrame@359222615(DynamicType, DynamicType) {
        Code at absolute offset: 0xdcc18
    }

    VoidType _handleDrawFrame@359222615(DynamicType) {
        Code at absolute offset: 0xdc818
    }

    VoidType handleBeginFrame(DynamicType, DynamicType) {
        Code at absolute offset: 0xdcc74
    }

    VoidType handleDrawFrame(DynamicType) {
        Code at absolute offset: 0xdc35c
    }

    VoidType _invokeFrameCallback@359222615(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xdc6b8
    }

    DynamicType get:_executeTimingsCallbacks@359222615(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_runTasks@359222615(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:ensureVisualUpdate(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleBeginFrame@359222615(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleDrawFrame@359222615(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _WidgetsFlutterBinding&BindingBase&GestureBinding@441399801 extends BindingBase implements GestureBinding {
    _Resampler@114304576 _resampler@114304576

    _Resampler@114304576 get:_resampler@114304576(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _WidgetsFlutterBinding&BindingBase&GestureBinding@441399801 _WidgetsFlutterBinding&BindingBase&GestureBinding@441399801.(DynamicType) {
        Code at absolute offset: 0x82218
    }

    VoidType initInstances(DynamicType) {
        Code at absolute offset: 0x65748
    }

    VoidType unlocked(DynamicType) {
        Code at absolute offset: 0xdc148
    }

    VoidType _handlePointerDataPacket@114304576(DynamicType, DynamicType) {
        Code at absolute offset: 0x65898
    }

    VoidType cancelPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0xdbf28
    }

    VoidType _flushPointerEventQueue@114304576(DynamicType) {
        Code at absolute offset: 0x65958
    }

    VoidType _handlePointerEvent@114304576(DynamicType, DynamicType) {
        Code at absolute offset: 0x659f0
    }

    VoidType hitTest(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x67ff0
    }

    VoidType dispatchEvent(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x65c7c
    }

    VoidType handleEvent(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x106d30
    }

    VoidType _handleSampleTimeChanged@114304576(DynamicType) {
        Code at absolute offset: 0xdc0bc
    }

    DynamicType get:_handlePointerDataPacket@114304576(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:cancelPointer(DynamicType) {
        Code at absolute offset: 0x17e2ac
    }

    DynamicType get:_flushPointerEventQueue@114304576(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handlePointerEvent@114304576(DynamicType) {
        Code at absolute offset: 0x17f6e0
    }

    DynamicType get:_handleSampleTimeChanged@114304576(DynamicType) {
        Code at absolute offset: 0x17f6c8
    }
}

class BindingBase extends Object {

    BindingBase BindingBase.(DynamicType) {
        Code at absolute offset: 0x55f2c
    }

    Window get:window(DynamicType) {
        Code at absolute offset: 0x3e108
    }

    Future lockEvents(DynamicType, DynamicType) {
        Code at absolute offset: 0x3d5b0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14bd60
    }
}

class :: {
}

class :: {

    VoidType registerExtension(DynamicType, DynamicType) {
        Code at absolute offset: 0x3dcb4
    }

    VoidType postEvent(DynamicType, DynamicType) {
        Code at absolute offset: 0x3dc64
    }

    VoidType _postEvent@5383715(DynamicType, DynamicType) {
        Code at absolute offset: 0x3dc24
    }

    _Closure@0150898 _lookupExtension@5383715(DynamicType) {
        Code at absolute offset: 0x3daf8
    }

    DynamicType _registerExtension@5383715(DynamicType, DynamicType) {
        Code at absolute offset: 0x3dabc
    }

    String _argumentsAsJson@5383715(DynamicType) {
        Code at absolute offset: 0x3ddb8
    }

    bool _isDartStreamEnabled@5383715() {
        Code at absolute offset: 0x3df14
    }

    int _getNextAsyncId@5383715() {
        Code at absolute offset: 0x3da48
    }

    VoidType _reportTaskEvent@5383715(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3d9b0
    }

    VoidType _reportFlowEvent@5383715(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3d9f8
    }
}

class ServiceExtensionResponse extends Object {

    ServiceExtensionResponse ServiceExtensionResponse.result(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    ServiceExtensionResponse ServiceExtensionResponse.error(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType _validateErrorCode@5383715(DynamicType) {
        Code at absolute offset: 0x3db6c
    }
}

class _SyncBlock@5383715 extends Object {

    VoidType _startSync@5383715(DynamicType) {
        Code at absolute offset: 0x3d950
    }

    VoidType finish(DynamicType) {
        Code at absolute offset: 0x3de38
    }

    VoidType set:flow(DynamicType, DynamicType) {
        Code at absolute offset: 0x1da3c
    }
}

class Timeline extends Object {
    List _stack@5383715

    List get:_stack@5383715() {
        Code at absolute offset: 0xfaa0
    }

    VoidType startSync(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3d67c
    }

    VoidType finishSync() {
        Code at absolute offset: 0x3e02c
    }

    T timeSync(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3df7c
    }
}

class Window extends Object {
    String _initialLifecycleState@16065589
    _Closure@0150898 _setNeedsReportTimings@16065589

    String get:_initialLifecycleState@16065589(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Closure@0150898 get:_setNeedsReportTimings@16065589(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Window Window._@16065589(DynamicType) {
        Code at absolute offset: 0x3e17c
    }

    VoidType set:onMetricsChanged(DynamicType, DynamicType) {
        Code at absolute offset: 0x5560c
    }

    Locale get:locale(DynamicType) {
        Code at absolute offset: 0x43ca4
    }

    VoidType set:onLocaleChanged(DynamicType, DynamicType) {
        Code at absolute offset: 0x55e90
    }

    String get:initialLifecycleState(DynamicType) {
        Code at absolute offset: 0x55e48
    }

    VoidType set:onTextScaleFactorChanged(DynamicType, DynamicType) {
        Code at absolute offset: 0x55c18
    }

    VoidType set:onPlatformBrightnessChanged(DynamicType, DynamicType) {
        Code at absolute offset: 0x5543c
    }

    VoidType set:onBeginFrame(DynamicType, DynamicType) {
        Code at absolute offset: 0x55db4
    }

    VoidType set:onDrawFrame(DynamicType, DynamicType) {
        Code at absolute offset: 0x556cc
    }

    VoidType set:onReportTimings(DynamicType, DynamicType) {
        Code at absolute offset: 0x55918
    }

    VoidType _nativeSetNeedsReportTimings@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x3e3c4
    }

    VoidType set:onPointerDataPacket(DynamicType, DynamicType) {
        Code at absolute offset: 0x55760
    }

    String get:defaultRouteName(DynamicType) {
        Code at absolute offset: 0x554d0
    }

    String _defaultRouteName@16065589(DynamicType) {
        Code at absolute offset: 0x554f8
    }

    VoidType scheduleFrame(DynamicType) {
        Code at absolute offset: 0x55698
    }

    VoidType render(DynamicType, DynamicType) {
        Code at absolute offset: 0x55bdc
    }

    VoidType set:onSemanticsEnabledChanged(DynamicType, DynamicType) {
        Code at absolute offset: 0x55a78
    }

    VoidType set:onSemanticsAction(DynamicType, DynamicType) {
        Code at absolute offset: 0x557f4
    }

    VoidType set:onAccessibilityFeaturesChanged(DynamicType, DynamicType) {
        Code at absolute offset: 0x55578
    }

    VoidType updateSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0x55b0c
    }

    VoidType sendPlatformMessage(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x55d44
    }

    String _sendPlatformMessage@16065589(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x55888
    }

    VoidType set:onPlatformMessage(DynamicType, DynamicType) {
        Code at absolute offset: 0x55b48
    }

    VoidType _respondToPlatformMessage@16065589(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x456f8
    }

    _Closure@0150898 _zonedPlatformMessageResponseCallback@16065589(DynamicType) {
        Code at absolute offset: 0x55ca4
    }

    DynamicType get:_nativeSetNeedsReportTimings@16065589(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
    ChannelBuffers channelBuffers
    Window window

    ChannelBuffers get:channelBuffers() {
        Code at absolute offset: 0xfaa0
    }

    Window get:window() {
        Code at absolute offset: 0xfaa0
    }

    int hashValues(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x46c6c
    }

    int hashList(DynamicType) {
        Code at absolute offset: 0x45f64
    }

    VoidType _updateWindowMetrics@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x487e8
    }

    String _localeClosure@16065589() {
        Code at absolute offset: 0x43bec
    }

    _Closure@0150898 _getLocaleClosure@16065589() {
        Code at absolute offset: 0x43820
    }

    VoidType _updateLocales@16065589(DynamicType) {
        Code at absolute offset: 0x45a94
    }

    VoidType _updateUserSettingsData@16065589(DynamicType) {
        Code at absolute offset: 0x432e8
    }

    VoidType _updateLifecycleState@16065589(DynamicType) {
        Code at absolute offset: 0x47ec4
    }

    VoidType _updateTextScaleFactor@16065589(DynamicType) {
        Code at absolute offset: 0x43720
    }

    VoidType _updateAlwaysUse24HourFormat@16065589(DynamicType) {
        Code at absolute offset: 0x436bc
    }

    VoidType _updatePlatformBrightness@16065589(DynamicType) {
        Code at absolute offset: 0x43508
    }

    VoidType _updateSemanticsEnabled@16065589(DynamicType) {
        Code at absolute offset: 0x45e28
    }

    VoidType _updateAccessibilityFeatures@16065589(DynamicType) {
        Code at absolute offset: 0x485f4
    }

    VoidType _dispatchPlatformMessage@16065589(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x453e4
    }

    VoidType _dispatchPointerDataPacket@16065589(DynamicType) {
        Code at absolute offset: 0x418f8
    }

    VoidType _dispatchSemanticsAction@16065589(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x43860
    }

    VoidType _beginFrame@16065589(DynamicType) {
        Code at absolute offset: 0x47950
    }

    VoidType _reportTimings@16065589(DynamicType) {
        Code at absolute offset: 0x4806c
    }

    VoidType _drawFrame@16065589() {
        Code at absolute offset: 0x45854
    }

    VoidType _runMainZoned@16065589(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x45904
    }

    VoidType _reportUnhandledException@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x45a58
    }

    VoidType _invoke@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x43604
    }

    VoidType _invoke1@16065589(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x419a4
    }

    VoidType _invoke3@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x43924
    }

    PointerDataPacket _unpackPointerDataPacket@16065589(DynamicType) {
        Code at absolute offset: 0x41aa0
    }

    double lerpDouble(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x463c8
    }

    VoidType _print@16065589(DynamicType) {
        Code at absolute offset: 0x4324c
    }

    VoidType _printDebug@16065589(DynamicType) {
        Code at absolute offset: 0x418cc
    }

    VoidType _setupHooks@16065589() {
        Code at absolute offset: 0x47c30
    }

    VoidType _scheduleMicrotask@16065589(DynamicType) {
        Code at absolute offset: 0x47fd4
    }

    Function _getPrintClosure@16065589() {
        Code at absolute offset: 0x46624
    }

    Function _getScheduleMicrotaskClosure@16065589() {
        Code at absolute offset: 0x45f28
    }

    Color _scaleAlpha@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x43f70
    }

    Int32List _encodeColorList@16065589(DynamicType) {
        Code at absolute offset: 0x46970
    }

    Float32List _encodeTwoPoints@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c40
    }

    Future _futurize@16065589(DynamicType) {
        Code at absolute offset: 0x462b0
    }

    bool _listEquals@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x46a68
    }

    Int32List _encodeTextStyle@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x46660
    }

    Int32List _encodeParagraphStyle@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47aa8
    }
}

class ChannelBuffers extends Object {

    ChannelBuffers ChannelBuffers.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _RingBuffer@16065589 _makeRingBuffer@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x3eb68
    }

    VoidType _onDropItem@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x3e4f8
    }

    bool push(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x417b4
    }

    _StoredMessage@16065589 _pop@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x41708
    }

    bool _isEmpty@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x4168c
    }

    VoidType _resize@16065589(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3e73c
    }

    Future drain(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x412f0
    }

    String _getString@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x3fad4
    }

    VoidType handleMessage(DynamicType, DynamicType) {
        Code at absolute offset: 0x3e5a4
    }

    DynamicType get:_onDropItem@16065589(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _StoredMessage@16065589 extends Object {
}

class _Logger@16065589 extends Object {

    VoidType _printString@16065589(DynamicType) {
        Code at absolute offset: 0x3e824
    }

    VoidType _printDebugString@16065589(DynamicType) {
        Code at absolute offset: 0x3e858
    }
}

class _RingBuffer@16065589<T> extends Object {

    _RingBuffer@16065589 _RingBuffer@16065589.(DynamicType, DynamicType) {
        Code at absolute offset: 0x3ead8
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x3eaa0
    }

    VoidType set:dropItemCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0x1da3c
    }

    bool push(DynamicType, DynamicType) {
        Code at absolute offset: 0x3e9e0
    }

    T pop(DynamicType) {
        Code at absolute offset: 0x3e998
    }

    int _dropOverflowItems@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x3e8c0
    }

    int resize(DynamicType, DynamicType) {
        Code at absolute offset: 0x3e88c
    }
}

class __InternalLinkedHashMap&_HashVMBase&MapMixin&_LinkedHashMapMixin&_HashBase&_OperatorEqualsAndHashCode@3220832<K, V> extends __InternalLinkedHashMap&_HashVMBase&MapMixin&_LinkedHashMapMixin&_HashBase@3220832 implements _OperatorEqualsAndHashCode@3220832 {

    int _hashCode@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0x3ee10
    }

    bool _equals@3220832(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class __InternalLinkedHashMap&_HashVMBase&MapMixin&_LinkedHashMapMixin&_HashBase@3220832<K, V> extends __InternalLinkedHashMap&_HashVMBase&MapMixin&_LinkedHashMapMixin@3220832 implements _HashBase@3220832 {

    int get:_checkSum@3220832(DynamicType) {
        Code at absolute offset: 0x176a54
    }

    bool _isModifiedSince@3220832(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16fd08
    }
}

class __InternalLinkedHashMap&_HashVMBase&MapMixin&_LinkedHashMapMixin@3220832<K, V> extends __InternalLinkedHashMap&_HashVMBase&MapMixin@3220832 implements _LinkedHashMapMixin@3220832 {

    int get:length(DynamicType) {
        Code at absolute offset: 0x13ccf0
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x136bf8
    }

    bool get:isNotEmpty(DynamicType) {
        Code at absolute offset: 0x13d354
    }

    VoidType _rehash@3220832(DynamicType) {
        Code at absolute offset: 0x3f36c
    }

    VoidType clear(DynamicType) {
        Code at absolute offset: 0x3fa78
    }

    VoidType _init@3220832(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3f404
    }

    VoidType _regenerateIndex@3220832(DynamicType) {
        Code at absolute offset: 0x3ee62
    }

    VoidType _insert@3220832(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3f20c
    }

    int _findValueOrInsertPoint@3220832(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3f7f0
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x131af6
    }

    V putIfAbsent(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3f608
    }

    V remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x1356fc
    }

    Object _getValueOrData@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0x3ebe4
    }

    bool containsKey(DynamicType, DynamicType) {
        Code at absolute offset: 0x15197c
    }

    V [](DynamicType, DynamicType) {
        Code at absolute offset: 0x13c9e2
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x137000
    }

    Iterable get:keys(DynamicType) {
        Code at absolute offset: 0x1306d4
    }

    Iterable get:values(DynamicType) {
        Code at absolute offset: 0x16b4c8
    }

    DynamicType get:remove(DynamicType) {
        Code at absolute offset: 0x15a8e0
    }
}

class __InternalLinkedHashMap&_HashVMBase&MapMixin@3220832<K, V> extends _HashVMBase@3220832 implements MapMixin {

    VoidType addAll(DynamicType, DynamicType) {
        Code at absolute offset: 0x3f0e4
    }

    Iterable get:entries(DynamicType) {
        Code at absolute offset: 0x3f028
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x140b94
    }
}

class MapEntry<K, V> extends Object {

    K get:key(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    V get:value(DynamicType) {
        Code at absolute offset: 0x1d792
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x141bdc
    }
}

class _OperatorEqualsAndHashCode@3220832 extends Object {
}

class _Utf8Decoder@10003594 extends Object {

    VoidType set:_state@10003594(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int scan(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int skipBomSingle(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String decode8(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x40ea4
    }

    String decode16(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x40964
    }

    String convertSingle(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3fc60
    }

    String decodeGeneral(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x401cc
    }

    Uint8List _makeUint8List@10003594(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4119c
    }
}

class Utf8Decoder extends Converter {

    String convert(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3fbc8
    }
}

class Utf8Codec extends Encoding {

    String decode(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x3fb38
    }
}

class Encoding extends Codec {
}

class _AsyncAwaitCompleter@4048458<T> extends Object implements Completer {
    _Future@4048458 _future@4048458
    bool isSync

    _Future@4048458 get:_future@4048458(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    bool get:isSync(DynamicType) {
        Code at absolute offset: 0x415bc
    }

    VoidType set:isSync(DynamicType, DynamicType) {
        Code at absolute offset: 0x415a4
    }

    _AsyncAwaitCompleter@4048458 _AsyncAwaitCompleter@4048458.(DynamicType) {
        Code at absolute offset: 0x415d4
    }

    VoidType complete(DynamicType, DynamicType) {
        Code at absolute offset: 0x172ed0
    }

    VoidType completeError(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16f1cc
    }

    VoidType start(DynamicType, DynamicType) {
        Code at absolute offset: 0x41458
    }

    Future get:future(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class PointerDataPacket extends Object {
}

class PointerData extends Object {

    PointerData PointerData.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x146a00
    }
}

class Locale extends Object {
    Locale _cachedLocale@16065589
    String _cachedLocaleString@16065589

    String get:languageCode(DynamicType) {
        Code at absolute offset: 0x43ee0
    }

    String get:countryCode(DynamicType) {
        Code at absolute offset: 0x43e90
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x178eac
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x1582f4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x148ea4
    }

    String _rawToString@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x43d54
    }
}

class Color extends Object {

    int get:value(DynamicType) {
        Code at absolute offset: 0xe3bfc
    }

    Color Color.(DynamicType, DynamicType) {
        Code at absolute offset: 0x450c4
    }

    double get:opacity(DynamicType) {
        Code at absolute offset: 0x45048
    }

    int get:red(DynamicType) {
        Code at absolute offset: 0x451d0
    }

    int get:green(DynamicType) {
        Code at absolute offset: 0x45168
    }

    int get:blue(DynamicType) {
        Code at absolute offset: 0x45104
    }

    Color withAlpha(DynamicType, DynamicType) {
        Code at absolute offset: 0x440a0
    }

    Color withOpacity(DynamicType, DynamicType) {
        Code at absolute offset: 0x44fa8
    }

    double computeLuminance(DynamicType) {
        Code at absolute offset: 0x44ab8
    }

    Color lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x44328
    }

    int getAlphaFromOpacity(DynamicType) {
        Code at absolute offset: 0x44268
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x178458
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x157d80
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1468ac
    }
}

class _Jenkins@16065589 extends Object {

    int combine(DynamicType, DynamicType) {
        Code at absolute offset: 0x461c0
    }
}

class Float32List extends Object implements List, _TypedFloatList@7027147 {

    Float32List Float32List.(DynamicType, DynamicType) {
        Code at absolute offset: 0x47d18
    }

    Float32List Float32List.fromList(DynamicType, DynamicType) {
        Code at absolute offset: 0x47e34
    }
}

class FrameTiming extends Object {

    Duration _rawDuration@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x483c0
    }

    Duration get:buildDuration(DynamicType) {
        Code at absolute offset: 0x48518
    }

    Duration get:rasterDuration(DynamicType) {
        Code at absolute offset: 0x484a8
    }

    Duration get:vsyncOverhead(DynamicType) {
        Code at absolute offset: 0x48438
    }

    Duration get:totalSpan(DynamicType) {
        Code at absolute offset: 0x48350
    }

    String _formatMS@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x4829c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x148c90
    }
}

class AccessibilityFeatures extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x148f2c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x179128
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x157e18
    }
}

class WindowPadding extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x148e10
    }
}

class Size extends OffsetBase {

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x4d6f0
    }

    OffsetBase -(DynamicType, DynamicType) {
        Code at absolute offset: 0x49734
    }

    Size +(DynamicType, DynamicType) {
        Code at absolute offset: 0x49568
    }

    Size *(DynamicType, DynamicType) {
        Code at absolute offset: 0x493d4
    }

    Size /(DynamicType, DynamicType) {
        Code at absolute offset: 0x4d5dc
    }

    Offset topRight(DynamicType, DynamicType) {
        Code at absolute offset: 0x4d54c
    }

    Offset center(DynamicType, DynamicType) {
        Code at absolute offset: 0x4d434
    }

    Offset bottomLeft(DynamicType, DynamicType) {
        Code at absolute offset: 0x4d39c
    }

    Offset bottomRight(DynamicType, DynamicType) {
        Code at absolute offset: 0x4d298
    }

    bool contains(DynamicType, DynamicType) {
        Code at absolute offset: 0x4d198
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x177988
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x157670
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x144de4
    }
}

class Offset extends OffsetBase {

    double get:dy(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    double get:distance(DynamicType) {
        Code at absolute offset: 0x4d104
    }

    double get:distanceSquared(DynamicType) {
        Code at absolute offset: 0x4d0b0
    }

    double get:direction(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Offset unary-(DynamicType) {
        Code at absolute offset: 0x4cfa4
    }

    Offset -(DynamicType, DynamicType) {
        Code at absolute offset: 0x49d94
    }

    Offset +(DynamicType, DynamicType) {
        Code at absolute offset: 0x49bcc
    }

    Offset *(DynamicType, DynamicType) {
        Code at absolute offset: 0x49a38
    }

    Offset /(DynamicType, DynamicType) {
        Code at absolute offset: 0x4ce90
    }

    Rect &(DynamicType, DynamicType) {
        Code at absolute offset: 0x4a12c
    }

    Offset lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x49edc
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1778d4
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x157670
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x144ce4
    }
}

class Rect extends Object {

    Rect Rect.fromLTRB(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4b50c
    }

    Rect Rect.fromCircle(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4b208
    }

    Rect Rect.fromCenter(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4b294
    }

    Rect Rect.fromPoints(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4c784
    }

    Size get:size(DynamicType) {
        Code at absolute offset: 0x4b5d4
    }

    Rect shift(DynamicType, DynamicType) {
        Code at absolute offset: 0x4afc0
    }

    Rect translate(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4ada8
    }

    Rect inflate(DynamicType, DynamicType) {
        Code at absolute offset: 0x4a298
    }

    Rect deflate(DynamicType, DynamicType) {
        Code at absolute offset: 0x4b704
    }

    Rect intersect(DynamicType, DynamicType) {
        Code at absolute offset: 0x4b980
    }

    Rect expandToInclude(DynamicType, DynamicType) {
        Code at absolute offset: 0x4a498
    }

    double get:shortestSide(DynamicType) {
        Code at absolute offset: 0x4b744
    }

    Offset get:topLeft(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Offset get:topRight(DynamicType) {
        Code at absolute offset: 0x4b4d4
    }

    Offset get:center(DynamicType) {
        Code at absolute offset: 0x4c62c
    }

    Offset get:bottomLeft(DynamicType) {
        Code at absolute offset: 0x4b59c
    }

    Offset get:bottomRight(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool contains(DynamicType, DynamicType) {
        Code at absolute offset: 0x4cd5c
    }

    Rect lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4bef4
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x177a3c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x1576c0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x144ee4
    }
}

class :: {

    double _atan2@12383281(DynamicType, DynamicType) {
        Code at absolute offset: 0x4ad28
    }

    double _sin@12383281(DynamicType) {
        Code at absolute offset: 0x4abd4
    }

    double _cos@12383281(DynamicType) {
        Code at absolute offset: 0x4aaac
    }

    T min(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    T max(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    double atan2(DynamicType, DynamicType) {
        Code at absolute offset: 0x4ac50
    }

    double sin(DynamicType) {
        Code at absolute offset: 0x4ab28
    }

    double cos(DynamicType) {
        Code at absolute offset: 0x4aa00
    }
}

class OffsetBase extends Object {
}

class ImageShader extends Shader {

    ImageShader ImageShader.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4dc80
    }

    VoidType _constructor@16065589(DynamicType) {
        Code at absolute offset: 0x4dc4c
    }

    VoidType _initWithImage@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4dc0c
    }
}

class ParagraphConstraints extends Object {

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x178df8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0xcca08
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x148c18
    }
}

class FrameInfo extends NativeFieldWrapperClass2 {

    FrameInfo FrameInfo._@16065589(DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class NativeFieldWrapperClass2 extends Object {
}

class TextDecorationStyle extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class StrokeCap extends Object {
}

class _HashEnd@16065589 extends Object {
}

class Gradient extends Shader {

    Gradient Gradient.linear(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4def4
    }

    VoidType _constructor@16065589(DynamicType) {
        Code at absolute offset: 0x4dec0
    }

    VoidType _initLinear@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4de78
    }

    VoidType _validateColorStops@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x4dd64
    }
}

class AppLifecycleState extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class EngineLayer extends NativeFieldWrapperClass2 {

    EngineLayer EngineLayer._@16065589(DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class FilterQuality extends Object {
}

class TextAlign extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class Scene extends NativeFieldWrapperClass2 {

    Scene Scene._@16065589(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x4e074
    }
}

class Shadow extends Object {

    ByteData _encodeShadows@16065589(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class PointerDeviceKind extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class SemanticsFlag extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x146d54
    }
}

class Canvas extends NativeFieldWrapperClass2 {

    Canvas Canvas.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4e970
    }

    VoidType _constructor@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4ea8c
    }

    VoidType save(DynamicType) {
        Code at absolute offset: 0x4edfc
    }

    VoidType saveLayer(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4ecc4
    }

    VoidType _saveLayer@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4ed1c
    }

    VoidType restore(DynamicType) {
        Code at absolute offset: 0x4ee30
    }

    VoidType translate(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4ebec
    }

    VoidType transform(DynamicType, DynamicType) {
        Code at absolute offset: 0x4e814
    }

    VoidType _transform@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x4e878
    }

    VoidType clipRect(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4e198
    }

    VoidType _clipRect@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4e260
    }

    VoidType clipRRect(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _clipRRect@16065589(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4eba8
    }

    VoidType clipPath(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4e0e8
    }

    VoidType _clipPath@16065589(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4e158
    }

    VoidType drawRect(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4e750
    }

    VoidType _drawRect@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4e7cc
    }

    VoidType drawRRect(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4e2a8
    }

    VoidType _drawRRect@16065589(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4e304
    }

    VoidType drawDRRect(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4ee64
    }

    VoidType _drawDRRect@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4eb64
    }

    VoidType drawCircle(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4e8b4
    }

    VoidType _drawCircle@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4e928
    }

    VoidType drawPath(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4ec2c
    }

    VoidType _drawPath@16065589(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4ec80
    }

    VoidType drawParagraph(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4ed64
    }

    VoidType drawShadow(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4ead4
    }

    VoidType _drawShadow@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4eb1c
    }
}

class SemanticsAction extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x146b44
    }
}

class TextRange extends Object {
}

class PlaceholderAlignment extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class Shader extends NativeFieldWrapperClass2 {

    Shader Shader._@16065589(DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class Image extends NativeFieldWrapperClass2 {

    Image Image._@16065589(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    int get:width(DynamicType) {
        Code at absolute offset: 0x4ef74
    }

    int get:height(DynamicType) {
        Code at absolute offset: 0x4eef4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x13eaa4
    }
}

class TransformEngineLayer extends _EngineLayerWrapper@16065589 {
}

class Brightness extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class _EngineLayerWrapper@16065589 extends Object implements EngineLayer {
}

class FontFeature extends Object {
}

class StrutStyle extends Object {
}

class SceneBuilder extends NativeFieldWrapperClass2 {

    SceneBuilder SceneBuilder.(DynamicType) {
        Code at absolute offset: 0x4f270
    }

    VoidType _constructor@16065589(DynamicType) {
        Code at absolute offset: 0x4f30c
    }

    TransformEngineLayer pushTransform(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4f4a0
    }

    VoidType _pushTransform@16065589(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4f504
    }

    OffsetEngineLayer pushOffset(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4f544
    }

    VoidType _pushOffset@16065589(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4f660
    }

    ClipRectEngineLayer pushClipRect(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x501d0
    }

    VoidType _pushClipRect@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4f6a4
    }

    OpacityEngineLayer pushOpacity(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x50080
    }

    VoidType _pushOpacity@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5014c
    }

    PhysicalShapeEngineLayer pushPhysicalShape(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4f6ec
    }

    EngineLayer _pushPhysicalShape@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4f9b0
    }

    VoidType pop(DynamicType) {
        Code at absolute offset: 0x4f1d4
    }

    VoidType _pop@16065589(DynamicType) {
        Code at absolute offset: 0x4f23c
    }

    VoidType addRetained(DynamicType, DynamicType) {
        Code at absolute offset: 0x4f340
    }

    VoidType _addRetained@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x4f378
    }

    VoidType addPerformanceOverlay(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4ffd4
    }

    VoidType _addPerformanceOverlay@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x50038
    }

    VoidType addPicture(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4f048
    }

    VoidType _addPicture@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4f190
    }

    VoidType setRasterizerTracingThreshold(DynamicType, DynamicType) {
        Code at absolute offset: 0x4f468
    }

    VoidType setCheckerboardRasterCacheImages(DynamicType, DynamicType) {
        Code at absolute offset: 0x4f428
    }

    VoidType setCheckerboardOffscreenLayers(DynamicType, DynamicType) {
        Code at absolute offset: 0x50190
    }

    Scene build(DynamicType) {
        Code at absolute offset: 0x4f3b4
    }

    VoidType _build@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x4f3ec
    }
}

class CupertinoDynamicColor extends _CupertinoDynamicColor&Color&Diagnosticable@59482824 {

    int get:value(DynamicType) {
        Code at absolute offset: 0x1770c8
    }

    Color resolve(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool get:_isPlatformBrightnessDependent@59482824(DynamicType) {
        Code at absolute offset: 0x4fe14
    }

    bool get:_isHighContrastDependent@59482824(DynamicType) {
        Code at absolute offset: 0x4fc54
    }

    bool get:_isInterfaceElevationDependent@59482824(DynamicType) {
        Code at absolute offset: 0x4fa94
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x177ee0
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x157c74
    }

    String toString(DynamicType, DynamicType) {
        Code at absolute offset: 0x145a94
    }
}

class _CupertinoDynamicColor&Color&Diagnosticable@59482824 extends Color implements Diagnosticable {
}

class :: {
}

class PaintingStyle extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class PhysicalShapeEngineLayer extends _EngineLayerWrapper@16065589 {
}

class ParagraphBuilder extends NativeFieldWrapperClass2 {

    ParagraphBuilder ParagraphBuilder.(DynamicType, DynamicType) {
        Code at absolute offset: 0x50d7c
    }

    VoidType _constructor@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x50d28
    }

    VoidType pushStyle(DynamicType, DynamicType) {
        Code at absolute offset: 0x50528
    }

    VoidType _pushStyle@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x504bc
    }

    String _encodeLocale@16065589(DynamicType) {
        Code at absolute offset: 0x50460
    }

    VoidType pop(DynamicType) {
        Code at absolute offset: 0x5042c
    }

    VoidType addText(DynamicType, DynamicType) {
        Code at absolute offset: 0x503c0
    }

    String _addText@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x5033c
    }

    Paragraph build(DynamicType) {
        Code at absolute offset: 0x502f4
    }

    VoidType _build@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x502b8
    }
}

class BoxWidthStyle extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x148c80
    }
}

class TextStyle extends Object {

    TextStyle TextStyle.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x50eac
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x178678
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x157e5c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x147434
    }
}

class SemanticsUpdate extends NativeFieldWrapperClass2 {

    SemanticsUpdate SemanticsUpdate._@16065589(DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class Codec extends NativeFieldWrapperClass2 {

    Codec Codec._@16065589(DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class StrokeJoin extends Object {
}

class BlurStyle extends Object {
}

class RRect extends Object {

    RRect RRect.fromRectXY(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x52b24
    }

    RRect RRect.fromRectAndRadius(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x52900
    }

    RRect RRect.fromRectAndCorners(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x529d4
    }

    Float32List get:_value32@16065589(DynamicType) {
        Code at absolute offset: 0x4e348
    }

    Radius get:tlRadius(DynamicType) {
        Code at absolute offset: 0x52c34
    }

    Radius get:trRadius(DynamicType) {
        Code at absolute offset: 0x52bf4
    }

    Radius get:brRadius(DynamicType) {
        Code at absolute offset: 0x52ae4
    }

    Radius get:blRadius(DynamicType) {
        Code at absolute offset: 0x514ec
    }

    RRect shift(DynamicType, DynamicType) {
        Code at absolute offset: 0x51884
    }

    RRect inflate(DynamicType, DynamicType) {
        Code at absolute offset: 0x5153c
    }

    RRect deflate(DynamicType, DynamicType) {
        Code at absolute offset: 0x528c0
    }

    Rect get:outerRect(DynamicType) {
        Code at absolute offset: 0x52868
    }

    double _getMin@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    RRect scaleRadii(DynamicType) {
        Code at absolute offset: 0x51fa0
    }

    bool contains(DynamicType, DynamicType) {
        Code at absolute offset: 0x51be8
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x177c90
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x157800
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1452d8
    }
}

class BlendMode extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class TextHeightBehavior extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class Paint extends Object {
    int _kBlendModeDefault@16065589
    bool enableDithering

    int get:_kBlendModeDefault@16065589() {
        Code at absolute offset: 0xfaa0
    }

    Paint Paint.(DynamicType) {
        Code at absolute offset: 0x53130
    }

    List _ensureObjectsInitialized@16065589(DynamicType) {
        Code at absolute offset: 0x52d38
    }

    VoidType set:isAntiAlias(DynamicType, DynamicType) {
        Code at absolute offset: 0x53084
    }

    VoidType set:color(DynamicType, DynamicType) {
        Code at absolute offset: 0x52fc4
    }

    VoidType set:blendMode(DynamicType, DynamicType) {
        Code at absolute offset: 0x52ee8
    }

    VoidType set:style(DynamicType, DynamicType) {
        Code at absolute offset: 0x52e40
    }

    VoidType set:strokeWidth(DynamicType, DynamicType) {
        Code at absolute offset: 0x52d98
    }

    VoidType set:shader(DynamicType, DynamicType) {
        Code at absolute offset: 0x52cc4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1469c8
    }
}

class PointerChange extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class TextPosition extends Object {

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x178c50
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x157670
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x148a78
    }
}

class TileMode extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x1469f0
    }
}

class TextDecoration extends Object {

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1785b4
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x157e18
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14713c
    }
}

class PictureRecorder extends NativeFieldWrapperClass2 {

    PictureRecorder PictureRecorder.(DynamicType) {
        Code at absolute offset: 0x5331c
    }

    VoidType _constructor@16065589(DynamicType) {
        Code at absolute offset: 0x532e8
    }

    Picture endRecording(DynamicType) {
        Code at absolute offset: 0x53244
    }

    VoidType _endRecording@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x53208
    }
}

class ClipRectEngineLayer extends _EngineLayerWrapper@16065589 {
}

class BoxHeightStyle extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x148c70
    }
}

class OffsetEngineLayer extends _EngineLayerWrapper@16065589 {
}

class TextBox extends Object {

    Rect toRect(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x178b0c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158030
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1487a8
    }
}

class TextAffinity extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class Path extends NativeFieldWrapperClass2 {

    Path Path.(DynamicType) {
        Code at absolute offset: 0x53644
    }

    VoidType _constructor@16065589(DynamicType) {
        Code at absolute offset: 0x53670
    }

    VoidType moveTo(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x53730
    }

    VoidType lineTo(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x537d8
    }

    VoidType quadraticBezierTo(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x53818
    }

    VoidType addRect(DynamicType, DynamicType) {
        Code at absolute offset: 0x536a4
    }

    VoidType _addRect@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x536ec
    }

    VoidType addOval(DynamicType, DynamicType) {
        Code at absolute offset: 0x53580
    }

    VoidType _addOval@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x535c8
    }

    VoidType addRRect(DynamicType, DynamicType) {
        Code at absolute offset: 0x5360c
    }

    VoidType _addRRect@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x534fc
    }

    VoidType close(DynamicType) {
        Code at absolute offset: 0x537a4
    }

    VoidType reset(DynamicType) {
        Code at absolute offset: 0x53770
    }

    bool contains(DynamicType, DynamicType) {
        Code at absolute offset: 0x53538
    }

    bool _contains@16065589(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x53474
    }

    Path shift(DynamicType, DynamicType) {
        Code at absolute offset: 0x533c8
    }

    VoidType _shift@16065589(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x53430
    }
}

class FramePhase extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class ImageFilter extends Object {
}

class SemanticsUpdateBuilder extends NativeFieldWrapperClass2 {

    SemanticsUpdateBuilder SemanticsUpdateBuilder.(DynamicType) {
        Code at absolute offset: 0x540f0
    }

    VoidType _constructor@16065589(DynamicType) {
        Code at absolute offset: 0x540bc
    }

    VoidType updateNode(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x539b8
    }

    VoidType _updateNode@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x538ec
    }

    SemanticsUpdate build(DynamicType) {
        Code at absolute offset: 0x538b4
    }

    VoidType _build@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x53878
    }
}

class ClipOp extends Object {
}

class Clip extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class PointerSignalKind extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class FontStyle extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class Radius extends Object {

    Radius -(DynamicType, DynamicType) {
        Code at absolute offset: 0x54328
    }

    Radius +(DynamicType, DynamicType) {
        Code at absolute offset: 0x54240
    }

    Radius *(DynamicType, DynamicType) {
        Code at absolute offset: 0x5415c
    }

    Radius lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x54390
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x177b90
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15771c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x145098
    }
}

class Picture extends NativeFieldWrapperClass2 {

    Picture Picture._@16065589(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    Future toImage(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x544b4
    }

    String _toImage@16065589(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x54424
    }
}

class TextBaseline extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class FontWeight extends Object {

    FontWeight lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x545b8
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x146f94
    }
}

class ParagraphStyle extends Object {

    ParagraphStyle ParagraphStyle.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x54748
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1788b8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x157fa4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x147ff8
    }
}

class TextDirection extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class Paragraph extends NativeFieldWrapperClass2 {

    Paragraph Paragraph._@16065589(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    double get:width(DynamicType) {
        Code at absolute offset: 0x55200
    }

    double get:height(DynamicType) {
        Code at absolute offset: 0x55328
    }

    double get:maxIntrinsicWidth(DynamicType) {
        Code at absolute offset: 0x55034
    }

    double get:alphabeticBaseline(DynamicType) {
        Code at absolute offset: 0x552ac
    }

    bool get:didExceedMaxLines(DynamicType) {
        Code at absolute offset: 0x54fb8
    }

    VoidType layout(DynamicType, DynamicType) {
        Code at absolute offset: 0x5527c
    }

    VoidType _layout@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x54eec
    }

    List _decodeTextBoxes@16065589(DynamicType, DynamicType) {
        Code at absolute offset: 0x54b28
    }

    List getBoxesForRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x553a4
    }

    Float32List _getBoxesForRange@16065589(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x54f28
    }

    List getBoxesForPlaceholders(DynamicType) {
        Code at absolute offset: 0x54af8
    }

    Float32List _getBoxesForPlaceholders@16065589(DynamicType) {
        Code at absolute offset: 0x54e68
    }

    TextPosition getPositionForOffset(DynamicType, DynamicType) {
        Code at absolute offset: 0x550b0
    }

    List _getPositionForOffset@16065589(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x55190
    }

    VoidType _paint@16065589(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x4edb8
    }
}

class OpacityEngineLayer extends _EngineLayerWrapper@16065589 {
}

class _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding@441399801 extends _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding@441399801 implements ServicesBinding {
    BinaryMessenger _defaultBinaryMessenger@371240726

    BinaryMessenger get:_defaultBinaryMessenger@371240726(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding@441399801 _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding@441399801.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType initInstances(DynamicType) {
        Code at absolute offset: 0x601c8
    }

    BinaryMessenger get:defaultBinaryMessenger(DynamicType) {
        Code at absolute offset: 0x562a0
    }

    Future handleSystemMessage(DynamicType, DynamicType) {
        Code at absolute offset: 0xdbabc
    }

    VoidType initLicenses(DynamicType) {
        Code at absolute offset: 0x656a8
    }

    Stream _addLicenses@371240726(DynamicType) {
        Code at absolute offset: 0x572b8
    }

    VoidType initServiceExtensions(DynamicType) {
        Code at absolute offset: 0x56008
    }

    VoidType readInitialLifecycleStateFromNativeWindow(DynamicType) {
        Code at absolute offset: 0x5a5bc
    }

    Future _handleLifecycleMessage@371240726(DynamicType, DynamicType) {
        Code at absolute offset: 0x57160
    }

    RestorationManager createRestorationManager(DynamicType) {
        Code at absolute offset: 0x59ffc
    }

    DynamicType get:_addLicenses@371240726(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleLifecycleMessage@371240726(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class ServicesBinding extends _ServicesBinding&BindingBase&SchedulerBinding@371240726 {
    ServicesBinding _instance@371240726

    List _parseLicenses@371240726(DynamicType) {
        Code at absolute offset: 0x568f4
    }

    AppLifecycleState _parseAppLifecycleMessage@371240726(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _ServicesBinding&BindingBase&SchedulerBinding@371240726 extends Object implements BindingBase, SchedulerBinding {
}

class SchedulerBinding extends BindingBase {
    SchedulerBinding _instance@359222615

    VoidType addTimingsCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int _taskSorter@359222615(DynamicType, DynamicType) {
        Code at absolute offset: 0x56034
    }
}

class _TaskEntry@359222615<T> extends Object {

    _TaskEntry@359222615 _TaskEntry@359222615.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType run(DynamicType) {
        Code at absolute offset: 0x561bc
    }
}

class :: {
}

class _DefaultBinaryMessenger@371240726 extends BinaryMessenger {
    Map _handlers@371240726
    Map _mockHandlers@371240726

    Map get:_handlers@371240726() {
        Code at absolute offset: 0xfaa0
    }

    Map get:_mockHandlers@371240726() {
        Code at absolute offset: 0xfaa0
    }

    Future _sendPlatformMessage@371240726(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x567e4
    }

    Future handlePlatformMessage(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5642c
    }

    Future send(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x56718
    }

    VoidType setMessageHandler(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x565a8
    }

    DynamicType get:handlePlatformMessage(DynamicType) {
        Code at absolute offset: 0x1802a0
    }
}

class BinaryMessenger extends Object {

    VoidType setMessageHandler(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {

    BinaryMessenger get:defaultBinaryMessenger() {
        Code at absolute offset: 0x5625c
    }
}

class LicenseEntryWithLineBreaks extends LicenseEntry {
}

class LicenseEntry extends Object {
}

class :: {
}

class LicenseRegistry extends Object {
    List _collectors@102204121

    VoidType addLicense(DynamicType) {
        Code at absolute offset: 0x56dd0
    }
}

class Stream<T> extends Object {

    Stream Stream.fromIterable(DynamicType, DynamicType) {
        Code at absolute offset: 0x56c38
    }
}

class _GeneratedStreamImpl@4048458<T> extends _StreamImpl@4048458 {

    StreamSubscription _createSubscription@4048458(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x173910
    }
}

class _StreamImpl@4048458<T> extends Stream {

    StreamSubscription listen(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x56cb0
    }
}

class StreamSubscription<T> extends Object {
}

class _AsyncStarStreamController@4048458<T> extends Object {
    StreamController controller

    StreamController get:controller(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    VoidType set:controller(DynamicType, DynamicType) {
        Code at absolute offset: 0x59af4
    }

    _AsyncStarStreamController@4048458 _AsyncStarStreamController@4048458.(DynamicType, DynamicType) {
        Code at absolute offset: 0x59e38
    }

    Stream get:stream(DynamicType) {
        Code at absolute offset: 0x57430
    }

    VoidType runBody(DynamicType) {
        Code at absolute offset: 0x57760
    }

    VoidType scheduleGenerator(DynamicType) {
        Code at absolute offset: 0x57654
    }

    bool add(DynamicType, DynamicType) {
        Code at absolute offset: 0x5754a
    }

    bool addStream(DynamicType, DynamicType) {
        Code at absolute offset: 0x59b4c
    }

    VoidType addError(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x59d50
    }

    DynamicType close(DynamicType) {
        Code at absolute offset: 0x59c58
    }

    DynamicType onListen(DynamicType) {
        Code at absolute offset: 0x598e8
    }

    DynamicType onResume(DynamicType) {
        Code at absolute offset: 0x59924
    }

    DynamicType onCancel(DynamicType) {
        Code at absolute offset: 0x599b0
    }

    DynamicType get:runBody(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:onListen(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:onResume(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:onCancel(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class StreamController<T> extends Object implements StreamSink {

    StreamController StreamController.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x577b8
    }
}

class StreamSink<S> extends Object implements EventSink, StreamConsumer {
}

class StreamConsumer<S> extends Object {
}

class EventSink<T> extends Object implements Sink {
}

class Sink<T> extends Object {
}

class _AsyncStreamController@4048458<T> extends _StreamController@4048458 implements _AsyncStreamControllerDispatch@4048458 {

    VoidType _sendData@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _sendError@4048458(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _sendDone@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _StreamController@4048458<T> extends Object implements _StreamControllerBase@4048458 {
    Object _varData@4048458
    int _state@4048458

    Object get:_varData@4048458(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    VoidType set:_varData@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x594f0
    }

    int get:_state@4048458(DynamicType) {
        Code at absolute offset: 0x415bc
    }

    VoidType set:_state@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x596ac
    }

    VoidType set:onListen(DynamicType, DynamicType) {
        Code at absolute offset: 0x156de0
    }

    VoidType set:onResume(DynamicType, DynamicType) {
        Code at absolute offset: 0x143288
    }

    VoidType set:onCancel(DynamicType, DynamicType) {
        Code at absolute offset: 0x1551a8
    }

    Stream get:stream(DynamicType) {
        Code at absolute offset: 0x141f5c
    }

    bool get:hasListener(DynamicType) {
        Code at absolute offset: 0x163864
    }

    bool get:isClosed(DynamicType) {
        Code at absolute offset: 0x135018
    }

    bool get:isPaused(DynamicType) {
        Code at absolute offset: 0x16888c
    }

    _PendingEvents@4048458 get:_pendingEvents@4048458(DynamicType) {
        Code at absolute offset: 0x596e0
    }

    _StreamImplEvents@4048458 _ensurePendingEvents@4048458(DynamicType) {
        Code at absolute offset: 0x57d10
    }

    _ControllerSubscription@4048458 get:_subscription@4048458(DynamicType) {
        Code at absolute offset: 0x59118
    }

    Error _badEventState@4048458(DynamicType) {
        Code at absolute offset: 0x59524
    }

    Future addStream(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16f7a8
    }

    Future _ensureDoneFuture@4048458(DynamicType) {
        Code at absolute offset: 0x59590
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x15b41e
    }

    VoidType addError(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15eaf8
    }

    Future close(DynamicType) {
        Code at absolute offset: 0x1612e4
    }

    VoidType _closeUnchecked@4048458(DynamicType) {
        Code at absolute offset: 0x59304
    }

    VoidType _add@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x57950
    }

    VoidType _addError@4048458(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16b878
    }

    VoidType _close@4048458(DynamicType) {
        Code at absolute offset: 0x158404
    }

    StreamSubscription _subscribe@4048458(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16b1f0
    }

    Future _recordCancel@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x16608c
    }

    VoidType _recordPause@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x163fe0
    }

    VoidType _recordResume@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x162630
    }

    DynamicType get:add(DynamicType) {
        Code at absolute offset: 0x15ee1c
    }

    DynamicType get:_add@4048458(DynamicType) {
        Code at absolute offset: 0x135b04
    }

    DynamicType get:_addError@4048458(DynamicType) {
        Code at absolute offset: 0x149a38
    }

    DynamicType get:_close@4048458(DynamicType) {
        Code at absolute offset: 0x134538
    }
}

class _StreamControllerBase@4048458<T> extends Object implements StreamController, _StreamControllerLifecycle@4048458, _EventSink@4048458, _EventDispatch@4048458 {
}

class _EventDispatch@4048458<T> extends Object {
}

class _EventSink@4048458<T> extends Object {

    VoidType _close@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _StreamControllerLifecycle@4048458<T> extends Object {
}

class _StreamImplEvents@4048458<T> extends _PendingEvents@4048458 {

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x57abc
    }

    VoidType handleNext(DynamicType, DynamicType) {
        Code at absolute offset: 0x168a80
    }
}

class _PendingEvents@4048458<T> extends Object {

    VoidType schedule(DynamicType, DynamicType) {
        Code at absolute offset: 0x57c38
    }

    VoidType cancelSchedule(DynamicType) {
        Code at absolute offset: 0x57c0c
    }
}

class _BufferingStreamSubscription@4048458<T> extends Object implements StreamSubscription, _EventSink@4048458, _EventDispatch@4048458 {
    _Closure@0150898 _onData@4048458

    _Closure@0150898 get:_onData@4048458(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    VoidType set:_onData@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x5801c
    }

    _BufferingStreamSubscription@4048458 _BufferingStreamSubscription@4048458.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5874c
    }

    _BufferingStreamSubscription@4048458 _BufferingStreamSubscription@4048458.zoned(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x587ac
    }

    VoidType _setPendingEvents@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x58bb4
    }

    _Closure@0150898 _registerDataHandler@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x58b08
    }

    Function _registerErrorHandler@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x5890c
    }

    _Closure@0150898 _registerDoneHandler@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x588a0
    }

    VoidType pause(DynamicType, DynamicType) {
        Code at absolute offset: 0x58f2c
    }

    VoidType resume(DynamicType) {
        Code at absolute offset: 0x5809c
    }

    Future cancel(DynamicType) {
        Code at absolute offset: 0x58c90
    }

    bool get:_mayResumeInput@4048458(DynamicType) {
        Code at absolute offset: 0x585b0
    }

    VoidType _cancel@4048458(DynamicType) {
        Code at absolute offset: 0x58d1c
    }

    VoidType _decrementPauseCount@4048458(DynamicType) {
        Code at absolute offset: 0x58728
    }

    VoidType _add@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x59044
    }

    VoidType _addError@4048458(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16b9c8
    }

    VoidType _close@4048458(DynamicType) {
        Code at absolute offset: 0x1587cc
    }

    VoidType _onPause@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _onResume@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _addPending@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x57ea8
    }

    VoidType _sendData@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x133b8c
    }

    VoidType _sendError@4048458(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x160450
    }

    VoidType _sendDone@4048458(DynamicType) {
        Code at absolute offset: 0x133c80
    }

    VoidType _guardCallback@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x5827c
    }

    VoidType _checkState@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x58330
    }

    DynamicType get:_add@4048458(DynamicType) {
        Code at absolute offset: 0x135c38
    }

    DynamicType get:_addError@4048458(DynamicType) {
        Code at absolute offset: 0x149b78
    }

    DynamicType get:_close@4048458(DynamicType) {
        Code at absolute offset: 0x13458c
    }

    DynamicType get:_onPause@4048458(DynamicType) {
        Code at absolute offset: 0x166f04
    }

    DynamicType get:_onResume@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _ControllerSubscription@4048458<T> extends _BufferingStreamSubscription@4048458 {

    _ControllerSubscription@4048458 _ControllerSubscription@4048458.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Future _onCancel@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _onPause@4048458(DynamicType) {
        Code at absolute offset: 0x16c2cc
    }

    VoidType _onResume@4048458(DynamicType) {
        Code at absolute offset: 0x165f2c
    }

    DynamicType get:_onPause@4048458(DynamicType) {
        Code at absolute offset: 0x166eec
    }

    DynamicType get:_onResume@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _BroadcastSubscription@4048458<T> extends _ControllerSubscription@4048458 {

    VoidType _onPause@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _onResume@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_onResume@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _DelayedData@4048458<T> extends _DelayedEvent@4048458 {

    T get:value(DynamicType) {
        Code at absolute offset: 0x1d792
    }

    VoidType perform(DynamicType, DynamicType) {
        Code at absolute offset: 0x161170
    }
}

class _DelayedEvent@4048458<T> extends Object {

    _DelayedEvent@4048458 get:next(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    VoidType set:next(DynamicType, DynamicType) {
        Code at absolute offset: 0x5801c
    }
}

class _SyncStreamController@4048458<T> extends _StreamController@4048458 implements _SyncStreamControllerDispatch@4048458 {

    VoidType _sendData@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _sendError@4048458(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _sendDone@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _SyncStreamControllerDispatch@4048458<T> extends Object implements _StreamController@4048458, SynchronousStreamController {
}

class SynchronousStreamController<T> extends Object implements StreamController {
}

class _AsyncStreamControllerDispatch@4048458<T> extends Object implements _StreamController@4048458 {
}

class __CompactLinkedHashSet&_HashFieldBase&_HashBase@3220832 extends _HashFieldBase@3220832 implements _HashBase@3220832 {

    __CompactLinkedHashSet&_HashFieldBase&_HashBase@3220832 __CompactLinkedHashSet&_HashFieldBase&_HashBase@3220832.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int get:_checkSum@3220832(DynamicType) {
        Code at absolute offset: 0x16bf38
    }

    bool _isModifiedSince@3220832(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x165ed4
    }
}

class __CompactLinkedHashSet&_HashFieldBase&_HashBase&_OperatorEqualsAndHashCode@3220832 extends __CompactLinkedHashSet&_HashFieldBase&_HashBase@3220832 implements _OperatorEqualsAndHashCode@3220832 {

    __CompactLinkedHashSet&_HashFieldBase&_HashBase&_OperatorEqualsAndHashCode@3220832 __CompactLinkedHashSet&_HashFieldBase&_HashBase&_OperatorEqualsAndHashCode@3220832.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int _hashCode@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0x3ee10
    }

    bool _equals@3220832(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class __CompactLinkedHashSet&_HashFieldBase&_HashBase&_OperatorEqualsAndHashCode&SetMixin@3220832<E> extends __CompactLinkedHashSet&_HashFieldBase&_HashBase&_OperatorEqualsAndHashCode@3220832 implements SetMixin {

    __CompactLinkedHashSet&_HashFieldBase&_HashBase&_OperatorEqualsAndHashCode&SetMixin@3220832 __CompactLinkedHashSet&_HashFieldBase&_HashBase&_OperatorEqualsAndHashCode&SetMixin@3220832.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x12e780
    }

    bool get:isNotEmpty(DynamicType) {
        Code at absolute offset: 0x12cbc8
    }

    VoidType addAll(DynamicType, DynamicType) {
        Code at absolute offset: 0x5a4c4
    }

    VoidType removeAll(DynamicType, DynamicType) {
        Code at absolute offset: 0x5a42c
    }

    Set intersection(DynamicType, DynamicType) {
        Code at absolute offset: 0x15fca0
    }

    Set difference(DynamicType, DynamicType) {
        Code at absolute offset: 0x5a0f0
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x131d48
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x12fb88
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x140bbc
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x1331a0
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x132524
    }

    String join(DynamicType, DynamicType) {
        Code at absolute offset: 0x130ae0
    }
}

class SetMixin<E> extends Object implements Set {
}

class RestorationManager extends ChangeNotifier {

    RestorationManager RestorationManager.(DynamicType) {
        Code at absolute offset: 0x5a030
    }
}

class :: {
}

class RestorationBucket extends Object {
}

class _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding&SemanticsBinding&RendererBinding&WidgetsBinding@441399801 extends _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding&SemanticsBinding&RendererBinding@441399801 implements WidgetsBinding {

    _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding&SemanticsBinding&RendererBinding&WidgetsBinding@441399801 _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding&SemanticsBinding&RendererBinding&WidgetsBinding@441399801.(DynamicType) {
        Code at absolute offset: 0xda8c0
    }

    VoidType initInstances(DynamicType) {
        Code at absolute offset: 0xdbbc4
    }

    VoidType initServiceExtensions(DynamicType) {
        Code at absolute offset: 0x55fb0
    }

    VoidType addObserver(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool removeObserver(DynamicType, DynamicType) {
        Code at absolute offset: 0xc01f8
    }

    VoidType handleMetricsChanged(DynamicType) {
        Code at absolute offset: 0xda604
    }

    VoidType handleTextScaleFactorChanged(DynamicType) {
        Code at absolute offset: 0xda45c
    }

    VoidType handlePlatformBrightnessChanged(DynamicType) {
        Code at absolute offset: 0xda2b4
    }

    VoidType handleAccessibilityFeaturesChanged(DynamicType) {
        Code at absolute offset: 0xdb870
    }

    VoidType handleLocaleChanged(DynamicType) {
        Code at absolute offset: 0xdb1d4
    }

    VoidType dispatchLocalesChanged(DynamicType, DynamicType) {
        Code at absolute offset: 0xdb028
    }

    Future handlePopRoute(DynamicType) {
        Code at absolute offset: 0xdaed0
    }

    Future handlePushRoute(DynamicType, DynamicType) {
        Code at absolute offset: 0xdad70
    }

    Future _handlePushRouteInformation@441399801(DynamicType, DynamicType) {
        Code at absolute offset: 0xdac10
    }

    Future _handleNavigationInvocation@441399801(DynamicType, DynamicType) {
        Code at absolute offset: 0xdaa6c
    }

    VoidType handleAppLifecycleStateChanged(DynamicType, DynamicType) {
        Code at absolute offset: 0x5a704
    }

    VoidType handleMemoryPressure(DynamicType) {
        Code at absolute offset: 0xdb23c
    }

    VoidType _handleBuildScheduled@441399801(DynamicType) {
        Code at absolute offset: 0xda844
    }

    VoidType drawFrame(DynamicType) {
        Code at absolute offset: 0x85524
    }

    bool get:framesEnabled(DynamicType) {
        Code at absolute offset: 0xdba20
    }

    VoidType scheduleAttachRootWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xdba54
    }

    VoidType attachRootWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xdb39c
    }

    DynamicType get:handleMetricsChanged(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:handleTextScaleFactorChanged(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:handlePlatformBrightnessChanged(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:handleAccessibilityFeaturesChanged(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:handleLocaleChanged(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleNavigationInvocation@441399801(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleBuildScheduled@441399801(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding&SemanticsBinding&RendererBinding@441399801 extends _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding&SemanticsBinding@441399801 implements RendererBinding {
    PipelineOwner _pipelineOwner@317452173

    PipelineOwner get:_pipelineOwner@317452173(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding&SemanticsBinding&RendererBinding@441399801 _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding&SemanticsBinding&RendererBinding@441399801.(DynamicType) {
        Code at absolute offset: 0x851bc
    }

    VoidType dispatchEvent(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x65b8c
    }

    VoidType hitTest(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x67f5c
    }

    VoidType initInstances(DynamicType) {
        Code at absolute offset: 0xd9de8
    }

    VoidType initServiceExtensions(DynamicType) {
        Code at absolute offset: 0x55fdc
    }

    VoidType initRenderView(DynamicType) {
        Code at absolute offset: 0xda188
    }

    PipelineOwner get:pipelineOwner(DynamicType) {
        Code at absolute offset: 0xd8ed4
    }

    RenderView get:renderView(DynamicType) {
        Code at absolute offset: 0x81b0c
    }

    VoidType set:renderView(DynamicType, DynamicType) {
        Code at absolute offset: 0xd9d84
    }

    VoidType handleMetricsChanged(DynamicType) {
        Code at absolute offset: 0x84fdc
    }

    VoidType handleTextScaleFactorChanged(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType handlePlatformBrightnessChanged(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    ViewConfiguration createViewConfiguration(DynamicType) {
        Code at absolute offset: 0x85138
    }

    VoidType initMouseTracker(DynamicType, DynamicType) {
        Code at absolute offset: 0x85218
    }

    VoidType _handleSemanticsEnabledChanged@317452173(DynamicType) {
        Code at absolute offset: 0x84bc8
    }

    VoidType setSemanticsEnabled(DynamicType, DynamicType) {
        Code at absolute offset: 0x84c34
    }

    VoidType _handleSemanticsAction@317452173(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x84df0
    }

    VoidType _handleSemanticsOwnerCreated@317452173(DynamicType) {
        Code at absolute offset: 0x84d2c
    }

    VoidType _handleSemanticsOwnerDisposed@317452173(DynamicType) {
        Code at absolute offset: 0x84b04
    }

    VoidType _handlePersistentFrameCallback@317452173(DynamicType, DynamicType) {
        Code at absolute offset: 0x85398
    }

    VoidType _scheduleMouseTrackerUpdate@317452173(DynamicType) {
        Code at absolute offset: 0x853d0
    }

    VoidType deferFirstFrame(DynamicType) {
        Code at absolute offset: 0x852d4
    }

    VoidType allowFirstFrame(DynamicType) {
        Code at absolute offset: 0xd9c28
    }

    VoidType drawFrame(DynamicType) {
        Code at absolute offset: 0xd8d9c
    }

    DynamicType get:_handleSemanticsEnabledChanged@317452173(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleSemanticsAction@317452173(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleSemanticsOwnerCreated@317452173(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleSemanticsOwnerDisposed@317452173(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handlePersistentFrameCallback@317452173(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding&SemanticsBinding@441399801 extends _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding@441399801 implements SemanticsBinding {
    AccessibilityFeatures _accessibilityFeatures@363275577

    AccessibilityFeatures get:_accessibilityFeatures@363275577(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding&SemanticsBinding@441399801 _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding&SemanticsBinding@441399801.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType initInstances(DynamicType) {
        Code at absolute offset: 0x84a10
    }

    VoidType handleAccessibilityFeaturesChanged(DynamicType) {
        Code at absolute offset: 0x84988
    }

    SemanticsUpdateBuilder createSemanticsUpdateBuilder(DynamicType) {
        Code at absolute offset: 0x73528
    }

    bool get:disableAnimations(DynamicType) {
        Code at absolute offset: 0x848e8
    }
}

class _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding@441399801 extends _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding@441399801 implements PaintingBinding {

    _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding@441399801 _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding@441399801.(DynamicType) {
        Code at absolute offset: 0x81f40
    }

    Future handleSystemMessage(DynamicType, DynamicType) {
        Code at absolute offset: 0x81de0
    }

    VoidType initInstances(DynamicType) {
        Code at absolute offset: 0x60124
    }

    ImageCache createImageCache(DynamicType) {
        Code at absolute offset: 0x600f0
    }

    VoidType handleMemoryPressure(DynamicType) {
        Code at absolute offset: 0x5ff04
    }
}

class PaintingBinding extends _RendererBinding&BindingBase&ServicesBinding@317452173 {
    PaintingBinding _instance@268047248
    ShaderWarmUp shaderWarmUp

    ShaderWarmUp get:shaderWarmUp() {
        Code at absolute offset: 0xfaa0
    }
}

class _RendererBinding&BindingBase&ServicesBinding@317452173 extends Object implements BindingBase, ServicesBinding {
}

class :: {
}

class _RendererBinding&BindingBase&ServicesBinding&SchedulerBinding&GestureBinding@317452173 extends Object implements _RendererBinding&BindingBase&ServicesBinding&SchedulerBinding@317452173, GestureBinding {
}

class GestureBinding extends BindingBase implements HitTestable, HitTestDispatcher, HitTestTarget {
    GestureBinding _instance@114304576

    VoidType _handlePointerEvent@114304576(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _handleSampleTimeChanged@114304576(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
}

class _Resampler@114304576 extends Object {

    _Resampler@114304576 _Resampler@114304576.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5ab48
    }

    VoidType stop(DynamicType) {
        Code at absolute offset: 0x5a980
    }
}

class PointerEventResampler extends Object {

    VoidType stop(DynamicType, DynamicType) {
        Code at absolute offset: 0x5aa34
    }
}

class :: {
}

class FlutterErrorDetailsForPointerEventDispatcher extends FlutterErrorDetails {
}

class HitTestTarget extends Object {
}

class :: {
}

class HitTestEntry extends Object {

    HitTestTarget get:target(DynamicType) {
        Code at absolute offset: 0xe3bfc
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14cc40
    }
}

class HitTestResult extends Object {

    HitTestResult HitTestResult.(DynamicType) {
        Code at absolute offset: 0x5fab4
    }

    VoidType _globalizeTransforms@123494604(DynamicType) {
        Code at absolute offset: 0x5ae14
    }

    Matrix4 get:_lastTransform@123494604(DynamicType) {
        Code at absolute offset: 0x5ade0
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x5ace8
    }

    VoidType pushTransform(DynamicType, DynamicType) {
        Code at absolute offset: 0x5f9cc
    }

    VoidType pushOffset(DynamicType, DynamicType) {
        Code at absolute offset: 0x5f8e4
    }

    VoidType popTransform(DynamicType) {
        Code at absolute offset: 0x5f850
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14cd48
    }
}

class Matrix4 extends Object {

    Matrix4 Matrix4.zero(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Matrix4 tryInvert(DynamicType) {
        Code at absolute offset: 0x5dd50
    }

    Matrix4 Matrix4.identity(DynamicType) {
        Code at absolute offset: 0x5ed58
    }

    Matrix4 Matrix4.copy(DynamicType, DynamicType) {
        Code at absolute offset: 0x5b970
    }

    Matrix4 Matrix4.rotationZ(DynamicType, DynamicType) {
        Code at absolute offset: 0x5ea04
    }

    Matrix4 Matrix4.translationValues(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5f1f0
    }

    Matrix4 Matrix4.diagonal3Values(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5f580
    }

    VoidType setFrom(DynamicType, DynamicType) {
        Code at absolute offset: 0x5b9c8
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x155310
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x187c60
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15c8d8
    }

    VoidType setRow(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5ec3c
    }

    Vector4 getRow(DynamicType, DynamicType) {
        Code at absolute offset: 0x5e914
    }

    Matrix4 clone(DynamicType) {
        Code at absolute offset: 0x5b940
    }

    DynamicType *(DynamicType, DynamicType) {
        Code at absolute offset: 0x5b0a6
    }

    Matrix4 +(DynamicType, DynamicType) {
        Code at absolute offset: 0x5ca58
    }

    Matrix4 -(DynamicType, DynamicType) {
        Code at absolute offset: 0x5c560
    }

    VoidType translate(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5ef90
    }

    VoidType leftTranslate(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5da94
    }

    VoidType scale(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5bcf0
    }

    Matrix4 scaled(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5bc28
    }

    VoidType setIdentity(DynamicType) {
        Code at absolute offset: 0x5edac
    }

    VoidType setTranslationRaw(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5da08
    }

    double invert(DynamicType) {
        Code at absolute offset: 0x5f264
    }

    double copyInverse(DynamicType, DynamicType) {
        Code at absolute offset: 0x5ddc8
    }

    VoidType setRotationZ(DynamicType, DynamicType) {
        Code at absolute offset: 0x5ea7c
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x5c0a4
    }

    VoidType sub(DynamicType, DynamicType) {
        Code at absolute offset: 0x5c59c
    }

    VoidType multiply(DynamicType, DynamicType) {
        Code at absolute offset: 0x5b1b4
    }

    Matrix4 multiplied(DynamicType, DynamicType) {
        Code at absolute offset: 0x5b178
    }

    Vector3 transform3(DynamicType, DynamicType) {
        Code at absolute offset: 0x5f630
    }

    Vector3 perspectiveTransform(DynamicType, DynamicType) {
        Code at absolute offset: 0x5e6f4
    }

    bool isZero(DynamicType) {
        Code at absolute offset: 0x5f290
    }
}

class UnimplementedError extends Error implements UnsupportedError {

    String get:message(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1407fc
    }
}

class :: {
}

class Vector extends Object {
}

class Vector3 extends Object implements Vector {

    Vector3 Vector3.zero(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Vector3 Vector3.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5d244
    }

    Vector3 Vector3.copy(DynamicType, DynamicType) {
        Code at absolute offset: 0x5cdb0
    }

    VoidType setValues(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5d190
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x15547c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x188148
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15c8d8
    }

    Vector3 -(DynamicType, DynamicType) {
        Code at absolute offset: 0x5d07c
    }

    Vector3 +(DynamicType, DynamicType) {
        Code at absolute offset: 0x5cee8
    }

    Vector3 *(DynamicType, DynamicType) {
        Code at absolute offset: 0x5ccc0
    }

    Vector3 scaled(DynamicType, DynamicType) {
        Code at absolute offset: 0x5ccec
    }

    Vector3 clone(DynamicType) {
        Code at absolute offset: 0x5cd80
    }
}

class Vector4 extends Object implements Vector {

    Vector4 Vector4.zero(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Vector4 Vector4.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5d98c
    }

    Vector4 Vector4.copy(DynamicType, DynamicType) {
        Code at absolute offset: 0x5d5cc
    }

    VoidType setValues(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x5d910
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x15568c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x188298
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15c8d8
    }

    Vector4 -(DynamicType, DynamicType) {
        Code at absolute offset: 0x5d79c
    }

    Vector4 +(DynamicType, DynamicType) {
        Code at absolute offset: 0x5d6e0
    }

    Vector4 *(DynamicType, DynamicType) {
        Code at absolute offset: 0x5d4b8
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x5d340
    }

    VoidType sub(DynamicType, DynamicType) {
        Code at absolute offset: 0x5d7d8
    }

    Vector4 clone(DynamicType) {
        Code at absolute offset: 0x5d59c
    }
}

class _TransformPart@123494604 extends Object {
}

class HitTestDispatcher extends Object {
}

class HitTestable extends Object {
}

class _MatrixTransformPart@123494604 extends _TransformPart@123494604 {

    Matrix4 multiply(DynamicType, DynamicType) {
        Code at absolute offset: 0x1770e0
    }
}

class _OffsetTransformPart@123494604 extends _TransformPart@123494604 {

    Matrix4 multiply(DynamicType, DynamicType) {
        Code at absolute offset: 0x177110
    }
}

class _RendererBinding&BindingBase&ServicesBinding&SchedulerBinding&GestureBinding&SemanticsBinding@317452173 extends Object implements _RendererBinding&BindingBase&ServicesBinding&SchedulerBinding&GestureBinding@317452173, SemanticsBinding {
}

class SemanticsBinding extends BindingBase {
    SemanticsBinding _instance@363275577

    SemanticsBinding get:instance() {
        Code at absolute offset: 0x5fbd8
    }
}

class :: {
}

class _RendererBinding&BindingBase&ServicesBinding&SchedulerBinding@317452173 extends Object implements _RendererBinding&BindingBase&ServicesBinding@317452173, SchedulerBinding {
}

class RendererBinding extends _RendererBinding&BindingBase&ServicesBinding&SchedulerBinding&GestureBinding&SemanticsBinding&HitTestable@317452173 {
    RendererBinding _instance@317452173
}

class _RendererBinding&BindingBase&ServicesBinding&SchedulerBinding&GestureBinding&SemanticsBinding&HitTestable@317452173 extends Object implements _RendererBinding&BindingBase&ServicesBinding&SchedulerBinding&GestureBinding&SemanticsBinding@317452173, HitTestable {
}

class :: {
}

class _SystemFontsNotifier@268047248 extends Listenable {

    _SystemFontsNotifier@268047248 _SystemFontsNotifier@268047248.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType notifyListeners(DynamicType) {
        Code at absolute offset: 0x5fc00
    }

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12d47c
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12f09c
    }
}

class ShaderWarmUp extends Object {

    Future execute(DynamicType) {
        Code at absolute offset: 0x5fdac
    }
}

class :: {
}

class DefaultShaderWarmUp extends ShaderWarmUp {

    Future warmUpOnCanvas(DynamicType, DynamicType) {
        Code at absolute offset: 0x5fca4
    }
}

class ImageCache extends Object {

    ImageCache ImageCache.(DynamicType) {
        Code at absolute offset: 0x60014
    }

    VoidType clear(DynamicType) {
        Code at absolute offset: 0x5ff48
    }
}

class :: {
}

class _CachedImage@287034022 extends Object {
}

class _PendingImage@287034022 extends Object {
}

class _LiveImage@287034022 extends _CachedImage@287034022 {
}

class BasicMessageChannel<T> extends Object {

    BinaryMessenger get:binaryMessenger(DynamicType) {
        Code at absolute offset: 0x60478
    }

    Future send(DynamicType, DynamicType) {
        Code at absolute offset: 0x65508
    }

    VoidType setMessageHandler(DynamicType, DynamicType) {
        Code at absolute offset: 0x60328
    }
}

class StandardMessageCodec extends Object implements MessageCodec {

    ByteData encodeMessage(DynamicType, DynamicType) {
        Code at absolute offset: 0x17f2ac
    }

    DynamicType decodeMessage(DynamicType, DynamicType) {
        Code at absolute offset: 0x1777a4
    }

    VoidType writeValue(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x63ba4
    }

    DynamicType readValue(DynamicType, DynamicType) {
        Code at absolute offset: 0x63b48
    }

    DynamicType readValueOfType(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x63700
    }

    VoidType writeSize(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x63634
    }

    int readSize(DynamicType, DynamicType) {
        Code at absolute offset: 0x60504
    }
}

class :: {
}

class JSONMethodCodec extends Object implements MethodCodec {

    ByteData encodeMethodCall(DynamicType, DynamicType) {
        Code at absolute offset: 0x1860c4
    }

    MethodCall decodeMethodCall(DynamicType, DynamicType) {
        Code at absolute offset: 0x184848
    }

    DynamicType decodeEnvelope(DynamicType, DynamicType) {
        Code at absolute offset: 0x185320
    }

    ByteData encodeSuccessEnvelope(DynamicType, DynamicType) {
        Code at absolute offset: 0x184404
    }

    ByteData encodeErrorEnvelope(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x18622c
    }
}

class MethodCodec extends Object {
}

class :: {
}

class MissingPluginException extends Object implements Exception {

    String get:message(DynamicType) {
        Code at absolute offset: 0x19b76
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x153afc
    }
}

class MessageCodec<T> extends Object {
}

class MethodCall extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x1539f0
    }
}

class PlatformException extends Object implements Exception {

    String get:message(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x153a68
    }
}

class JSONMessageCodec extends Object implements MessageCodec {

    ByteData encodeMessage(DynamicType, DynamicType) {
        Code at absolute offset: 0x17ee84
    }

    DynamicType decodeMessage(DynamicType, DynamicType) {
        Code at absolute offset: 0x177734
    }
}

class StringCodec extends Object implements MessageCodec {

    String decodeMessage(DynamicType, DynamicType) {
        Code at absolute offset: 0x1776a8
    }

    ByteData encodeMessage(DynamicType, DynamicType) {
        Code at absolute offset: 0x17edc8
    }
}

class StandardMethodCodec extends Object implements MethodCodec {

    ByteData encodeMethodCall(DynamicType, DynamicType) {
        Code at absolute offset: 0x186150
    }

    MethodCall decodeMethodCall(DynamicType, DynamicType) {
        Code at absolute offset: 0x184a74
    }

    ByteData encodeSuccessEnvelope(DynamicType, DynamicType) {
        Code at absolute offset: 0x184470
    }

    ByteData encodeErrorEnvelope(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x186370
    }

    DynamicType decodeEnvelope(DynamicType, DynamicType) {
        Code at absolute offset: 0x185a0c
    }
}

class ReadBuffer extends Object {

    VoidType set:_position@108185525(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool get:hasRemaining(DynamicType) {
        Code at absolute offset: 0x6346c
    }

    int getUint8(DynamicType) {
        Code at absolute offset: 0x63588
    }

    int getUint16(DynamicType, DynamicType) {
        Code at absolute offset: 0x634a4
    }

    int getUint32(DynamicType, DynamicType) {
        Code at absolute offset: 0x6058c
    }

    int getInt32(DynamicType, DynamicType) {
        Code at absolute offset: 0x63384
    }

    int getInt64(DynamicType, DynamicType) {
        Code at absolute offset: 0x6328c
    }

    double getFloat64(DynamicType, DynamicType) {
        Code at absolute offset: 0x63194
    }

    Uint8List getUint8List(DynamicType, DynamicType) {
        Code at absolute offset: 0x630dc
    }

    Int32List getInt32List(DynamicType, DynamicType) {
        Code at absolute offset: 0x6300c
    }

    Int64List getInt64List(DynamicType, DynamicType) {
        Code at absolute offset: 0x62f3c
    }

    Float64List getFloat64List(DynamicType, DynamicType) {
        Code at absolute offset: 0x62e6c
    }

    VoidType _alignTo@108185525(DynamicType, DynamicType) {
        Code at absolute offset: 0x62dd4
    }
}

class :: {
}

class WriteBuffer extends Object {
    Uint8List _eightBytesAsList@108185525

    Uint8List get:_eightBytesAsList@108185525(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    WriteBuffer WriteBuffer.(DynamicType) {
        Code at absolute offset: 0x62ce4
    }

    VoidType putUint8(DynamicType, DynamicType) {
        Code at absolute offset: 0x62c84
    }

    VoidType putUint16(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x62b8c
    }

    VoidType putUint32(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x62a94
    }

    VoidType putInt32(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x62a94
    }

    VoidType putInt64(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x6299c
    }

    VoidType putFloat64(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x62888
    }

    VoidType putUint8List(DynamicType, DynamicType) {
        Code at absolute offset: 0x62838
    }

    VoidType putInt32List(DynamicType, DynamicType) {
        Code at absolute offset: 0x62758
    }

    VoidType putInt64List(DynamicType, DynamicType) {
        Code at absolute offset: 0x62678
    }

    VoidType putFloat64List(DynamicType, DynamicType) {
        Code at absolute offset: 0x62678
    }

    VoidType _alignTo@108185525(DynamicType, DynamicType) {
        Code at absolute offset: 0x62550
    }

    ByteData done(DynamicType) {
        Code at absolute offset: 0x60690
    }
}

class TypedDataBuffer<E> extends ListBase {

    VoidType set:_length@527423996(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x13344e
    }

    E [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1067f4
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x105ccc
    }

    VoidType _add@527423996(DynamicType, DynamicType) {
        Code at absolute offset: 0x62168
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x1061c6
    }

    VoidType addAll(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x62414
    }

    VoidType _addAll@527423996(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x61e74
    }

    VoidType _insertKnownLength@527423996(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x621ec
    }

    VoidType _ensureCapacity@527423996(DynamicType, DynamicType) {
        Code at absolute offset: 0x61db8
    }

    List _createBiggerBuffer@527423996(DynamicType, DynamicType) {
        Code at absolute offset: 0x61c14
    }

    VoidType _grow@527423996(DynamicType, DynamicType) {
        Code at absolute offset: 0x61b90
    }

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x104414
    }

    VoidType _setRange@527423996(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x61cac
    }

    int get:lengthInBytes(DynamicType) {
        Code at absolute offset: 0x60738
    }

    ByteBuffer get:buffer(DynamicType) {
        Code at absolute offset: 0x62528
    }
}

class ListBase<E> extends _ListBase&Object&ListMixin@3220832 {

    String listToString(DynamicType) {
        Code at absolute offset: 0x61ad4
    }
}

class _ListBase&Object&ListMixin@3220832<E> extends Object implements ListMixin {

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12f0d4
    }

    E elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x129a4c
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x132a04
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x135aa4
    }

    bool get:isNotEmpty(DynamicType) {
        Code at absolute offset: 0x134954
    }

    E get:first(DynamicType) {
        Code at absolute offset: 0x12c8b0
    }

    E get:last(DynamicType) {
        Code at absolute offset: 0x10b708
    }

    bool contains(DynamicType, DynamicType) {
        Code at absolute offset: 0x135b1c
    }

    bool any(DynamicType, DynamicType) {
        Code at absolute offset: 0x60c38
    }

    E firstWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1227d4
    }

    E lastWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x61098
    }

    String join(DynamicType, DynamicType) {
        Code at absolute offset: 0x1373c0
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13215c
    }

    Iterable whereType(DynamicType) {
        Code at absolute offset: 0x61044
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x136e88
    }

    Iterable expand(DynamicType, DynamicType) {
        Code at absolute offset: 0x123824
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x128444
    }

    Iterable take(DynamicType, DynamicType) {
        Code at absolute offset: 0xff644
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x131f1c
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x135320
    }

    VoidType removeWhere(DynamicType, DynamicType) {
        Code at absolute offset: 0x60d60
    }

    VoidType _filter@3220832(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x60d98
    }

    List cast(DynamicType) {
        Code at absolute offset: 0x61264
    }

    VoidType sort(DynamicType, DynamicType) {
        Code at absolute offset: 0x1232e4
    }

    List +(DynamicType, DynamicType) {
        Code at absolute offset: 0x607a2
    }

    List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1000ac
    }

    Iterable getRange(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x6179c
    }

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11e548
    }

    int lastIndexWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10970c
    }

    Iterable get:reversed(DynamicType) {
        Code at absolute offset: 0x1067d4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x61ad4
    }

    DynamicType get:contains(DynamicType) {
        Code at absolute offset: 0xffc04
    }
}

class ListMixin<E> extends Object implements List {

    int _compareAny@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0x60b48
    }
}

class WhereTypeIterable<T> extends Iterable {

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12ddd4
    }
}

class CastList<S, T> extends _CastListBase@11040228 {
}

class _CastListBase@11040228<S, T> extends __CastListBase&_CastIterableBase&ListMixin@11040228 {

    T [](DynamicType, DynamicType) {
        Code at absolute offset: 0x1066d4
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1001ec
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x105de2
    }

    VoidType sort(DynamicType, DynamicType) {
        Code at absolute offset: 0x105f28
    }

    Iterable getRange(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x61668
    }

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xffe68
    }
}

class __CastListBase&_CastIterableBase&ListMixin@11040228<S, T> extends _CastIterableBase@11040228 implements ListMixin {

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12da24
    }

    T elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x109d24
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x131838
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x12cca4
    }

    bool get:isNotEmpty(DynamicType) {
        Code at absolute offset: 0x129a84
    }

    T get:first(DynamicType) {
        Code at absolute offset: 0x129078
    }

    T get:last(DynamicType) {
        Code at absolute offset: 0x109640
    }

    T firstWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10598c
    }

    String join(DynamicType, DynamicType) {
        Code at absolute offset: 0x12f6b4
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13215c
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x12e9a8
    }

    Iterable expand(DynamicType, DynamicType) {
        Code at absolute offset: 0x1065dc
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x128444
    }

    Iterable take(DynamicType, DynamicType) {
        Code at absolute offset: 0xff644
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x13042c
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x12c920
    }

    List +(DynamicType, DynamicType) {
        Code at absolute offset: 0x613be
    }

    List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xff9cc
    }

    int lastIndexWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfe39c
    }

    Iterable get:reversed(DynamicType) {
        Code at absolute offset: 0x1067d4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x61ad4
    }
}

class _CastIterableBase@11040228<S, T> extends Iterable {

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12d99c
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x132e94
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x1283ec
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x140bf8
    }
}

class CastIterable<S, T> extends _CastIterableBase@11040228 {

    CastIterable CastIterable.(DynamicType, DynamicType) {
        Code at absolute offset: 0x616b8
    }
}

class _EfficientLengthCastIterable@11040228<S, T> extends CastIterable implements EfficientLengthIterable {
}

class SubListIterable<E> extends ListIterable {

    SubListIterable SubListIterable.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x61860
    }

    int get:_endIndex@11040228(DynamicType) {
        Code at absolute offset: 0x61a38
    }

    int get:_startIndex@11040228(DynamicType) {
        Code at absolute offset: 0x619b0
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x132c42
    }

    E elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x109b04
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x128294
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x12fe6c
    }
}

class :: {
}

class Uint8Buffer extends _IntBuffer@527423996 {

    Uint8Buffer Uint8Buffer.(DynamicType, DynamicType) {
        Code at absolute offset: 0x61b20
    }

    Uint8List _createBuffer@527423996(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _IntBuffer@527423996 extends TypedDataBuffer {
}

class _TypedListIterator@7027147<E> extends Object implements Iterator {

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xe5770
    }

    E get:current(DynamicType) {
        Code at absolute offset: 0xee40
    }
}

class :: {
    Expando _methodChannelHandlers@379480135

    Expando get:_methodChannelHandlers@379480135() {
        Code at absolute offset: 0xfaa0
    }
}

class Expando<T> extends Object {
    _WeakProperty@0150898 _deletedEntry@0150898

    _WeakProperty@0150898 get:_deletedEntry@0150898() {
        Code at absolute offset: 0xfaa0
    }

    Expando Expando.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType _rehash@0150898(DynamicType) {
        Code at absolute offset: 0x64bc0
    }

    DynamicType _checkType@0150898(DynamicType) {
        Code at absolute offset: 0x64524
    }

    DynamicType get:_limit@0150898(DynamicType) {
        Code at absolute offset: 0x64e10
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x141ba4
    }

    T [](DynamicType, DynamicType) {
        Code at absolute offset: 0x642f8
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x64694
    }
}

class OptionalMethodChannel extends MethodChannel {

    Future invokeMethod(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x64e58
    }
}

class MethodChannel extends Object {

    BinaryMessenger get:binaryMessenger(DynamicType) {
        Code at absolute offset: 0x654e4
    }

    Future _invokeMethod@379480135(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x652c8
    }

    VoidType setMethodCallHandler(DynamicType, DynamicType) {
        Code at absolute offset: 0x6517c
    }

    Future _handleAsMethodCall@379480135(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x65000
    }
}

class PointerRouter extends Object {

    PointerRouter PointerRouter.(DynamicType) {
        Code at absolute offset: 0x66554
    }

    VoidType addRoute(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x664a4
    }

    VoidType removeRoute(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x663c8
    }

    VoidType addGlobalRoute(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x66378
    }

    VoidType removeGlobalRoute(DynamicType, DynamicType) {
        Code at absolute offset: 0x66340
    }

    VoidType _dispatch@129407777(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x66230
    }

    VoidType route(DynamicType, DynamicType) {
        Code at absolute offset: 0x660d8
    }

    VoidType _dispatchEventToRoutes@129407777(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x661ac
    }
}

class :: {
}

class BaseMouseTracker extends ChangeNotifier {

    BaseMouseTracker BaseMouseTracker.(DynamicType) {
        Code at absolute offset: 0x67e10
    }

    bool get:mouseIsConnected(DynamicType) {
        Code at absolute offset: 0x66854
    }

    VoidType _monitorMouseConnection@332325758(DynamicType, DynamicType) {
        Code at absolute offset: 0x667c8
    }

    VoidType _deviceUpdatePhase@332325758(DynamicType, DynamicType) {
        Code at absolute offset: 0x67ba8
    }

    bool _shouldMarkStateDirty@332325758(DynamicType, DynamicType) {
        Code at absolute offset: 0x67eb4
    }

    LinkedHashMap _hitTestResultToAnnotations@332325758(DynamicType, DynamicType) {
        Code at absolute offset: 0x67bf8
    }

    LinkedHashMap _findAnnotations@332325758(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType updateWithEvent(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x665f4
    }

    VoidType updateAllDevices(DynamicType, DynamicType) {
        Code at absolute offset: 0x67b3c
    }
}

class :: {
}

class _MouseTracker&BaseMouseTracker&MouseTrackerCursorMixin&_MouseTrackerEventMixin@332325758 extends _MouseTracker&BaseMouseTracker&MouseTrackerCursorMixin@332325758 implements _MouseTrackerEventMixin@332325758 {

    _MouseTracker&BaseMouseTracker&MouseTrackerCursorMixin&_MouseTrackerEventMixin@332325758 _MouseTracker&BaseMouseTracker&MouseTrackerCursorMixin&_MouseTrackerEventMixin@332325758.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType handleDeviceUpdate(DynamicType, DynamicType) {
        Code at absolute offset: 0x66898
    }
}

class PointerEnterEvent extends PointerEvent {

    PointerEnterEvent PointerEnterEvent.fromMouseEvent(DynamicType, DynamicType) {
        Code at absolute offset: 0x66d24
    }

    PointerEnterEvent transformed(DynamicType, DynamicType) {
        Code at absolute offset: 0x137d6c
    }
}

class PointerEvent extends _DiagnosticableTree&Object&Diagnosticable@99198569 {

    Offset transformPosition(DynamicType, DynamicType) {
        Code at absolute offset: 0x6712c
    }

    Offset transformDeltaViaPositions(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x67068
    }

    Matrix4 removePerspectiveTransform(DynamicType) {
        Code at absolute offset: 0x66f70
    }
}

class :: {

    double computeHitSlop(DynamicType) {
        Code at absolute offset: 0x67344
    }

    double computePanSlop(DynamicType) {
        Code at absolute offset: 0x672d4
    }
}

class PointerExitEvent extends PointerEvent {

    PointerExitEvent PointerExitEvent.fromMouseEvent(DynamicType, DynamicType) {
        Code at absolute offset: 0x66d24
    }

    PointerExitEvent transformed(DynamicType, DynamicType) {
        Code at absolute offset: 0x138118
    }
}

class PointerScrollEvent extends PointerSignalEvent {

    PointerScrollEvent transformed(DynamicType, DynamicType) {
        Code at absolute offset: 0x138f68
    }
}

class PointerHoverEvent extends PointerEvent {

    PointerHoverEvent transformed(DynamicType, DynamicType) {
        Code at absolute offset: 0x1379d0
    }
}

class PointerDownEvent extends PointerEvent {

    PointerDownEvent transformed(DynamicType, DynamicType) {
        Code at absolute offset: 0x1384c4
    }
}

class PointerUpEvent extends PointerEvent {

    PointerUpEvent transformed(DynamicType, DynamicType) {
        Code at absolute offset: 0x138be8
    }
}

class PointerSignalEvent extends PointerEvent {
}

class PointerAddedEvent extends PointerEvent {

    PointerAddedEvent transformed(DynamicType, DynamicType) {
        Code at absolute offset: 0x13747c
    }
}

class PointerCancelEvent extends PointerEvent {

    PointerCancelEvent transformed(DynamicType, DynamicType) {
        Code at absolute offset: 0x1391a0
    }
}

class PointerMoveEvent extends PointerEvent {

    PointerMoveEvent transformed(DynamicType, DynamicType) {
        Code at absolute offset: 0x138824
    }
}

class PointerRemovedEvent extends PointerEvent {

    PointerRemovedEvent transformed(DynamicType, DynamicType) {
        Code at absolute offset: 0x137748
    }
}

class _SystemMouseCursorSession@331306348 extends MouseCursorSession {

    Future activate(DynamicType) {
        Code at absolute offset: 0x67660
    }
}

class MouseCursorSession extends Object {
}

class :: {
}

class _DeferringMouseCursor@331306348 extends MouseCursor {

    MouseCursorSession createSession(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String get:debugDescription(DynamicType) {
        Code at absolute offset: 0x17e350
    }

    MouseCursor firstNonDeferred(DynamicType) {
        Code at absolute offset: 0x6772c
    }
}

class SystemMouseCursor extends MouseCursor {

    String get:debugDescription(DynamicType) {
        Code at absolute offset: 0x17e360
    }

    _SystemMouseCursorSession@331306348 createSession(DynamicType, DynamicType) {
        Code at absolute offset: 0x17e980
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17ed1c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x159e4c
    }
}

class MouseCursor extends _DiagnosticableTree&Object&Diagnosticable@99198569 {

    String toString(DynamicType, DynamicType) {
        Code at absolute offset: 0x14bbd0
    }
}

class MouseTrackerCursorMixin extends BaseMouseTracker {
}

class _EnabledAndDisabledMouseCursor@209420358 extends MaterialStateMouseCursor {

    MouseCursor resolve(DynamicType, DynamicType) {
        Code at absolute offset: 0x67890
    }

    String get:debugDescription(DynamicType) {
        Code at absolute offset: 0x17e2f8
    }
}

class MaterialStateMouseCursor extends MouseCursor implements MaterialStateProperty {

    MouseCursorSession createSession(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class MaterialStateProperty<T> extends Object {

    T resolveAs(DynamicType, DynamicType) {
        Code at absolute offset: 0x678dc
    }
}

class :: {
}

class MaterialState extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class MouseTracker extends _MouseTracker&BaseMouseTracker&MouseTrackerCursorMixin&_MouseTrackerEventMixin@332325758 {

    MouseTracker MouseTracker.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class MouseTrackerAnnotation extends _DiagnosticableTree&Object&Diagnosticable@99198569 {

    _Closure@0150898 get:onExit(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Closure@0150898 get:onEnter(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Closure@0150898 get:onHover(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _MouseTrackerEventMixin@332325758 extends BaseMouseTracker {

    VoidType _handleDeviceUpdateMouseEvents@332325758(DynamicType) {
        Code at absolute offset: 0x668d4
    }
}

class _MouseState@332325758 extends Object {

    _MouseState@332325758 _MouseState@332325758.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    LinkedHashMap replaceAnnotations(DynamicType, DynamicType) {
        Code at absolute offset: 0x67af8
    }

    PointerEvent replaceLatestEvent(DynamicType, DynamicType) {
        Code at absolute offset: 0x67ac4
    }

    int get:device(DynamicType) {
        Code at absolute offset: 0x67aac
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1530c4
    }
}

class _MouseTracker&BaseMouseTracker&MouseTrackerCursorMixin@332325758 extends BaseMouseTracker implements MouseTrackerCursorMixin {

    _MouseTracker&BaseMouseTracker&MouseTrackerCursorMixin@332325758 _MouseTracker&BaseMouseTracker&MouseTrackerCursorMixin@332325758.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType handleDeviceUpdate(DynamicType, DynamicType) {
        Code at absolute offset: 0x67454
    }

    MouseCursor _findFirstCursor@331306348(DynamicType, DynamicType) {
        Code at absolute offset: 0x679c8
    }

    VoidType _handleDeviceUpdateMouseCursor@331306348(DynamicType, DynamicType) {
        Code at absolute offset: 0x67484
    }
}

class MouseTrackerUpdateDetails extends _DiagnosticableTree&Object&Diagnosticable@99198569 {
}

class BoxHitTestResult extends HitTestResult {

    BoxHitTestResult BoxHitTestResult.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool addWithPaintTransform(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7dc48
    }

    bool addWithPaintOffset(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7da94
    }

    bool addWithRawTransform(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7d8fc
    }
}

class :: {
}

class BoxParentData extends ParentData {

    String toString(DynamicType) {
        Code at absolute offset: 0x152ff0
    }
}

class ParentData extends Object {

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x15303c
    }
}

class :: {
}

class PipelineOwner extends Object {

    PipelineOwner PipelineOwner.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x768bc
    }

    VoidType requestVisualUpdate(DynamicType) {
        Code at absolute offset: 0x76068
    }

    VoidType set:rootNode(DynamicType, DynamicType) {
        Code at absolute offset: 0x7682c
    }

    VoidType flushLayout(DynamicType) {
        Code at absolute offset: 0x76104
    }

    VoidType flushCompositingBits(DynamicType) {
        Code at absolute offset: 0x75a80
    }

    VoidType flushPaint(DynamicType) {
        Code at absolute offset: 0x74320
    }

    SemanticsHandle ensureSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0x74180
    }

    VoidType _didDisposeSemanticsHandle@333266271(DynamicType) {
        Code at absolute offset: 0x740f0
    }

    VoidType flushSemantics(DynamicType) {
        Code at absolute offset: 0x68174
    }
}

class CustomSemanticsAction extends Object {
    int _nextId@365082469
    Map _actions@365082469
    Map _ids@365082469

    Map get:_actions@365082469() {
        Code at absolute offset: 0xfaa0
    }

    Map get:_ids@365082469() {
        Code at absolute offset: 0xfaa0
    }

    int getIdentifier(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    CustomSemanticsAction getAction(DynamicType) {
        Code at absolute offset: 0x68958
    }
}

class :: {

    Offset _pointInParentCoordinates@365082469(DynamicType, DynamicType) {
        Code at absolute offset: 0x6a6c8
    }

    List _childrenInDefaultOrder@365082469(DynamicType, DynamicType) {
        Code at absolute offset: 0x68bc4
    }

    String _concatStrings@365082469(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x68a40
    }
}

class _SemanticsSortGroup@365082469 extends Comparable {

    _SemanticsSortGroup@365082469 _SemanticsSortGroup@365082469.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int compareTo(DynamicType, DynamicType) {
        Code at absolute offset: 0x125d64
    }

    List sortedWithinVerticalGroup(DynamicType) {
        Code at absolute offset: 0x69e9c
    }

    List sortedWithinKnot(DynamicType) {
        Code at absolute offset: 0x692d0
    }
}

class _BoxEdge@365082469 extends Object implements Comparable {

    int compareTo(DynamicType, DynamicType) {
        Code at absolute offset: 0x12fc40
    }
}

class SemanticsNode extends _RenderObject&AbstractNode&DiagnosticableTreeMixin@333266271 {
    int _lastIdentifier@365082469
    SemanticsConfiguration _kEmptyConfig@365082469
    Int32List _kEmptyChildList@365082469
    Int32List _kEmptyCustomSemanticsActionsList@365082469
    Float64List _kIdentityTransform@365082469

    Key get:key(DynamicType) {
        Code at absolute offset: 0x1d772
    }

    SemanticsConfiguration get:_kEmptyConfig@365082469() {
        Code at absolute offset: 0xfaa0
    }

    Int32List get:_kEmptyChildList@365082469() {
        Code at absolute offset: 0xfaa0
    }

    Int32List get:_kEmptyCustomSemanticsActionsList@365082469() {
        Code at absolute offset: 0xfaa0
    }

    Float64List get:_kIdentityTransform@365082469() {
        Code at absolute offset: 0xfaa0
    }

    SemanticsNode SemanticsNode.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x6d948
    }

    SemanticsNode SemanticsNode.root(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7029c
    }

    VoidType set:transform(DynamicType, DynamicType) {
        Code at absolute offset: 0x70dd8
    }

    VoidType set:rect(DynamicType, DynamicType) {
        Code at absolute offset: 0x72cf4
    }

    VoidType set:isMergedIntoParent(DynamicType, DynamicType) {
        Code at absolute offset: 0x6dc48
    }

    VoidType _replaceChildren@365082469(DynamicType, DynamicType) {
        Code at absolute offset: 0x6bb80
    }

    bool get:hasChildren(DynamicType) {
        Code at absolute offset: 0x70504
    }

    VoidType visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool _visitDescendants@365082469(DynamicType, DynamicType) {
        Code at absolute offset: 0x6c8e8
    }

    SemanticsOwner get:owner(DynamicType) {
        Code at absolute offset: 0x7355c
    }

    SemanticsNode get:parent(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType redepthChildren(DynamicType) {
        Code at absolute offset: 0x127e14
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x127778
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x126ad4
    }

    VoidType _markDirty@365082469(DynamicType) {
        Code at absolute offset: 0x6c374
    }

    bool _isDifferentFromCurrentSemanticAnnotation@365082469(DynamicType, DynamicType) {
        Code at absolute offset: 0x6c434
    }

    String get:value(DynamicType) {
        Code at absolute offset: 0x6a88a
    }

    bool _canPerformAction@365082469(DynamicType, DynamicType) {
        Code at absolute offset: 0x6ca48
    }

    VoidType updateWith(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x6b7fc
    }

    SemanticsData getSemanticsData(DynamicType) {
        Code at absolute offset: 0x70578
    }

    Float64List _initIdentityTransform@365082469() {
        Code at absolute offset: 0x6a908
    }

    VoidType _addToUpdate@365082469(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x72ef4
    }

    List _childrenInTraversalOrder@365082469(DynamicType) {
        Code at absolute offset: 0x6de30
    }

    VoidType sendEvent(DynamicType, DynamicType) {
        Code at absolute offset: 0x6dc98
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x13e828
    }

    DiagnosticsNode toDiagnosticsNode(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x133648
    }
}

class Key extends Object {
}

class :: {
}

class ValueKey<T> extends LocalKey {

    T get:value(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17fa08
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15a68c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14c09c
    }
}

class LocalKey extends Key {
}

class _TypeLiteral@101174814<T> extends Object {

    Type get:type(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class SemanticsConfiguration extends Object {

    SemanticsConfiguration SemanticsConfiguration.(DynamicType) {
        Code at absolute offset: 0x6a9b8
    }

    VoidType set:isSemanticBoundary(DynamicType, DynamicType) {
        Code at absolute offset: 0x6ad3c
    }

    VoidType _addAction@365082469(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x6af38
    }

    VoidType _addArgumentlessAction@365082469(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x6aed0
    }

    VoidType set:onTap(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:onLongPress(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:onScrollLeft(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:onDismiss(DynamicType, DynamicType) {
        Code at absolute offset: 0x6b15c
    }

    VoidType set:onScrollRight(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:onScrollUp(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:onScrollDown(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:sortKey(DynamicType, DynamicType) {
        Code at absolute offset: 0x6b1ac
    }

    VoidType set:isMergingSemanticsOfDescendants(DynamicType, DynamicType) {
        Code at absolute offset: 0x6ac94
    }

    VoidType set:label(DynamicType, DynamicType) {
        Code at absolute offset: 0x6b11c
    }

    String get:value(DynamicType) {
        Code at absolute offset: 0x6ab0e
    }

    VoidType set:value(DynamicType, DynamicType) {
        Code at absolute offset: 0x6aba4
    }

    VoidType set:elevation(DynamicType, DynamicType) {
        Code at absolute offset: 0x6ad98
    }

    VoidType set:scopesRoute(DynamicType, DynamicType) {
        Code at absolute offset: 0x6b7ac
    }

    VoidType set:namesRoute(DynamicType, DynamicType) {
        Code at absolute offset: 0x6abe8
    }

    VoidType set:textDirection(DynamicType, DynamicType) {
        Code at absolute offset: 0x6b09c
    }

    VoidType set:isEnabled(DynamicType, DynamicType) {
        Code at absolute offset: 0x6ae24
    }

    VoidType set:isFocusable(DynamicType, DynamicType) {
        Code at absolute offset: 0x6acc0
    }

    VoidType set:isFocused(DynamicType, DynamicType) {
        Code at absolute offset: 0x6b0e0
    }

    VoidType set:isButton(DynamicType, DynamicType) {
        Code at absolute offset: 0x6ad58
    }

    VoidType set:isHeader(DynamicType, DynamicType) {
        Code at absolute offset: 0x6af94
    }

    VoidType set:isHidden(DynamicType, DynamicType) {
        Code at absolute offset: 0x6ae90
    }

    bool get:isMultiline(DynamicType) {
        Code at absolute offset: 0x6acfc
    }

    VoidType _setFlag@365082469(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x6ac28
    }

    bool isCompatibleWith(DynamicType, DynamicType) {
        Code at absolute offset: 0x6afd4
    }

    VoidType absorb(DynamicType, DynamicType) {
        Code at absolute offset: 0x6b438
    }

    SemanticsConfiguration copy(DynamicType) {
        Code at absolute offset: 0x6b1ec
    }
}

class AbstractNode extends Object {

    VoidType redepthChild(DynamicType, DynamicType) {
        Code at absolute offset: 0x6c178
    }

    VoidType redepthChildren(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x1276b8
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0xc04a4
    }

    VoidType adoptChild(DynamicType, DynamicType) {
        Code at absolute offset: 0x6c2e0
    }

    VoidType dropChild(DynamicType, DynamicType) {
        Code at absolute offset: 0x6c284
    }

    DynamicType get:redepthChild(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
}

class SemanticsOwner extends ChangeNotifier {

    SemanticsOwner SemanticsOwner.(DynamicType) {
        Code at absolute offset: 0x6d81c
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x6d7c0
    }

    VoidType sendSemanticsUpdate(DynamicType) {
        Code at absolute offset: 0x68330
    }

    _Closure@0150898 _getSemanticsActionHandlerForId@365082469(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x6c764
    }

    VoidType performAction(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x6c5e0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x76a5c
    }
}

class _ReceivePortImpl@1026248 extends Stream implements ReceivePort {

    _ReceivePortImpl@1026248 _ReceivePortImpl@1026248.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _ReceivePortImpl@1026248 _ReceivePortImpl@1026248.fromRawReceivePort(DynamicType, DynamicType) {
        Code at absolute offset: 0x6cb88
    }

    SendPort get:sendPort(DynamicType) {
        Code at absolute offset: 0x6d74c
    }

    StreamSubscription listen(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x6ca7c
    }

    VoidType close(DynamicType) {
        Code at absolute offset: 0x6d63c
    }

    DynamicType get:close(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class ReceivePort extends Object implements Stream {

    ReceivePort ReceivePort.(DynamicType) {
        Code at absolute offset: 0x6cb30
    }
}

class RawReceivePort extends Object {

    RawReceivePort RawReceivePort.(DynamicType, DynamicType) {
        Code at absolute offset: 0x6d680
    }
}

class :: {
    _Closure@0150898 _pendingImmediateCallback@1026248

    VoidType _isolateScheduleImmediate@1026248(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _runPendingImmediateCallback@1026248() {
        Code at absolute offset: 0x6ce84
    }

    Function _getIsolateScheduleImmediateClosure@1026248() {
        Code at absolute offset: 0x6d3b8
    }

    VoidType _startMainIsolate@1026248(DynamicType, DynamicType) {
        Code at absolute offset: 0x6d2c0
    }

    Function _getStartMainIsolateFunction@1026248() {
        Code at absolute offset: 0x6d2b0
    }

    VoidType _startIsolate@1026248(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x6cf14
    }

    DynamicType _setupHooks@1026248() {
        Code at absolute offset: 0x6ceec
    }
}

class SendPort extends Object implements Capability {
}

class Capability extends Object {
}

class SemanticsEvent extends Object {

    Map toMap(DynamicType, DynamicType) {
        Code at absolute offset: 0x6dd04
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x153684
    }
}

class :: {
}

class TooltipSemanticsEvent extends SemanticsEvent {

    String get:message(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    Map getDataMap(DynamicType) {
        Code at absolute offset: 0x1861c4
    }
}

class LongPressSemanticsEvent extends SemanticsEvent {

    Map getDataMap(DynamicType) {
        Code at absolute offset: 0x18621c
    }
}

class TapSemanticEvent extends SemanticsEvent {

    Map getDataMap(DynamicType) {
        Code at absolute offset: 0x18621c
    }
}

class _TraversalSortNode@365082469 extends Object implements Comparable {

    int compareTo(DynamicType, DynamicType) {
        Code at absolute offset: 0x12fd88
    }
}

class Sort extends Object {

    VoidType sort(DynamicType, DynamicType) {
        Code at absolute offset: 0x6e338
    }

    VoidType _doSort@11040228(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x6e3e8
    }

    VoidType _insertionSort@11040228(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x6ff1c
    }

    VoidType _dualPivotQuicksort@11040228(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x6e4c8
    }
}

class SemanticsData extends _DiagnosticableTree&Object&Diagnosticable@99198569 {

    String get:value(DynamicType) {
        Code at absolute offset: 0x1d772
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x13d7fc
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17f314
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15a02c
    }

    bool _sortedListsEqual@365082469(DynamicType, DynamicType) {
        Code at absolute offset: 0x70af0
    }
}

class LinkedHashSet<E> extends Object implements Set {

    LinkedHashSet LinkedHashSet.from(DynamicType, DynamicType) {
        Code at absolute offset: 0x70c90
    }

    LinkedHashSet LinkedHashSet.of(DynamicType, DynamicType) {
        Code at absolute offset: 0x70d4c
    }
}

class MatrixUtils extends Object {
    Float64List _minMax@293374251

    Float64List get:_minMax@293374251() {
        Code at absolute offset: 0xfaa0
    }

    Offset getAsTranslation(DynamicType) {
        Code at absolute offset: 0x72480
    }

    bool matrixEquals(DynamicType, DynamicType) {
        Code at absolute offset: 0x727d4
    }

    bool isIdentity(DynamicType) {
        Code at absolute offset: 0x70e70
    }

    Offset transformPoint(DynamicType, DynamicType) {
        Code at absolute offset: 0x721b8
    }

    Rect _safeTransformRect@293374251(DynamicType, DynamicType) {
        Code at absolute offset: 0x71a6c
    }

    VoidType _accumulate@293374251(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x71e08
    }

    Rect transformRect(DynamicType, DynamicType) {
        Code at absolute offset: 0x712e8
    }

    Rect inverseTransformRect(DynamicType, DynamicType) {
        Code at absolute offset: 0x71284
    }

    Matrix4 forceToPoint(DynamicType) {
        Code at absolute offset: 0x71198
    }
}

class :: {
}

class SemanticsSortKey extends _DiagnosticableTree&Object&Diagnosticable@99198569 implements Comparable {

    int compareTo(DynamicType, DynamicType) {
        Code at absolute offset: 0x12cab4
    }
}

class OrdinalSortKey extends SemanticsSortKey {

    int doCompare(DynamicType, DynamicType) {
        Code at absolute offset: 0x72da8
    }
}

class DebugSemanticsDumpOrder extends Object {
}

class SemanticsHintOverrides extends DiagnosticableTree {
}

class SemanticsTag extends Object {
}

class SemanticsProperties extends DiagnosticableTree {

    String get:value(DynamicType) {
        Code at absolute offset: 0x72ed6
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x13d6d4
    }
}

class _SemanticsDiagnosticableNode@365082469 extends DiagnosticableNode {
}

class WhereIterable<E> extends Iterable {

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12dc3c
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x12ea24
    }
}

class Layer extends _RenderObject&AbstractNode&DiagnosticableTreeMixin@333266271 {

    ContainerLayer get:parent(DynamicType) {
        Code at absolute offset: 0x756a0
    }

    VoidType markNeedsAddToScene(DynamicType) {
        Code at absolute offset: 0x748b8
    }

    VoidType set:engineLayer(DynamicType, DynamicType) {
        Code at absolute offset: 0x756f8
    }

    VoidType updateSubtreeNeedsAddToScene(DynamicType) {
        Code at absolute offset: 0x16fc20
    }

    VoidType dropChild(DynamicType, DynamicType) {
        Code at absolute offset: 0x75338
    }

    VoidType adoptChild(DynamicType, DynamicType) {
        Code at absolute offset: 0x7544c
    }

    VoidType remove(DynamicType) {
        Code at absolute offset: 0x7565c
    }

    S find(DynamicType, DynamicType) {
        Code at absolute offset: 0x75540
    }

    VoidType _addToSceneWithRetainedRendering@328518307(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x13e7a8
    }
}

class :: {
}

class PhysicalModelLayer extends ContainerLayer {

    VoidType set:clipPath(DynamicType, DynamicType) {
        Code at absolute offset: 0x74ac8
    }

    VoidType set:clipBehavior(DynamicType, DynamicType) {
        Code at absolute offset: 0x74a68
    }

    VoidType set:elevation(DynamicType, DynamicType) {
        Code at absolute offset: 0x749f0
    }

    VoidType set:color(DynamicType, DynamicType) {
        Code at absolute offset: 0x74978
    }

    VoidType set:shadowColor(DynamicType, DynamicType) {
        Code at absolute offset: 0x74900
    }

    bool findAnnotations(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x164614
    }

    VoidType addToScene(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16ed74
    }
}

class AnnotationResult<T> extends Object {

    AnnotationResult AnnotationResult.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x74b4e
    }
}

class OpacityLayer extends ContainerLayer {

    VoidType set:alpha(DynamicType, DynamicType) {
        Code at absolute offset: 0x74cf0
    }

    VoidType set:offset(DynamicType, DynamicType) {
        Code at absolute offset: 0x74c78
    }

    VoidType addToScene(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16ebf8
    }
}

class TransformLayer extends OffsetLayer {

    VoidType set:transform(DynamicType, DynamicType) {
        Code at absolute offset: 0x74e60
    }

    VoidType addToScene(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16e78c
    }

    Offset _transformOffset@328518307(DynamicType, DynamicType) {
        Code at absolute offset: 0x74db0
    }

    bool findAnnotations(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x164294
    }
}

class AnnotationEntry<T> extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x15304c
    }
}

class ClipRectLayer extends ContainerLayer {

    VoidType set:clipRect(DynamicType, DynamicType) {
        Code at absolute offset: 0x74f00
    }

    VoidType set:clipBehavior(DynamicType, DynamicType) {
        Code at absolute offset: 0x74a68
    }

    bool findAnnotations(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1643f8
    }

    VoidType addToScene(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16eaa0
    }
}

class PerformanceOverlayLayer extends Layer {

    VoidType addToScene(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16e6b8
    }

    bool findAnnotations(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x31fa8
    }
}

class AnnotatedRegionLayer<T> extends ContainerLayer {

    T get:value(DynamicType) {
        Code at absolute offset: 0x74f9e
    }

    AnnotatedRegionLayer AnnotatedRegionLayer.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x74fa8
    }

    bool findAnnotations(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x164708
    }
}

class OffsetLayer extends ContainerLayer {

    VoidType set:offset(DynamicType, DynamicType) {
        Code at absolute offset: 0x75068
    }

    bool findAnnotations(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x164350
    }

    VoidType addToScene(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16e958
    }
}

class ContainerLayer extends Layer {

    Scene buildScene(DynamicType, DynamicType) {
        Code at absolute offset: 0x75488
    }

    VoidType updateSubtreeNeedsAddToScene(DynamicType) {
        Code at absolute offset: 0x16fc58
    }

    bool findAnnotations(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1644cc
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x1276f0
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x126a58
    }

    VoidType append(DynamicType, DynamicType) {
        Code at absolute offset: 0x75374
    }

    VoidType _removeChild@328518307(DynamicType, DynamicType) {
        Code at absolute offset: 0x75240
    }

    VoidType removeAllChildren(DynamicType) {
        Code at absolute offset: 0x75950
    }

    VoidType addToScene(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16ef10
    }

    VoidType addChildrenToScene(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x750e0
    }
}

class PictureLayer extends Layer {

    VoidType set:picture(DynamicType, DynamicType) {
        Code at absolute offset: 0x74868
    }

    VoidType set:isComplexHint(DynamicType, DynamicType) {
        Code at absolute offset: 0x754f8
    }

    VoidType addToScene(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16e644
    }

    bool findAnnotations(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x31fa8
    }
}

class RelayoutWhenSystemFontsChangeMixin extends RenderObject {
}

class _RenderObject&AbstractNode&DiagnosticableTreeMixin@333266271 extends AbstractNode implements DiagnosticableTreeMixin {

    String toString(DynamicType, DynamicType) {
        Code at absolute offset: 0x14c7d8
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x76a5c
    }

    DiagnosticsNode toDiagnosticsNode(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x133600
    }
}

class RenderObject extends _RenderObject&AbstractNode&DiagnosticableTreeMixin@333266271 implements HitTestTarget {
    bool _needsCompositing@333266271

    bool get:_needsCompositing@333266271(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    RenderObject RenderObject.(DynamicType) {
        Code at absolute offset: 0x76a84
    }

    VoidType setupParentData(DynamicType, DynamicType) {
        Code at absolute offset: 0xffbb8
    }

    VoidType adoptChild(DynamicType, DynamicType) {
        Code at absolute offset: 0x77b68
    }

    VoidType dropChild(DynamicType, DynamicType) {
        Code at absolute offset: 0x77be0
    }

    VoidType visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType _debugReportException@333266271(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x75834
    }

    PipelineOwner get:owner(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x1273ec
    }

    Constraints get:constraints(DynamicType) {
        Code at absolute offset: 0x105ea4
    }

    VoidType markNeedsLayout(DynamicType) {
        Code at absolute offset: 0xfc318
    }

    VoidType markParentNeedsLayout(DynamicType) {
        Code at absolute offset: 0x77e60
    }

    VoidType markNeedsLayoutForSizedByParentChange(DynamicType) {
        Code at absolute offset: 0x77e28
    }

    VoidType _cleanRelayoutBoundary@333266271(DynamicType) {
        Code at absolute offset: 0x77838
    }

    VoidType _cleanChildRelayoutBoundary@333266271(DynamicType) {
        Code at absolute offset: 0x777f8
    }

    VoidType scheduleInitialLayout(DynamicType) {
        Code at absolute offset: 0x77d08
    }

    VoidType _layoutWithoutResize@333266271(DynamicType) {
        Code at absolute offset: 0x76360
    }

    VoidType layout(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x77f14
    }

    bool get:sizedByParent(DynamicType) {
        Code at absolute offset: 0x31fa8
    }

    bool get:isRepaintBoundary(DynamicType) {
        Code at absolute offset: 0x31fa8
    }

    bool get:alwaysNeedsCompositing(DynamicType) {
        Code at absolute offset: 0x31fa8
    }

    VoidType set:layer(DynamicType, DynamicType) {
        Code at absolute offset: 0x76ecc
    }

    VoidType markNeedsCompositingBitsUpdate(DynamicType) {
        Code at absolute offset: 0x77944
    }

    bool get:needsCompositing(DynamicType) {
        Code at absolute offset: 0x7754c
    }

    VoidType _updateCompositingBits@333266271(DynamicType) {
        Code at absolute offset: 0x75c7c
    }

    VoidType markNeedsPaint(DynamicType) {
        Code at absolute offset: 0x75dbc
    }

    VoidType _skippedPaintingOnLayer@333266271(DynamicType) {
        Code at absolute offset: 0x74588
    }

    VoidType scheduleInitialPaint(DynamicType, DynamicType) {
        Code at absolute offset: 0x77588
    }

    VoidType replaceRootLayer(DynamicType, DynamicType) {
        Code at absolute offset: 0x77c98
    }

    VoidType _paintWithContext@333266271(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x757a0
    }

    VoidType applyPaintTransform(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    Matrix4 getTransformTo(DynamicType, DynamicType) {
        Code at absolute offset: 0x76b3c
    }

    Rect describeApproximatePaintClip(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType scheduleInitialSemantics(DynamicType) {
        Code at absolute offset: 0x76f00
    }

    VoidType describeSemanticsConfiguration(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType sendSemanticsEvent(DynamicType, DynamicType) {
        Code at absolute offset: 0x776c4
    }

    SemanticsConfiguration get:_semanticsConfiguration@333266271(DynamicType) {
        Code at absolute offset: 0x73ff4
    }

    VoidType clearSemantics(DynamicType) {
        Code at absolute offset: 0x106de0
    }

    VoidType markNeedsSemanticsUpdate(DynamicType) {
        Code at absolute offset: 0x763e8
    }

    VoidType _updateSemantics@333266271(DynamicType) {
        Code at absolute offset: 0x7378c
    }

    _SemanticsFragment@333266271 _getSemanticsForParent@333266271(DynamicType, DynamicType) {
        Code at absolute offset: 0x739e8
    }

    VoidType visitChildrenForSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0xffb78
    }

    VoidType assembleSemanticsNode(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x108e30
    }

    VoidType handleEvent(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x13e4f8
    }

    String toString(DynamicType, DynamicType) {
        Code at absolute offset: 0x14bb48
    }

    VoidType showOnScreen(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x77000
    }

    DiagnosticsNode describeForError(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x774dc
    }

    DynamicType get:markNeedsPaint(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:showOnScreen(DynamicType) {
        Code at absolute offset: 0x106758
    }
}

class Curve extends ParametricCurve {

    double transform(DynamicType, DynamicType) {
        Code at absolute offset: 0x16fb68
    }

    Curve get:flipped(DynamicType) {
        Code at absolute offset: 0x774bc
    }
}

class ParametricCurve<T> extends Object {

    T transform(DynamicType, DynamicType) {
        Code at absolute offset: 0x16fbe8
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14a08c
    }
}

class :: {
}

class Cubic extends Curve {

    double transformInternal(DynamicType, DynamicType) {
        Code at absolute offset: 0x163bbc
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x149d90
    }
}

class _Linear@49484502 extends Curve {

    double transformInternal(DynamicType, DynamicType) {
        Code at absolute offset: 0x155994
    }
}

class FlippedCurve extends Curve {

    double transformInternal(DynamicType, DynamicType) {
        Code at absolute offset: 0x163ed8
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14a028
    }
}

class Threshold extends Curve {

    double transformInternal(DynamicType, DynamicType) {
        Code at absolute offset: 0x163b24
    }
}

class Interval extends Curve {

    double transformInternal(DynamicType, DynamicType) {
        Code at absolute offset: 0x163a0c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x149b90
    }
}

class _AbortingSemanticsFragment@333266271 extends _InterestingSemanticsFragment@333266271 {

    _AbortingSemanticsFragment@333266271 _AbortingSemanticsFragment@333266271.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool get:abortsWalk(DynamicType) {
        Code at absolute offset: 0x80f34
    }

    SemanticsConfiguration get:config(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType compileChildren(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x17156c
    }

    VoidType markAsExplicit(DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class ContainerRenderObjectMixin<ChildType, ParentDataType> extends RenderObject {
}

class DiagnosticsDebugCreator extends DiagnosticsProperty {
}

class _InterestingSemanticsFragment@333266271 extends _SemanticsFragment@333266271 {

    _InterestingSemanticsFragment@333266271 _InterestingSemanticsFragment@333266271.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    RenderObject get:owner(DynamicType) {
        Code at absolute offset: 0x78384
    }

    List get:interestingFragments(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addAncestor(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _SemanticsGeometry@333266271 extends Object {
    Matrix4 _transform@333266271
    Rect _rect@333266271
    Matrix4 _temporaryTransformHolder@333266271

    Matrix4 get:_transform@333266271(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Rect get:_rect@333266271(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Matrix4 get:_temporaryTransformHolder@333266271() {
        Code at absolute offset: 0xfaa0
    }

    _SemanticsGeometry@333266271 _SemanticsGeometry@333266271.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x78fe0
    }

    Matrix4 get:transform(DynamicType) {
        Code at absolute offset: 0x78fa4
    }

    Rect get:rect(DynamicType) {
        Code at absolute offset: 0x78f68
    }

    VoidType _computeValues@333266271(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x786d4
    }

    Rect _transformRect@333266271(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _applyIntermediatePaintTransforms@333266271(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x78504
    }

    Rect _intersectRects@333266271(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool get:dropFromTree(DynamicType) {
        Code at absolute offset: 0x78404
    }
}

class _ContainerSemanticsFragment@333266271 extends _SemanticsFragment@333266271 {

    _ContainerSemanticsFragment@333266271 _ContainerSemanticsFragment@333266271.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addAll(DynamicType, DynamicType) {
        Code at absolute offset: 0x185c28
    }
}

class PaintingContext extends ClipContext {

    VoidType repaintCompositedChild(DynamicType, DynamicType) {
        Code at absolute offset: 0x75a10
    }

    VoidType _repaintCompositedChild@333266271(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7465c
    }

    VoidType paintChild(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x79524
    }

    VoidType _compositeChild@333266271(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7940c
    }

    VoidType appendLayer(DynamicType, DynamicType) {
        Code at absolute offset: 0x793cc
    }

    Canvas get:canvas(DynamicType) {
        Code at absolute offset: 0x7926c
    }

    VoidType _startRecording@333266271(DynamicType) {
        Code at absolute offset: 0x792c0
    }

    VoidType stopRecordingIfNeeded(DynamicType) {
        Code at absolute offset: 0x747b4
    }

    VoidType setIsComplexHint(DynamicType) {
        Code at absolute offset: 0x79af0
    }

    VoidType addLayer(DynamicType, DynamicType) {
        Code at absolute offset: 0x794e8
    }

    VoidType pushLayer(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x79898
    }

    PaintingContext createChildContext(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x799d4
    }

    ClipRectLayer pushClipRect(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x79b38
    }

    TransformLayer pushTransform(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x79598
    }

    OpacityLayer pushOpacity(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x799f4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14fae0
    }
}

class ClipContext extends Object {

    VoidType _clipAndPaint@276104375(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x790b0
    }

    VoidType clipRectAndPaint(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x79038
    }
}

class :: {
}

class _SwitchableSemanticsFragment@333266271 extends _InterestingSemanticsFragment@333266271 {

    _SwitchableSemanticsFragment@333266271 _SwitchableSemanticsFragment@333266271.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x73ed0
    }

    VoidType compileChildren(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x170bf8
    }

    SemanticsConfiguration get:config(DynamicType) {
        Code at absolute offset: 0x16648c
    }

    VoidType addAll(DynamicType, DynamicType) {
        Code at absolute offset: 0x185c98
    }

    VoidType _ensureConfigIsWritable@333266271(DynamicType) {
        Code at absolute offset: 0x79d34
    }

    VoidType markAsExplicit(DynamicType) {
        Code at absolute offset: 0x16886c
    }
}

class RenderObjectWithChildMixin<ChildType> extends RenderObject {
}

class Constraints extends Object {
}

class _RootSemanticsFragment@333266271 extends _InterestingSemanticsFragment@333266271 {

    _RootSemanticsFragment@333266271 _RootSemanticsFragment@333266271.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x73ddc
    }

    VoidType compileChildren(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x170728
    }

    SemanticsConfiguration get:config(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType markAsExplicit(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType addAll(DynamicType, DynamicType) {
        Code at absolute offset: 0x185c60
    }
}

class SemanticsHandle extends Object {

    SemanticsHandle SemanticsHandle._@333266271(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x74274
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x79da0
    }
}

class ContainerParentDataMixin<ChildType> extends ParentData {
}

class _SemanticsFragment@333266271 extends Object {

    bool get:abortsWalk(DynamicType) {
        Code at absolute offset: 0x31fa8
    }
}

class ContainerBoxParentData<ChildType> extends _ContainerBoxParentData&BoxParentData&ContainerParentDataMixin@318392247 {
}

class BoxConstraints extends Constraints {

    BoxConstraints copyWith(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x79ffc
    }

    BoxConstraints deflate(DynamicType, DynamicType) {
        Code at absolute offset: 0x7a504
    }

    BoxConstraints loosen(DynamicType) {
        Code at absolute offset: 0x7a2d4
    }

    BoxConstraints enforce(DynamicType, DynamicType) {
        Code at absolute offset: 0x7a1ac
    }

    BoxConstraints tighten(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x79e1c
    }

    double constrainWidth(DynamicType, DynamicType) {
        Code at absolute offset: 0x7a490
    }

    double constrainHeight(DynamicType, DynamicType) {
        Code at absolute offset: 0x7a41c
    }

    Size constrain(DynamicType, DynamicType) {
        Code at absolute offset: 0x7cf94
    }

    Size get:biggest(DynamicType) {
        Code at absolute offset: 0x7a320
    }

    Size get:smallest(DynamicType) {
        Code at absolute offset: 0x7c6a4
    }

    bool get:isTight(DynamicType) {
        Code at absolute offset: 0x782b8
    }

    BoxConstraints *(DynamicType, DynamicType) {
        Code at absolute offset: 0x7cd94
    }

    BoxConstraints /(DynamicType, DynamicType) {
        Code at absolute offset: 0x7d0a4
    }

    BoxConstraints lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7c7b4
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1851c8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x1576c0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x15216c
    }
}

class EdgeInsetsGeometry extends Object {

    double get:horizontal(DynamicType) {
        Code at absolute offset: 0x7a8d0
    }

    double get:vertical(DynamicType) {
        Code at absolute offset: 0x7c658
    }

    EdgeInsetsGeometry add(DynamicType, DynamicType) {
        Code at absolute offset: 0x17926c
    }

    EdgeInsetsGeometry clamp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15d988
    }

    EdgeInsetsGeometry lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7b7a4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x150290
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x183ca8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15ae7c
    }
}

class :: {
}

class EdgeInsets extends EdgeInsetsGeometry {

    EdgeInsets EdgeInsets.fromWindowPadding(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7b548
    }

    double get:_left@282303931(DynamicType) {
        Code at absolute offset: 0x13a1d8
    }

    EdgeInsetsGeometry add(DynamicType, DynamicType) {
        Code at absolute offset: 0x17921c
    }

    EdgeInsetsGeometry clamp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15d71c
    }

    EdgeInsets -(DynamicType, DynamicType) {
        Code at absolute offset: 0x7af84
    }

    EdgeInsets +(DynamicType, DynamicType) {
        Code at absolute offset: 0x7ac88
    }

    EdgeInsets *(DynamicType, DynamicType) {
        Code at absolute offset: 0x17f6f8
    }

    EdgeInsets lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7b434
    }

    EdgeInsets resolve(DynamicType, DynamicType) {
        Code at absolute offset: 0x13214c
    }

    EdgeInsets copyWith(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7b284
    }
}

class EdgeInsetsDirectional extends EdgeInsetsGeometry {

    EdgeInsetsDirectional *(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    EdgeInsetsDirectional lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _MixedEdgeInsets@282303931 extends EdgeInsetsGeometry {

    double get:_left@282303931(DynamicType) {
        Code at absolute offset: 0x16ba6c
    }

    _MixedEdgeInsets@282303931 *(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    EdgeInsets resolve(DynamicType, DynamicType) {
        Code at absolute offset: 0x1719c0
    }
}

class RenderBoxContainerDefaultsMixin<ChildType, ParentDataType> extends Object implements ContainerRenderObjectMixin {
}

class _ContainerBoxParentData&BoxParentData&ContainerParentDataMixin@318392247<ChildType> extends BoxParentData implements ContainerParentDataMixin {

    VoidType set:previousSibling(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:nextSibling(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class BoxHitTestEntry extends HitTestEntry {

    RenderBox get:target(DynamicType) {
        Code at absolute offset: 0x17fd14
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14cb8c
    }
}

class RenderBox extends RenderObject {

    RenderBox RenderBox.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType setupParentData(DynamicType, DynamicType) {
        Code at absolute offset: 0xffdfc
    }

    VoidType set:size(DynamicType, DynamicType) {
        Code at absolute offset: 0x7d2e8
    }

    Rect get:semanticBounds(DynamicType) {
        Code at absolute offset: 0x105edc
    }

    double getDistanceToBaseline(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    double getDistanceToActualBaseline(DynamicType, DynamicType) {
        Code at absolute offset: 0x7d7c0
    }

    double computeDistanceToActualBaseline(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    BoxConstraints get:constraints(DynamicType) {
        Code at absolute offset: 0x105da4
    }

    VoidType markNeedsLayout(DynamicType) {
        Code at absolute offset: 0xfc0f0
    }

    VoidType performResize(DynamicType) {
        Code at absolute offset: 0xf7404
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    bool hitTest(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfcbb8
    }

    bool hitTestSelf(DynamicType, DynamicType) {
        Code at absolute offset: 0x31fa8
    }

    bool hitTestChildren(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x31fa8
    }

    VoidType applyPaintTransform(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x106b24
    }

    Offset globalToLocal(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7d39c
    }

    Offset localToGlobal(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7d320
    }

    Rect get:paintBounds(DynamicType) {
        Code at absolute offset: 0x105edc
    }

    VoidType handleEvent(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x107084
    }
}

class RenderView extends _RenderView&RenderObject&RenderObjectWithChildMixin@354268214 {

    RenderView RenderView.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x81a50
    }

    VoidType set:configuration(DynamicType, DynamicType) {
        Code at absolute offset: 0x819cc
    }

    VoidType prepareInitialFrame(DynamicType) {
        Code at absolute offset: 0x8198c
    }

    TransformLayer _updateMatricesAndCreateNewRootLayer@354268214(DynamicType) {
        Code at absolute offset: 0x818e4
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x105c18
    }

    bool hitTest(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x68030
    }

    HitTestResult hitTestMouseTrackers(DynamicType, DynamicType) {
        Code at absolute offset: 0x7dea8
    }

    bool get:isRepaintBoundary(DynamicType) {
        Code at absolute offset: 0x80f34
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xff5f4
    }

    VoidType applyPaintTransform(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x106c00
    }

    VoidType compositeFrame(DynamicType) {
        Code at absolute offset: 0x817fc
    }

    VoidType _updateSystemChrome@354268214(DynamicType) {
        Code at absolute offset: 0x7def4
    }

    Rect get:paintBounds(DynamicType) {
        Code at absolute offset: 0x10600c
    }

    Rect get:semanticBounds(DynamicType) {
        Code at absolute offset: 0x106770
    }

    DynamicType get:hitTestMouseTrackers(DynamicType) {
        Code at absolute offset: 0x17e9a0
    }
}

class _RenderView&RenderObject&RenderObjectWithChildMixin@354268214 extends RenderObject implements RenderObjectWithChildMixin {

    _RenderView&RenderObject&RenderObjectWithChildMixin@354268214 _RenderView&RenderObject&RenderObjectWithChildMixin@354268214.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    RenderBox get:child(DynamicType) {
        Code at absolute offset: 0x7dd9c
    }

    VoidType set:child(DynamicType, DynamicType) {
        Code at absolute offset: 0xe5838
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x127654
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x1269fc
    }

    VoidType redepthChildren(DynamicType) {
        Code at absolute offset: 0x127dd0
    }

    VoidType visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0x106668
    }
}

class :: {
}

class ViewConfiguration extends Object {

    Matrix4 toMatrix(DynamicType) {
        Code at absolute offset: 0x7ddc0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x153428
    }
}

class SystemChrome extends Object {
    SystemUiOverlayStyle _pendingStyle@391077576
    SystemUiOverlayStyle _latestStyle@391077576

    Future setApplicationSwitcherDescription(DynamicType) {
        Code at absolute offset: 0x7e538
    }

    VoidType setSystemUIOverlayStyle(DynamicType) {
        Code at absolute offset: 0x7e294
    }
}

class :: {
}

class SystemUiOverlayStyle extends Object {

    Map _toMap@391077576(DynamicType) {
        Code at absolute offset: 0x7e34c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x154488
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15b5c0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x186950
    }
}

class ApplicationSwitcherDescription extends Object {
}

class _Platform@15069316 extends Object {
    _Closure@0150898 _localeClosure@15069316

    VoidType set:_nativeScript@15069316(DynamicType) {
        Code at absolute offset: 0x81544
    }

    String _operatingSystem@15069316() {
        Code at absolute offset: 0x7e9e0
    }

    String get:operatingSystem() {
        Code at absolute offset: 0x7e9bc
    }
}

class :: {
    List _signalControllers@15069316
    Object _ioOverridesToken@15069316

    List get:_signalControllers@15069316() {
        Code at absolute offset: 0xfaa0
    }

    Object get:_ioOverridesToken@15069316() {
        Code at absolute offset: 0xfaa0
    }

    DynamicType _setupHooks@15069316() {
        Code at absolute offset: 0x7ffe0
    }

    Uri _uriBaseClosure@15069316() {
        Code at absolute offset: 0x7f730
    }

    DynamicType _getUriBaseClosure@15069316() {
        Code at absolute offset: 0x7f720
    }

    Uint8List _makeUint8ListView@15069316(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7f6d4
    }

    Function _getWatchSignalInternal@15069316() {
        Code at absolute offset: 0x7f6c4
    }

    Datagram _makeDatagram@15069316(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7f540
    }

    List _constructDomainPolicies@15069316(DynamicType) {
        Code at absolute offset: 0x7ed98
    }

    String _success@15069316() {
        Code at absolute offset: 0x7ec78
    }

    String _invalidArgument@15069316(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String _missingArgument@15069316(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String _getHttpEnableTimelineLogging@15069316() {
        Code at absolute offset: 0x7ed0c
    }

    String _setHttpEnableTimelineLogging@15069316(DynamicType) {
        Code at absolute offset: 0x7eac4
    }

    VoidType _setStdioFDs@15069316(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class _SignalController@15069316 extends Object {

    VoidType _listen@15069316(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _cancel@15069316(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class HttpClient extends Object {
    bool _enableTimelineLogging@14463476

    VoidType set:enableTimelineLogging(DynamicType) {
        Code at absolute offset: 0x7ece8
    }
}

class :: {
}

class _DomainNetworkPolicy@15069316 extends Object {
    RegExp _domainMatcher@15069316

    RegExp get:_domainMatcher@15069316() {
        Code at absolute offset: 0xfaa0
    }

    _DomainNetworkPolicy@15069316 _DomainNetworkPolicy@15069316.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool checkConflict(DynamicType, DynamicType) {
        Code at absolute offset: 0x7f1e4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14480c
    }
}

class Datagram extends Object {
}

class InternetAddressType extends Object {

    InternetAddressType InternetAddressType._from@15069316(DynamicType, DynamicType) {
        Code at absolute offset: 0x7f584
    }

    String get:name(DynamicType) {
        Code at absolute offset: 0x7f63c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x144c68
    }
}

class FileSystemException extends Object implements IOException {

    String get:message(DynamicType) {
        Code at absolute offset: 0x19b76
    }

    FileSystemException FileSystemException.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x7f810
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x144560
    }
}

class IOException extends Object implements Exception {
}

class _Directory@15069316 extends FileSystemEntity implements Directory {

    _Directory@15069316 _Directory@15069316.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Directory@15069316 _Directory@15069316.fromRawPath(DynamicType, DynamicType) {
        Code at absolute offset: 0x7fb5c
    }

    DynamicType _current@15069316(DynamicType) {
        Code at absolute offset: 0x7f8ec
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x144420
    }

    T _checkNotNull@15069316(DynamicType, DynamicType) {
        Code at absolute offset: 0x7fbd4
    }
}

class FileSystemEntity extends Object {

    Uint8List _toUtf8Array@15069316(DynamicType) {
        Code at absolute offset: 0x7fae4
    }

    Uint8List _toNullTerminatedUtf8Array@15069316(DynamicType) {
        Code at absolute offset: 0x7fa04
    }

    String _toStringFromUtf8Array@15069316(DynamicType) {
        Code at absolute offset: 0x7f930
    }
}

class Directory extends Object implements FileSystemEntity {

    Directory Directory.(DynamicType, DynamicType) {
        Code at absolute offset: 0x7fc30
    }

    Directory Directory.fromRawPath(DynamicType, DynamicType) {
        Code at absolute offset: 0x7fb24
    }
}

class IOOverrides extends Object {

    IOOverrides get:current() {
        Code at absolute offset: 0x7fca0
    }
}

class _NamespaceImpl@15069316 extends NativeFieldWrapperClass1 implements _Namespace@15069316 {
    _NamespaceImpl@15069316 _cachedNamespace@15069316

    _NamespaceImpl@15069316 _create@15069316(DynamicType, DynamicType) {
        Code at absolute offset: 0x7fe28
    }

    int _getDefault@15069316() {
        Code at absolute offset: 0x7ff2c
    }

    VoidType _setupNamespace@15069316(DynamicType) {
        Code at absolute offset: 0x7fed8
    }

    _NamespaceImpl@15069316 get:_namespace@15069316() {
        Code at absolute offset: 0x7fdac
    }
}

class NativeFieldWrapperClass1 extends Object {
}

class _Namespace@15069316 extends Object {

    _Namespace@15069316 get:_namespace@15069316() {
        Code at absolute offset: 0x7fd88
    }

    VoidType _setupNamespace@15069316(DynamicType) {
        Code at absolute offset: 0x7feac
    }
}

class _File@15069316 extends FileSystemEntity implements File {

    _File@15069316 _File@15069316.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _File@15069316 _File@15069316.fromRawPath(DynamicType, DynamicType) {
        Code at absolute offset: 0x8002c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x144478
    }

    T _checkNotNull@15069316(DynamicType, DynamicType) {
        Code at absolute offset: 0x7fbd4
    }
}

class X509Certificate extends Object {

    X509Certificate X509Certificate._@15069316(DynamicType) {
        Code at absolute offset: 0x800a4
    }
}

class Link extends Object implements FileSystemEntity {

    Link Link.(DynamicType, DynamicType) {
        Code at absolute offset: 0x80130
    }

    Link Link.fromRawPath(DynamicType, DynamicType) {
        Code at absolute offset: 0x800dc
    }
}

class _ServiceObject@15069316 extends Object {
}

class ProcessSignal extends Object {
}

class TlsException extends Object implements IOException {

    String get:message(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    TlsException TlsException.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8019c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x144b04
    }
}

class _Link@15069316 extends FileSystemEntity implements Link {

    _Link@15069316 _Link@15069316.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Link@15069316 _Link@15069316.fromRawPath(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1444d0
    }
}

class _SecureFilter@15069316 extends Object {
}

class _NativeSocket@15069316 extends __NativeSocket&_NativeSocketNativeWrapper&_ServiceObject@15069316 {

    VoidType multiplex(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _SocketProfile@15069316 extends Object {
    Map _idToSocketStatistic@15069316

    Map get:_idToSocketStatistic@15069316() {
        Code at absolute offset: 0xfaa0
    }

    String toJson() {
        Code at absolute offset: 0x80324
    }

    String start() {
        Code at absolute offset: 0x80300
    }

    String pause() {
        Code at absolute offset: 0x80300
    }

    String clear() {
        Code at absolute offset: 0x802a0
    }
}

class OSError extends Object implements Exception {

    String get:message(DynamicType) {
        Code at absolute offset: 0x19b76
    }

    OSError OSError.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8044c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1442c8
    }
}

class _RawSocket@15069316 extends Stream implements RawSocket {

    VoidType _onPauseStateChange@15069316(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _onSubscriptionStateChange@15069316(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class RawSocketEvent extends Object {
}

class _NetworkProfiling@15069316 extends Object {

    VoidType _registerServiceExtension@15069316() {
        Code at absolute offset: 0x80dec
    }

    Future _serviceExtensionHandler@15069316(DynamicType, DynamicType) {
        Code at absolute offset: 0x805b0
    }

    String getVersion() {
        Code at absolute offset: 0x80518
    }
}

class _ExternalBuffer@15069316 extends Object {
    List data
    int start
    int end

    VoidType set:data(DynamicType, DynamicType) {
        Code at absolute offset: 0x80f04
    }

    int get:start(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    VoidType set:start(DynamicType, DynamicType) {
        Code at absolute offset: 0x594f0
    }

    int get:end(DynamicType) {
        Code at absolute offset: 0x415bc
    }

    VoidType set:end(DynamicType, DynamicType) {
        Code at absolute offset: 0x596ac
    }
}

class __NativeSocket&_NativeSocketNativeWrapper&_ServiceObject@15069316 extends _NativeSocketNativeWrapper@15069316 implements _ServiceObject@15069316 {
}

class _EmbedderConfig@15069316 extends Object {
    bool _mayExit@15069316
    bool _maySetEchoMode@15069316
    bool _maySetLineMode@15069316
    bool _maySleep@15069316
    bool _mayInsecurelyConnectToAllDomains@15069316

    VoidType _setDomainPolicies@15069316(DynamicType) {
        Code at absolute offset: 0x80f44
    }
}

class _ProcessStartStatus@15069316 extends Object {
    int _errorCode@15069316
    String _errorMessage@15069316

    VoidType set:_errorCode@15069316(DynamicType, DynamicType) {
        Code at absolute offset: 0x80ff8
    }

    VoidType set:_errorMessage@15069316(DynamicType, DynamicType) {
        Code at absolute offset: 0x5801c
    }
}

class File extends Object implements FileSystemEntity {

    File File.(DynamicType, DynamicType) {
        Code at absolute offset: 0x81064
    }

    File File.fromRawPath(DynamicType, DynamicType) {
        Code at absolute offset: 0x8102c
    }
}

class _SecureFilterImpl@15069316 extends NativeFieldWrapperClass1 implements _SecureFilter@15069316 {
    int SIZE
    int ENCRYPTED_SIZE
    List buffers

    int get:SIZE() {
        Code at absolute offset: 0x81124
    }

    int get:ENCRYPTED_SIZE() {
        Code at absolute offset: 0x810f4
    }

    List get:buffers(DynamicType) {
        Code at absolute offset: 0x415c8
    }
}

class _RandomAccessFileOpsImpl@15069316 extends NativeFieldWrapperClass1 implements _RandomAccessFileOps@15069316 {
}

class _NativeSocketNativeWrapper@15069316 extends NativeFieldWrapperClass1 {
}

class _RandomAccessFileOps@15069316 extends Object {
}

class HandshakeException extends TlsException {

    HandshakeException HandshakeException.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x81154
    }
}

class _EventHandler@15069316 extends Object {

    int _timerMillisecondClock@15069316() {
        Code at absolute offset: 0x81314
    }

    VoidType _sendData@15069316(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x811f8
    }
}

class _ProcessUtils@15069316 extends Object {

    Stream _watchSignalInternal@15069316(DynamicType) {
        Code at absolute offset: 0x813c8
    }
}

class RawSocket extends Object implements Stream {
}

class _SocketStatistic@15069316 extends Object {
}

class CertificateException extends TlsException {

    CertificateException CertificateException.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x814a0
    }
}

class _X509CertificateImpl@15069316 extends NativeFieldWrapperClass1 implements X509Certificate {
}

class Platform extends Object {
    String _operatingSystem@15069316
    bool isLinux
    bool isMacOS
    bool isWindows
    bool isAndroid
    bool isIOS
    bool isFuchsia

    String get:_operatingSystem@15069316() {
        Code at absolute offset: 0xfaa0
    }

    bool get:isLinux() {
        Code at absolute offset: 0xfaa0
    }

    bool get:isMacOS() {
        Code at absolute offset: 0xfaa0
    }

    bool get:isWindows() {
        Code at absolute offset: 0xfaa0
    }

    bool get:isAndroid() {
        Code at absolute offset: 0xfaa0
    }

    bool get:isIOS() {
        Code at absolute offset: 0xfaa0
    }

    bool get:isFuchsia() {
        Code at absolute offset: 0xfaa0
    }

    String get:operatingSystem() {
        Code at absolute offset: 0x7e958
    }
}

class TargetPlatform extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class :: {

    TargetPlatform get:defaultTargetPlatform() {
        Code at absolute offset: 0x817d8
    }
}

class :: {

    TargetPlatform get:defaultTargetPlatform() {
        Code at absolute offset: 0x7e6a0
    }
}

class PointerEventConverter extends Object {

    Iterable expand(DynamicType, DynamicType) {
        Code at absolute offset: 0x81cd8
    }
}

class :: {

    int _synthesiseDownButtons@116358395(DynamicType, DynamicType) {
        Code at absolute offset: 0x81d38
    }
}

class PointerSignalResolver extends Object {

    VoidType resolve(DynamicType, DynamicType) {
        Code at absolute offset: 0x8239c
    }
}

class :: {
}

class GestureArenaManager extends Object {

    GestureArenaManager GestureArenaManager.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    GestureArenaEntry add(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x82508
    }

    VoidType close(DynamicType, DynamicType) {
        Code at absolute offset: 0x82fe8
    }

    VoidType sweep(DynamicType, DynamicType) {
        Code at absolute offset: 0x82e0c
    }

    VoidType hold(DynamicType, DynamicType) {
        Code at absolute offset: 0x82f64
    }

    VoidType release(DynamicType, DynamicType) {
        Code at absolute offset: 0x82d68
    }

    VoidType _resolve@113060655(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x82674
    }

    VoidType _tryToResolveArena@113060655(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x82970
    }

    VoidType _resolveByDefault@113060655(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x82cdc
    }

    VoidType _resolveInFavorOf@113060655(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x827b0
    }
}

class GestureArenaEntry extends Object {

    VoidType resolve(DynamicType, DynamicType) {
        Code at absolute offset: 0x82630
    }
}

class _GestureArena@113060655 extends Object {

    _GestureArena@113060655 _GestureArena@113060655.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14c8a0
    }
}

class :: {
}

class GestureDisposition extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class GestureArenaMember extends Object {
}

class _HashSet@3220832<E> extends _SetBase@3220832 implements HashSet {

    _HashSet@3220832 _HashSet@3220832.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool _equals@3220832(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int _hashCode@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12eb20
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x132e6c
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x12cc74
    }

    bool get:isNotEmpty(DynamicType) {
        Code at absolute offset: 0x12cb7c
    }

    bool contains(DynamicType, DynamicType) {
        Code at absolute offset: 0x12e224
    }

    bool add(DynamicType, DynamicType) {
        Code at absolute offset: 0x16c4d2
    }

    VoidType addAll(DynamicType, DynamicType) {
        Code at absolute offset: 0x83b40
    }

    bool _remove@3220832(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x83234
    }

    bool remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x161538
    }

    VoidType clear(DynamicType) {
        Code at absolute offset: 0x83d48
    }

    VoidType _addEntry@3220832(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x83c00
    }

    VoidType _resize@3220832(DynamicType) {
        Code at absolute offset: 0x83930
    }

    HashSet _newSet@3220832(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:contains(DynamicType) {
        Code at absolute offset: 0xe49b0
    }
}

class _SetBase@3220832<E> extends Object implements Set {

    Set intersection(DynamicType, DynamicType) {
        Code at absolute offset: 0x15f7f4
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x12cef4
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x131d00
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x12fadc
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x140bbc
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13215c
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x1323f4
    }

    String join(DynamicType, DynamicType) {
        Code at absolute offset: 0x130814
    }
}

class HashSet<E> extends Object implements Set {

    HashSet HashSet.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x83188
    }

    HashSet HashSet.from(DynamicType, DynamicType) {
        Code at absolute offset: 0x83090
    }
}

class _HashSetEntry@3220832<E> extends Object {

    E get:key(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x132e6c
    }

    VoidType set:next(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _HashSetEntry@3220832 remove(DynamicType) {
        Code at absolute offset: 0x83594
    }
}

class _IdentityHashSet@3220832<E> extends _HashSet@3220832 {

    _IdentityHashSet@3220832 _IdentityHashSet@3220832.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int _hashCode@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool _equals@3220832(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    HashSet _newSet@3220832(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _CustomHashSet@3220832<E> extends _HashSet@3220832 {

    _CustomHashSet@3220832 _CustomHashSet@3220832.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x83698
    }

    bool remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x1614a4
    }

    bool contains(DynamicType, DynamicType) {
        Code at absolute offset: 0x12e190
    }

    bool _equals@3220832(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int _hashCode@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    HashSet _newSet@3220832(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:contains(DynamicType) {
        Code at absolute offset: 0xe4998
    }
}

class _TypeTest@3220832<T> extends Object {

    bool test(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:test(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class HeapPriorityQueue<E> extends Object implements PriorityQueue {

    HeapPriorityQueue HeapPriorityQueue.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x83e02
    }

    E get:first(DynamicType) {
        Code at absolute offset: 0x84878
    }

    E removeFirst(DynamicType) {
        Code at absolute offset: 0x847c0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1492dc
    }

    VoidType _add@37248793(DynamicType, DynamicType) {
        Code at absolute offset: 0x83e68
    }

    E _removeLast@37248793(DynamicType) {
        Code at absolute offset: 0x84758
    }

    VoidType _bubbleUp@37248793(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x83ed0
    }

    VoidType _bubbleDown@37248793(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8422c
    }

    VoidType _grow@37248793(DynamicType) {
        Code at absolute offset: 0x84134
    }
}

class :: {
}

class PriorityQueue<E> extends Object {
}

class :: {

    FlutterErrorDetails _debugReportException@398042623(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x85870
    }
}

class MultiChildRenderObjectElement extends RenderObjectElement {

    MultiChildRenderObjectElement MultiChildRenderObjectElement.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    MultiChildRenderObjectWidget get:widget(DynamicType) {
        Code at absolute offset: 0x13da7c
    }

    VoidType insertRenderObjectChild(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x176f68
    }

    VoidType moveRenderObjectChild(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x168b34
    }

    VoidType removeRenderObjectChild(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x168da4
    }

    VoidType visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0x13e928
    }

    VoidType forgetChild(DynamicType, DynamicType) {
        Code at absolute offset: 0x157614
    }

    VoidType mount(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x135fa8
    }

    VoidType update(DynamicType, DynamicType) {
        Code at absolute offset: 0x142234
    }
}

class MultiChildRenderObjectWidget extends RenderObjectWidget {

    MultiChildRenderObjectElement createElement(DynamicType) {
        Code at absolute offset: 0x13d07c
    }
}

class ProxyWidget extends Widget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415c8
    }
}

class ParentDataWidget<T> extends ProxyWidget {

    ParentDataElement createElement(DynamicType) {
        Code at absolute offset: 0x13cfa0
    }
}

class ParentDataElement<T> extends ProxyElement {

    ParentDataElement ParentDataElement.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    ParentDataWidget get:widget(DynamicType) {
        Code at absolute offset: 0x13dbbc
    }

    VoidType _applyParentData@398042623(DynamicType, DynamicType) {
        Code at absolute offset: 0x8598c
    }

    VoidType notifyClients(DynamicType, DynamicType) {
        Code at absolute offset: 0x15d400
    }
}

class BuildOwner extends Object {

    BuildOwner BuildOwner.(DynamicType, DynamicType) {
        Code at absolute offset: 0x85ba0
    }

    VoidType scheduleBuildFor(DynamicType, DynamicType) {
        Code at absolute offset: 0x85a64
    }

    VoidType lockState(DynamicType, DynamicType) {
        Code at absolute offset: 0x67ba8
    }

    VoidType buildScope(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd8f14
    }

    VoidType finalizeTree(DynamicType) {
        Code at absolute offset: 0x85758
    }
}

class _FocusNode&Object&DiagnosticableTreeMixin&ChangeNotifier@426042876 extends _FocusNode&Object&DiagnosticableTreeMixin@426042876 implements ChangeNotifier {

    _FocusNode&Object&DiagnosticableTreeMixin&ChangeNotifier@426042876 _FocusNode&Object&DiagnosticableTreeMixin&ChangeNotifier@426042876.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x131c98
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x133058
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x3c144
    }

    VoidType notifyListeners(DynamicType) {
        Code at absolute offset: 0x86e40
    }
}

class _FocusNode&Object&DiagnosticableTreeMixin@426042876 extends Object implements DiagnosticableTreeMixin {

    String toString(DynamicType, DynamicType) {
        Code at absolute offset: 0x1546f8
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x76a5c
    }

    DiagnosticsNode toDiagnosticsNode(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x133600
    }
}

class :: {

    FocusNode get:primaryFocus() {
        Code at absolute offset: 0x861bc
    }
}

class FocusNode extends _FocusNode&Object&DiagnosticableTreeMixin&ChangeNotifier@426042876 {

    FocusNode FocusNode.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x860a8
    }

    VoidType set:skipTraversal(DynamicType, DynamicType) {
        Code at absolute offset: 0x87468
    }

    bool get:canRequestFocus(DynamicType) {
        Code at absolute offset: 0x8695c
    }

    VoidType set:canRequestFocus(DynamicType, DynamicType) {
        Code at absolute offset: 0xd6440
    }

    VoidType set:descendantsAreFocusable(DynamicType, DynamicType) {
        Code at absolute offset: 0xd64ec
    }

    Iterable get:descendants(DynamicType) {
        Code at absolute offset: 0x86218
    }

    Iterable get:traversalDescendants(DynamicType) {
        Code at absolute offset: 0x86d7c
    }

    Iterable get:ancestors(DynamicType) {
        Code at absolute offset: 0x86818
    }

    bool get:hasFocus(DynamicType) {
        Code at absolute offset: 0x86c04
    }

    bool get:hasPrimaryFocus(DynamicType) {
        Code at absolute offset: 0x86cc8
    }

    FocusScopeNode get:nearestScope(DynamicType) {
        Code at absolute offset: 0x187244
    }

    FocusScopeNode get:enclosingScope(DynamicType) {
        Code at absolute offset: 0x86b40
    }

    Rect get:rect(DynamicType) {
        Code at absolute offset: 0xd36a4
    }

    VoidType unfocus(DynamicType, DynamicType) {
        Code at absolute offset: 0x86474
    }

    VoidType _markNextFocus@426042876(DynamicType, DynamicType) {
        Code at absolute offset: 0x8ba18
    }

    VoidType _removeChild@426042876(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8ba94
    }

    VoidType _updateManager@426042876(DynamicType, DynamicType) {
        Code at absolute offset: 0xd5910
    }

    VoidType _reparent@426042876(DynamicType, DynamicType) {
        Code at absolute offset: 0x8be94
    }

    FocusAttachment attach(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8bce8
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xd6734
    }

    VoidType _notify@426042876(DynamicType) {
        Code at absolute offset: 0x86dd8
    }

    VoidType requestFocus(DynamicType, DynamicType) {
        Code at absolute offset: 0x86d24
    }

    VoidType _doRequestFocus@426042876(DynamicType, DynamicType) {
        Code at absolute offset: 0x186854
    }

    VoidType _setAsFocusedChildForScope@426042876(DynamicType) {
        Code at absolute offset: 0x870f0
    }

    bool nextFocus(DynamicType) {
        Code at absolute offset: 0xd66e4
    }

    bool previousFocus(DynamicType) {
        Code at absolute offset: 0xd6694
    }

    bool focusInDirection(DynamicType, DynamicType) {
        Code at absolute offset: 0xd677c
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x1430d0
    }
}

class WhereTypeIterator<T> extends Object implements Iterator {

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xe5428
    }

    T get:current(DynamicType) {
        Code at absolute offset: 0xe5628
    }
}

class FocusManager extends _FocusNode&Object&DiagnosticableTreeMixin&ChangeNotifier@426042876 {

    FocusManager FocusManager.(DynamicType) {
        Code at absolute offset: 0x85cb8
    }

    FocusManager get:instance() {
        Code at absolute offset: 0x87ed4
    }

    FocusHighlightMode get:_defaultModeForPlatform@426042876() {
        Code at absolute offset: 0x878f8
    }

    FocusHighlightMode get:highlightMode(DynamicType) {
        Code at absolute offset: 0x87e94
    }

    VoidType _updateHighlightMode@426042876(DynamicType) {
        Code at absolute offset: 0x87b78
    }

    VoidType addHighlightModeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x8b4b0
    }

    VoidType removeHighlightModeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x8b9e8
    }

    VoidType _notifyHighlightModeListeners@426042876(DynamicType) {
        Code at absolute offset: 0x87c3c
    }

    VoidType _handlePointerEvent@426042876(DynamicType, DynamicType) {
        Code at absolute offset: 0x87a90
    }

    bool _handleRawKeyEvent@426042876(DynamicType, DynamicType) {
        Code at absolute offset: 0x880b8
    }

    VoidType _markDetached@426042876(DynamicType, DynamicType) {
        Code at absolute offset: 0x87f1c
    }

    VoidType _markPropertiesChanged@426042876(DynamicType, DynamicType) {
        Code at absolute offset: 0x874c0
    }

    VoidType _markNextFocus@426042876(DynamicType, DynamicType) {
        Code at absolute offset: 0x87f90
    }

    VoidType _markNeedsUpdate@426042876(DynamicType) {
        Code at absolute offset: 0x87500
    }

    VoidType _applyFocusChange@426042876(DynamicType) {
        Code at absolute offset: 0x875d8
    }

    DynamicType get:_handlePointerEvent@426042876(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleRawKeyEvent@426042876(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_applyFocusChange@426042876(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class FocusHighlightMode extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class RawKeyEvent extends _DiagnosticableTree&Object&Diagnosticable@99198569 {

    RawKeyEvent RawKeyEvent.fromMessage(DynamicType, DynamicType) {
        Code at absolute offset: 0x89c3c
    }

    PhysicalKeyboardKey get:physicalKey(DynamicType) {
        Code at absolute offset: 0x89c00
    }

    LogicalKeyboardKey get:logicalKey(DynamicType) {
        Code at absolute offset: 0x89bc4
    }
}

class :: {
}

class RawKeyUpEvent extends RawKeyEvent {
}

class RawKeyDownEvent extends RawKeyEvent {
}

class RawKeyboard extends Object {
    RawKeyboard instance
    Map _modifierKeyMap@382461389
    Map _allModifiersExceptFn@382461389
    Map _allModifiers@382461389

    RawKeyboard get:instance() {
        Code at absolute offset: 0xfaa0
    }

    Map get:_modifierKeyMap@382461389() {
        Code at absolute offset: 0xfaa0
    }

    Map get:_allModifiersExceptFn@382461389() {
        Code at absolute offset: 0xfaa0
    }

    Map get:_allModifiers@382461389() {
        Code at absolute offset: 0xfaa0
    }

    RawKeyboard RawKeyboard._@382461389(DynamicType) {
        Code at absolute offset: 0x89478
    }

    Future _handleKeyEvent@382461389(DynamicType, DynamicType) {
        Code at absolute offset: 0x895ac
    }

    VoidType _synchronizeModifiers@382461389(DynamicType, DynamicType) {
        Code at absolute offset: 0x896e8
    }

    Set get:keysPressed(DynamicType) {
        Code at absolute offset: 0x896b4
    }

    DynamicType get:_handleKeyEvent@382461389(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class LogicalKeyboardKey extends KeyboardKey {
    Map _synonyms@375369999

    Map get:_synonyms@375369999() {
        Code at absolute offset: 0xfaa0
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x156714
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17f540
    }

    LogicalKeyboardKey findKeyByKeyId(DynamicType) {
        Code at absolute offset: 0x888ec
    }

    bool isControlCharacter(DynamicType) {
        Code at absolute offset: 0x88828
    }

    Set get:synonyms(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class KeyboardKey extends _DiagnosticableTree&Object&Diagnosticable@99198569 {
}

class :: {
}

class PhysicalKeyboardKey extends KeyboardKey {

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15a1fc
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17f604
    }
}

class KeyboardSide extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class RawKeyEventData extends Object {

    Map get:modifiersPressed(DynamicType) {
        Code at absolute offset: 0x89a1c
    }
}

class _ModifierSidePair@382461389 extends Object {

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1864c8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x157670
    }
}

class ModifierKey extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class RawKeyEventDataWindows extends RawKeyEventData {

    String get:keyLabel(DynamicType) {
        Code at absolute offset: 0x8b104
    }

    PhysicalKeyboardKey get:physicalKey(DynamicType) {
        Code at absolute offset: 0x1720d4
    }

    LogicalKeyboardKey get:logicalKey(DynamicType) {
        Code at absolute offset: 0x172af8
    }

    bool _isLeftRightModifierPressed@388422532(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8b0a4
    }

    bool isModifierPressed(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x166ce0
    }

    KeyboardSide getModifierSide(DynamicType, DynamicType) {
        Code at absolute offset: 0x16974c
    }
}

class :: {
}

class RawKeyEventDataWeb extends RawKeyEventData {

    String get:key(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    String get:keyLabel(DynamicType) {
        Code at absolute offset: 0x8b15c
    }

    PhysicalKeyboardKey get:physicalKey(DynamicType) {
        Code at absolute offset: 0x172088
    }

    LogicalKeyboardKey get:logicalKey(DynamicType) {
        Code at absolute offset: 0x172a3c
    }

    bool isModifierPressed(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x166af4
    }

    KeyboardSide getModifierSide(DynamicType, DynamicType) {
        Code at absolute offset: 0x16973c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x154328
    }
}

class :: {
}

class RawKeyEventDataLinux extends RawKeyEventData {

    String get:keyLabel(DynamicType) {
        Code at absolute offset: 0x8b1e8
    }

    PhysicalKeyboardKey get:physicalKey(DynamicType) {
        Code at absolute offset: 0x171fc8
    }

    LogicalKeyboardKey get:logicalKey(DynamicType) {
        Code at absolute offset: 0x1725fc
    }

    bool isModifierPressed(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1668b0
    }

    KeyboardSide getModifierSide(DynamicType, DynamicType) {
        Code at absolute offset: 0x169430
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x153f44
    }
}

class :: {
}

class GtkKeyHelper extends _GLFWKeyHelper&Object&KeyHelper@385138806 {

    int _mergeModifiers@385138806(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool isModifierPressed(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x186edc
    }

    KeyboardSide getModifierSide(DynamicType, DynamicType) {
        Code at absolute offset: 0x16973c
    }

    LogicalKeyboardKey numpadKey(DynamicType, DynamicType) {
        Code at absolute offset: 0x186b38
    }

    LogicalKeyboardKey logicalKey(DynamicType, DynamicType) {
        Code at absolute offset: 0x186aa8
    }
}

class GLFWKeyHelper extends _GLFWKeyHelper&Object&KeyHelper@385138806 {

    int _mergeModifiers@385138806(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool isModifierPressed(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x186b80
    }

    KeyboardSide getModifierSide(DynamicType, DynamicType) {
        Code at absolute offset: 0x16973c
    }

    LogicalKeyboardKey numpadKey(DynamicType, DynamicType) {
        Code at absolute offset: 0x186af0
    }

    LogicalKeyboardKey logicalKey(DynamicType, DynamicType) {
        Code at absolute offset: 0x186a60
    }
}

class KeyHelper extends Object {

    KeyHelper KeyHelper.(DynamicType, DynamicType) {
        Code at absolute offset: 0x8b230
    }
}

class _GLFWKeyHelper&Object&KeyHelper@385138806 extends Object implements KeyHelper {
}

class RawKeyEventDataMacOs extends RawKeyEventData {

    PhysicalKeyboardKey get:physicalKey(DynamicType) {
        Code at absolute offset: 0x172028
    }

    LogicalKeyboardKey get:logicalKey(DynamicType) {
        Code at absolute offset: 0x1727b8
    }

    bool _isLeftRightModifierPressed@386244645(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8b394
    }

    bool isModifierPressed(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x166930
    }

    KeyboardSide getModifierSide(DynamicType, DynamicType) {
        Code at absolute offset: 0x169474
    }

    bool _isUnprintableKey@386244645(DynamicType) {
        Code at absolute offset: 0x8b300
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x154160
    }
}

class :: {
}

class RawKeyEventDataFuchsia extends RawKeyEventData {

    String get:keyLabel(DynamicType) {
        Code at absolute offset: 0x8b1e8
    }

    LogicalKeyboardKey get:logicalKey(DynamicType) {
        Code at absolute offset: 0x17251c
    }

    PhysicalKeyboardKey get:physicalKey(DynamicType) {
        Code at absolute offset: 0x171f68
    }

    bool _isLeftRightModifierPressed@384349049(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8b3dc
    }

    bool isModifierPressed(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x166718
    }

    KeyboardSide getModifierSide(DynamicType, DynamicType) {
        Code at absolute offset: 0x1691a8
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x153dc0
    }
}

class :: {
}

class RawKeyEventDataAndroid extends RawKeyEventData {

    String get:keyLabel(DynamicType) {
        Code at absolute offset: 0x8b45c
    }

    PhysicalKeyboardKey get:physicalKey(DynamicType) {
        Code at absolute offset: 0x171dc4
    }

    LogicalKeyboardKey get:logicalKey(DynamicType) {
        Code at absolute offset: 0x1723c4
    }

    bool _isLeftRightModifierPressed@383177474(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8b424
    }

    bool isModifierPressed(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1664bc
    }

    KeyboardSide getModifierSide(DynamicType, DynamicType) {
        Code at absolute offset: 0x168eac
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x153b54
    }
}

class :: {
}

class HashedObserverList<T> extends Iterable {

    HashedObserverList HashedObserverList.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x8b4fe
    }

    bool remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x8b8f0
    }

    bool contains(DynamicType, DynamicType) {
        Code at absolute offset: 0x12cdbc
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12de68
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x12ce70
    }

    DynamicType get:contains(DynamicType) {
        Code at absolute offset: 0xe4370
    }
}

class :: {
}

class ObserverList<T> extends Iterable {
    HashSet _set@105023516

    HashSet get:_set@105023516(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    ObserverList ObserverList.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x8b5fa
    }

    bool remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x8b7f8
    }

    bool contains(DynamicType, DynamicType) {
        Code at absolute offset: 0x12ccec
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12de30
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x12ce38
    }

    bool get:isNotEmpty(DynamicType) {
        Code at absolute offset: 0x129acc
    }

    DynamicType get:contains(DynamicType) {
        Code at absolute offset: 0xe4358
    }
}

class FocusAttachment extends Object {

    VoidType detach(DynamicType) {
        Code at absolute offset: 0xd6598
    }

    VoidType reparent(DynamicType, DynamicType) {
        Code at absolute offset: 0x8bdd0
    }
}

class _WidgetOrderTraversalPolicy&FocusTraversalPolicy&DirectionalFocusTraversalPolicyMixin@442280150 extends FocusTraversalPolicy implements DirectionalFocusTraversalPolicyMixin {

    _WidgetOrderTraversalPolicy&FocusTraversalPolicy&DirectionalFocusTraversalPolicyMixin@442280150 _WidgetOrderTraversalPolicy&FocusTraversalPolicy&DirectionalFocusTraversalPolicyMixin@442280150.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType invalidateScopeData(DynamicType, DynamicType) {
        Code at absolute offset: 0xd45e8
    }

    VoidType changedScope(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8c2c8
    }

    FocusNode findFirstFocusInDirection(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd5604
    }

    FocusNode _sortAndFindInitial@442280150(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd5708
    }

    Iterable _sortAndFilterHorizontally@442280150(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd4fcc
    }

    Iterable _sortAndFilterVertically@442280150(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd5158
    }

    bool _popPolicyDataIfNeeded@442280150(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd52a0
    }

    VoidType _pushPolicyData@442280150(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd4e44
    }

    bool inDirection(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd4710
    }
}

class FocusTraversalPolicy extends _State&Object&Diagnosticable@398042623 {

    FocusNode findFirstFocus(DynamicType, DynamicType) {
        Code at absolute offset: 0xd4570
    }

    FocusNode findLastFocus(DynamicType, DynamicType) {
        Code at absolute offset: 0xd43c4
    }

    FocusNode _findInitialFocus@442280150(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd43fc
    }

    bool next(DynamicType, DynamicType) {
        Code at absolute offset: 0xd4668
    }

    bool previous(DynamicType, DynamicType) {
        Code at absolute offset: 0xd4630
    }

    _FocusTraversalGroupMarker@442280150 _getMarker@442280150(DynamicType, DynamicType) {
        Code at absolute offset: 0xd4168
    }

    List _sortAllDescendants@442280150(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8c850
    }

    bool _moveFocus@442280150(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8c42c
    }
}

class ReversedListIterable<E> extends ListIterable {

    int get:length(DynamicType) {
        Code at absolute offset: 0x132d44
    }

    E elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x109c84
    }
}

class _FocusTraversalGroupInfo@442280150 extends Object {
}

class InheritedNotifier<T> extends InheritedWidget {

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x143e04
    }

    _InheritedNotifierElement@468313948 createElement(DynamicType) {
        Code at absolute offset: 0x13cea8
    }
}

class :: {
}

class _InheritedNotifierElement@468313948<T> extends InheritedElement {

    _InheritedNotifierElement@468313948 _InheritedNotifierElement@468313948.(DynamicType, DynamicType) {
        Code at absolute offset: 0x8df94
    }

    InheritedNotifier get:widget(DynamicType) {
        Code at absolute offset: 0x13dc14
    }

    VoidType update(DynamicType, DynamicType) {
        Code at absolute offset: 0x142794
    }

    Widget build(DynamicType) {
        Code at absolute offset: 0x164f98
    }

    VoidType _handleUpdate@468313948(DynamicType) {
        Code at absolute offset: 0x8ded4
    }

    VoidType notifyClients(DynamicType, DynamicType) {
        Code at absolute offset: 0x15d4c8
    }

    VoidType unmount(DynamicType) {
        Code at absolute offset: 0x16afc4
    }

    DynamicType get:_handleUpdate@468313948(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _ReadingOrderSortData@442280150 extends _State&Object&Diagnosticable@398042623 {

    _ReadingOrderSortData@442280150 _ReadingOrderSortData@442280150.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    TextDirection _findDirectionality@442280150(DynamicType) {
        Code at absolute offset: 0x8dbb8
    }

    TextDirection commonDirectionalityOf(DynamicType) {
        Code at absolute offset: 0xd34b8
    }

    VoidType sortWithDirectionality(DynamicType, DynamicType) {
        Code at absolute offset: 0xd3440
    }

    Iterable get:directionalAncestors(DynamicType) {
        Code at absolute offset: 0x8e240
    }
}

class Directionality extends InheritedWidget {

    TextDirection of(DynamicType) {
        Code at absolute offset: 0xbadac
    }

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x143d7c
    }
}

class :: {
}

class Stack extends MultiChildRenderObjectWidget {

    Stack Stack.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x91924
    }

    RenderStack createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a9b0
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x176b04
    }
}

class RenderStack extends _RenderStack&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@349419958 {

    RenderStack RenderStack.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8f2e8
    }

    VoidType setupParentData(DynamicType, DynamicType) {
        Code at absolute offset: 0xffd84
    }

    VoidType _resolve@349419958(DynamicType) {
        Code at absolute offset: 0x91554
    }

    VoidType _markNeedResolution@349419958(DynamicType) {
        Code at absolute offset: 0x8f450
    }

    VoidType set:alignment(DynamicType, DynamicType) {
        Code at absolute offset: 0x8f3d4
    }

    VoidType set:textDirection(DynamicType, DynamicType) {
        Code at absolute offset: 0x914e4
    }

    VoidType set:fit(DynamicType, DynamicType) {
        Code at absolute offset: 0x917a4
    }

    VoidType set:clipBehavior(DynamicType, DynamicType) {
        Code at absolute offset: 0x91738
    }

    double computeDistanceToActualBaseline(DynamicType, DynamicType) {
        Code at absolute offset: 0xf6dd0
    }

    bool layoutPositionedChild(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8f48c
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x104c94
    }

    bool hitTestChildren(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf8098
    }

    VoidType paintStack(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x918f0
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xff3e0
    }

    Rect describeApproximatePaintClip(DynamicType, DynamicType) {
        Code at absolute offset: 0x100184
    }

    DynamicType get:paintStack(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _RenderStack&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@349419958 extends _RenderStack&RenderBox&ContainerRenderObjectMixin@349419958 implements RenderBoxContainerDefaultsMixin {

    _RenderStack&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@349419958 _RenderStack&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@349419958.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    double defaultComputeDistanceToHighestActualBaseline(DynamicType, DynamicType) {
        Code at absolute offset: 0x8ef5c
    }

    bool defaultHitTestChildren(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8ed90
    }

    VoidType defaultPaint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8eb08
    }
}

class _RenderStack&RenderBox&ContainerRenderObjectMixin@349419958 extends RenderBox implements ContainerRenderObjectMixin {

    _RenderStack&RenderBox&ContainerRenderObjectMixin@349419958 _RenderStack&RenderBox&ContainerRenderObjectMixin@349419958.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _insertIntoChildList@333266271(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8e5e8
    }

    VoidType insert(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x174368
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x8e332
    }

    VoidType _removeFromChildList@333266271(DynamicType, DynamicType) {
        Code at absolute offset: 0x8e3c8
    }

    VoidType remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x161dc4
    }

    VoidType move(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16d320
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x1272c8
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x126844
    }

    VoidType redepthChildren(DynamicType) {
        Code at absolute offset: 0x127bf0
    }

    VoidType visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0x106404
    }
}

class StackParentData extends ContainerBoxParentData {

    String toString(DynamicType) {
        Code at absolute offset: 0x152934
    }
}

class :: {
}

class RelativeRect extends Object {

    RelativeRect RelativeRect.fromSize(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8f208
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x185f40
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15b4c4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x15320c
    }
}

class StackFit extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class Overflow extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class Alignment extends AlignmentGeometry {

    double get:_x@265341779(DynamicType) {
        Code at absolute offset: 0x165720
    }

    AlignmentGeometry add(DynamicType, DynamicType) {
        Code at absolute offset: 0x8ff94
    }

    Alignment -(DynamicType, DynamicType) {
        Code at absolute offset: 0x8fea8
    }

    Alignment +(DynamicType, DynamicType) {
        Code at absolute offset: 0x8fdc0
    }

    Alignment *(DynamicType, DynamicType) {
        Code at absolute offset: 0x180418
    }

    Offset alongOffset(DynamicType, DynamicType) {
        Code at absolute offset: 0x8fbcc
    }

    Offset alongSize(DynamicType, DynamicType) {
        Code at absolute offset: 0x8fbcc
    }

    Offset withinRect(DynamicType, DynamicType) {
        Code at absolute offset: 0x91370
    }

    Alignment resolve(DynamicType, DynamicType) {
        Code at absolute offset: 0x13214c
    }

    String _stringify@265341779(DynamicType, DynamicType) {
        Code at absolute offset: 0x91040
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14e31c
    }
}

class _MixedAlignment@265341779 extends AlignmentGeometry {

    double get:_x@265341779(DynamicType) {
        Code at absolute offset: 0x165744
    }

    Alignment resolve(DynamicType, DynamicType) {
        Code at absolute offset: 0x18097c
    }
}

class AlignmentGeometry extends Object {

    AlignmentGeometry add(DynamicType, DynamicType) {
        Code at absolute offset: 0x8ffe4
    }

    AlignmentGeometry lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x90220
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14e3a4
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1833c0
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15ab60
    }
}

class AlignmentDirectional extends AlignmentGeometry {

    double get:_x@265341779(DynamicType) {
        Code at absolute offset: 0x165734
    }

    AlignmentGeometry add(DynamicType, DynamicType) {
        Code at absolute offset: 0x90b54
    }

    AlignmentDirectional -(DynamicType, DynamicType) {
        Code at absolute offset: 0x90a68
    }

    AlignmentDirectional +(DynamicType, DynamicType) {
        Code at absolute offset: 0x90980
    }

    AlignmentDirectional *(DynamicType, DynamicType) {
        Code at absolute offset: 0x18047c
    }

    AlignmentDirectional lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x906c4
    }

    Alignment resolve(DynamicType, DynamicType) {
        Code at absolute offset: 0x1808c0
    }

    String _stringify@265341779(DynamicType, DynamicType) {
        Code at absolute offset: 0x90ba4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14e360
    }
}

class :: {
}

class _PointerListener@397167661 extends SingleChildRenderObjectWidget {

    RenderPointerListener createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a0d0
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175ddc
    }
}

class RenderPointerListener extends RenderProxyBoxWithHitTestBehavior {

    RenderPointerListener RenderPointerListener.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcb4e0
    }

    VoidType performResize(DynamicType) {
        Code at absolute offset: 0xf7120
    }

    VoidType handleEvent(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x106e4c
    }
}

class RenderProxyBoxWithHitTestBehavior extends RenderProxyBox {

    RenderProxyBoxWithHitTestBehavior RenderProxyBoxWithHitTestBehavior.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc81e0
    }

    bool hitTest(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfc4ec
    }

    bool hitTestSelf(DynamicType, DynamicType) {
        Code at absolute offset: 0xf74c4
    }
}

class RenderProxyBox extends _RenderProxyBox&RenderBox&RenderObjectWithChildMixin&RenderProxyBoxMixin@337160605 {

    RenderProxyBox RenderProxyBox.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _RenderProxyBox&RenderBox&RenderObjectWithChildMixin&RenderProxyBoxMixin@337160605 extends _RenderShiftedBox&RenderBox&RenderObjectWithChildMixin@340204652 implements RenderProxyBoxMixin {

    _RenderProxyBox&RenderBox&RenderObjectWithChildMixin&RenderProxyBoxMixin@337160605 _RenderProxyBox&RenderBox&RenderObjectWithChildMixin&RenderProxyBoxMixin@337160605.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType setupParentData(DynamicType, DynamicType) {
        Code at absolute offset: 0xffbb8
    }

    double computeDistanceToActualBaseline(DynamicType, DynamicType) {
        Code at absolute offset: 0xf6cb4
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x101ee8
    }

    bool hitTestChildren(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf7730
    }

    VoidType applyPaintTransform(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb5bb0
    }
}

class _RenderShiftedBox&RenderBox&RenderObjectWithChildMixin@340204652 extends RenderBox implements RenderObjectWithChildMixin {

    _RenderShiftedBox&RenderBox&RenderObjectWithChildMixin@340204652 _RenderShiftedBox&RenderBox&RenderObjectWithChildMixin@340204652.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    RenderBox get:child(DynamicType) {
        Code at absolute offset: 0xc8464
    }

    VoidType set:child(DynamicType, DynamicType) {
        Code at absolute offset: 0xe56a8
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x126fb0
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x126648
    }

    VoidType redepthChildren(DynamicType) {
        Code at absolute offset: 0x1278dc
    }

    VoidType visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0x106058
    }
}

class :: {
}

class RenderAligningShiftedBox extends RenderShiftedBox {

    RenderAligningShiftedBox RenderAligningShiftedBox.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _resolve@340204652(DynamicType) {
        Code at absolute offset: 0x91c2c
    }

    VoidType _markNeedResolution@340204652(DynamicType) {
        Code at absolute offset: 0x91d30
    }

    VoidType set:alignment(DynamicType, DynamicType) {
        Code at absolute offset: 0x91d6c
    }

    VoidType set:textDirection(DynamicType, DynamicType) {
        Code at absolute offset: 0x91cc0
    }

    VoidType alignChild(DynamicType) {
        Code at absolute offset: 0x91ac0
    }
}

class RenderPadding extends RenderShiftedBox {

    RenderPadding RenderPadding.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x91f90
    }

    VoidType _resolve@340204652(DynamicType) {
        Code at absolute offset: 0x91efc
    }

    VoidType _markNeedResolution@340204652(DynamicType) {
        Code at absolute offset: 0x91d30
    }

    VoidType set:padding(DynamicType, DynamicType) {
        Code at absolute offset: 0x91e74
    }

    VoidType set:textDirection(DynamicType, DynamicType) {
        Code at absolute offset: 0x91e04
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x100c44
    }
}

class RenderCustomSingleChildLayoutBox extends RenderShiftedBox {

    RenderCustomSingleChildLayoutBox RenderCustomSingleChildLayoutBox.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc81e0
    }

    VoidType set:delegate(DynamicType, DynamicType) {
        Code at absolute offset: 0x9208c
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x126cec
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x126458
    }

    Size _getSize@340204652(DynamicType, DynamicType) {
        Code at absolute offset: 0x9203c
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x101118
    }
}

class _ToolbarContainerLayout@141187611 extends SingleChildLayoutDelegate {

    BoxConstraints getConstraintsForChild(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Size getSize(DynamicType, DynamicType) {
        Code at absolute offset: 0x17e2c4
    }

    Offset getPositionForChild(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool shouldRelayout(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
}

class _AppBarTitleBox@141187611 extends SingleChildRenderObjectWidget {

    _RenderAppBarTitleBox@141187611 createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169a08
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1751cc
    }
}

class _RenderAppBarTitleBox@141187611 extends RenderAligningShiftedBox {

    _RenderAppBarTitleBox@141187611 _RenderAppBarTitleBox@141187611.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x92268
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x1002b0
    }
}

class AppBar extends StatefulWidget implements PreferredSizeWidget {

    AppBar AppBar.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x923c0
    }

    bool _getEffectiveCenterTitle@141187611(DynamicType, DynamicType) {
        Code at absolute offset: 0x9232c
    }

    _AppBarState@141187611 createState(DynamicType) {
        Code at absolute offset: 0x13dda4
    }
}

class PreferredSizeWidget extends Object implements Widget {
}

class :: {
}

class _AppBarState@141187611 extends State {

    VoidType _handleDrawerButton@141187611(DynamicType) {
        Code at absolute offset: 0x9a5dc
    }

    VoidType _handleDrawerButtonEnd@141187611(DynamicType) {
        Code at absolute offset: 0x927e4
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xef780
    }

    DynamicType get:_handleDrawerButton@141187611(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleDrawerButtonEnd@141187611(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class TickerFuture extends Object implements Future {

    TickerFuture TickerFuture._@362494659(DynamicType) {
        Code at absolute offset: 0xdd5f8
    }

    TickerFuture TickerFuture.complete(DynamicType) {
        Code at absolute offset: 0x9321c
    }

    VoidType _complete@362494659(DynamicType) {
        Code at absolute offset: 0x92db8
    }

    VoidType _cancel@362494659(DynamicType, DynamicType) {
        Code at absolute offset: 0x932d8
    }

    VoidType whenCompleteOrCancel(DynamicType, DynamicType) {
        Code at absolute offset: 0x93194
    }

    Future get:orCancel(DynamicType) {
        Code at absolute offset: 0x93070
    }

    Future then(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16fd68
    }

    Future whenComplete(DynamicType, DynamicType) {
        Code at absolute offset: 0x168838
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x153560
    }
}

class :: {
}

class TickerCanceled extends Object implements Exception {

    String toString(DynamicType) {
        Code at absolute offset: 0x153610
    }
}

class TickerProvider extends Object {
}

class Ticker extends Object {

    VoidType set:muted(DynamicType, DynamicType) {
        Code at absolute offset: 0x92ff4
    }

    TickerFuture start(DynamicType) {
        Code at absolute offset: 0x3d178
    }

    VoidType stop(DynamicType, DynamicType) {
        Code at absolute offset: 0x92ccc
    }

    bool get:shouldScheduleTick(DynamicType) {
        Code at absolute offset: 0xdd598
    }

    VoidType _tick@362494659(DynamicType, DynamicType) {
        Code at absolute offset: 0x92edc
    }

    VoidType scheduleTick(DynamicType, DynamicType) {
        Code at absolute offset: 0x3d28c
    }

    VoidType unscheduleTick(DynamicType) {
        Code at absolute offset: 0x9334c
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x186064
    }

    String toString(DynamicType, DynamicType) {
        Code at absolute offset: 0x1534d0
    }

    DynamicType get:_tick@362494659(DynamicType) {
        Code at absolute offset: 0x185f28
    }
}

class DrawerControllerState extends _DrawerControllerState&State&SingleTickerProviderStateMixin@178517151 {

    VoidType _animationChanged@178517151(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _handleHistoryEntryRemoved@178517151(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _handleDragCancel@178517151(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType open(DynamicType) {
        Code at absolute offset: 0x928f4
    }

    VoidType close(DynamicType) {
        Code at absolute offset: 0x93660
    }
}

class DrawerController extends StatefulWidget {
}

class _DrawerControllerState&State&SingleTickerProviderStateMixin@178517151 extends State implements SingleTickerProviderStateMixin {

    Ticker createTicker(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class SingleTickerProviderStateMixin<T> extends State implements TickerProvider {
}

class :: {
}

class TickerMode extends StatelessWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415bc
    }

    bool of(DynamicType) {
        Code at absolute offset: 0x93448
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xec830
    }
}

class TickerProviderStateMixin<T> extends State implements TickerProvider {
}

class _WidgetTicker@410311458 extends Ticker {

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _EffectiveTickerMode@410311458 extends InheritedWidget {

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x144240
    }
}

class :: {
}

class DrawerAlignment extends Object {
}

class ScaffoldState extends _ScaffoldState&State&TickerProviderStateMixin@229420462 {

    ScaffoldState ScaffoldState.(DynamicType) {
        Code at absolute offset: 0x981bc
    }

    bool get:hasDrawer(DynamicType) {
        Code at absolute offset: 0x97170
    }

    bool get:hasEndDrawer(DynamicType) {
        Code at absolute offset: 0x97170
    }

    VoidType openDrawer(DynamicType) {
        Code at absolute offset: 0x97088
    }

    VoidType openEndDrawer(DynamicType) {
        Code at absolute offset: 0x92838
    }

    VoidType hideCurrentSnackBar(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _maybeBuildPersistentBottomSheet@229420462(DynamicType) {
        Code at absolute offset: 0x983b8
    }

    VoidType _handleStatusBarTap@229420462(DynamicType) {
        Code at absolute offset: 0x9719c
    }

    bool get:_resizeToAvoidBottomInset@229420462(DynamicType) {
        Code at absolute offset: 0x983f4
    }

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12b608
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf5580
    }

    VoidType didChangeDependencies(DynamicType) {
        Code at absolute offset: 0xf691c
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xee61c
    }

    VoidType _addIfNonNull@229420462(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x98420
    }

    VoidType _buildEndDrawer@229420462(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x97144
    }

    VoidType _buildDrawer@229420462(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x97144
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf1e10
    }

    DynamicType get:_handleStatusBarTap@229420462(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class Scaffold extends StatefulWidget {

    ScaffoldState of(DynamicType, DynamicType) {
        Code at absolute offset: 0x9a040
    }

    ScaffoldState createState(DynamicType) {
        Code at absolute offset: 0x13df08
    }
}

class _ScaffoldState&State&TickerProviderStateMixin@229420462 extends State implements TickerProviderStateMixin {

    Ticker createTicker(DynamicType, DynamicType) {
        Code at absolute offset: 0x1355ac
    }

    VoidType _removeTicker@410311458(DynamicType, DynamicType) {
        Code at absolute offset: 0x1740d8
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeDependencies(DynamicType) {
        Code at absolute offset: 0x939c8
    }
}

class :: {
}

class _ScaffoldGeometryNotifier@229420462 extends ChangeNotifier implements ValueListenable {

    _ScaffoldGeometryNotifier@229420462 _ScaffoldGeometryNotifier@229420462.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    ScaffoldGeometry get:value(DynamicType) {
        Code at absolute offset: 0x136fce
    }

    VoidType _updateWith@229420462(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x93ad4
    }
}

class ScaffoldFeatureController<T, U> extends Object {
}

class _BodyBoxConstraints@229420462 extends BoxConstraints {

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x185104
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15b364
    }
}

class ScaffoldGeometry extends Object {

    ScaffoldGeometry _scaleFloatingActionButton@229420462(DynamicType, DynamicType) {
        Code at absolute offset: 0x93d28
    }

    ScaffoldGeometry copyWith(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x93c30
    }
}

class __FloatingActionButtonTransitionState&State&TickerProviderStateMixin@229420462 extends State implements TickerProviderStateMixin {

    Ticker createTicker(DynamicType, DynamicType) {
        Code at absolute offset: 0x1355ac
    }

    VoidType _removeTicker@410311458(DynamicType, DynamicType) {
        Code at absolute offset: 0x1740d8
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeDependencies(DynamicType) {
        Code at absolute offset: 0x939c8
    }
}

class _ScaffoldScope@229420462 extends InheritedWidget {

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x143c38
    }
}

class _StandardBottomSheet@229420462 extends StatefulWidget {
}

class _BodyBuilder@229420462 extends StatelessWidget {

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xeac58
    }
}

class ScaffoldPrelayoutGeometry extends Object {
}

class _FloatingActionButtonTransition@229420462 extends StatefulWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    _FloatingActionButtonTransitionState@229420462 createState(DynamicType) {
        Code at absolute offset: 0x13def0
    }
}

class _ScaffoldLayout@229420462 extends MultiChildLayoutDelegate {

    _ScaffoldLayout@229420462 _ScaffoldLayout@229420462.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x952f4
    }

    VoidType performLayout(DynamicType, DynamicType) {
        Code at absolute offset: 0x1816a4
    }

    bool shouldRelayout(DynamicType, DynamicType) {
        Code at absolute offset: 0x1814cc
    }
}

class MultiChildLayoutDelegate extends Object {

    bool hasChild(DynamicType, DynamicType) {
        Code at absolute offset: 0x95268
    }

    Size layoutChild(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x951ac
    }

    VoidType positionChild(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x950b0
    }

    VoidType _callPerformLayout@319472081(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x94ed4
    }

    Size getSize(DynamicType, DynamicType) {
        Code at absolute offset: 0x93efc
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14e210
    }
}

class :: {
}

class MultiChildLayoutParentData extends ContainerBoxParentData {

    String toString(DynamicType) {
        Code at absolute offset: 0x15252c
    }
}

class RenderCustomMultiChildLayoutBox extends _RenderCustomMultiChildLayoutBox&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@319472081 {

    RenderCustomMultiChildLayoutBox RenderCustomMultiChildLayoutBox.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x94094
    }

    VoidType setupParentData(DynamicType, DynamicType) {
        Code at absolute offset: 0xffc94
    }

    VoidType set:delegate(DynamicType, DynamicType) {
        Code at absolute offset: 0x93f24
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x12717c
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x126780
    }

    Size _getSize@319472081(DynamicType, DynamicType) {
        Code at absolute offset: 0x93ebc
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x104538
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfe6b0
    }

    bool hitTestChildren(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf7bb8
    }
}

class _ToolbarLayout@495023576 extends MultiChildLayoutDelegate {

    VoidType performLayout(DynamicType, DynamicType) {
        Code at absolute offset: 0x182994
    }

    bool shouldRelayout(DynamicType, DynamicType) {
        Code at absolute offset: 0x1815f4
    }
}

class :: {
}

class _ToolbarSlot@495023576 extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class NavigationToolbar extends StatelessWidget {

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xebf20
    }
}

class _RenderCustomMultiChildLayoutBox&RenderBox&ContainerRenderObjectMixin@319472081 extends RenderBox implements ContainerRenderObjectMixin {

    _RenderCustomMultiChildLayoutBox&RenderBox&ContainerRenderObjectMixin@319472081 _RenderCustomMultiChildLayoutBox&RenderBox&ContainerRenderObjectMixin@319472081.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _insertIntoChildList@333266271(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x94578
    }

    VoidType insert(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x174120
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x94112
    }

    VoidType _removeFromChildList@333266271(DynamicType, DynamicType) {
        Code at absolute offset: 0x94358
    }

    VoidType remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x161cc4
    }

    VoidType move(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16cf98
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x94274
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x94198
    }

    VoidType redepthChildren(DynamicType) {
        Code at absolute offset: 0x127a10
    }

    VoidType visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0x10622c
    }
}

class _RenderCustomMultiChildLayoutBox&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@319472081 extends _RenderCustomMultiChildLayoutBox&RenderBox&ContainerRenderObjectMixin@319472081 implements RenderBoxContainerDefaultsMixin {

    _RenderCustomMultiChildLayoutBox&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@319472081 _RenderCustomMultiChildLayoutBox&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@319472081.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool defaultHitTestChildren(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x94d08
    }

    VoidType defaultPaint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x94a98
    }
}

class _ScaffoldSlot@229420462 extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class _FloatingActionButtonTransitionState@229420462 extends __FloatingActionButtonTransitionState&State&TickerProviderStateMixin@229420462 {
    Animatable _entranceTurnTween@229420462

    Animatable get:_entranceTurnTween@229420462() {
        Code at absolute offset: 0xfaa0
    }

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12b50c
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xee5cc
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf5294
    }

    VoidType _updateAnimations@229420462(DynamicType) {
        Code at absolute offset: 0x95910
    }

    VoidType _handlePreviousAnimationStatusChanged@229420462(DynamicType, DynamicType) {
        Code at absolute offset: 0x95830
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf1b54
    }

    VoidType _onProgressChanged@229420462(DynamicType) {
        Code at absolute offset: 0x955e4
    }

    VoidType _updateGeometryScale@229420462(DynamicType, DynamicType) {
        Code at absolute offset: 0x9572c
    }

    DynamicType get:_handlePreviousAnimationStatusChanged@229420462(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_onProgressChanged@229420462(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _ChainedEvaluation@51105126<T> extends Animatable {

    T transform(DynamicType, DynamicType) {
        Code at absolute offset: 0x14339c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14a09c
    }
}

class Animatable<T> extends Object {

    T evaluate(DynamicType, DynamicType) {
        Code at absolute offset: 0x95520
    }

    Animation animate(DynamicType, DynamicType) {
        Code at absolute offset: 0x3c304
    }

    Animatable chain(DynamicType, DynamicType) {
        Code at absolute offset: 0x954e8
    }
}

class CurveTween extends Animatable {

    double transform(DynamicType, DynamicType) {
        Code at absolute offset: 0x1434a0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14b9e4
    }
}

class Tween<T> extends Animatable {

    VoidType set:begin(DynamicType, DynamicType) {
        Code at absolute offset: 0x1672f4
    }

    VoidType set:end(DynamicType, DynamicType) {
        Code at absolute offset: 0x15e518
    }

    T lerp(DynamicType, DynamicType) {
        Code at absolute offset: 0x1574cc
    }

    T transform(DynamicType, DynamicType) {
        Code at absolute offset: 0x1433f4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14b96c
    }
}

class _AnimationSwap@191063916<T> extends CompoundAnimation {

    _AnimationSwap@191063916 _AnimationSwap@191063916.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    T get:value(DynamicType) {
        Code at absolute offset: 0x134f62
    }
}

class :: {
}

class FabFloatOffsetY extends StandardFabLocation {
}

class StandardFabLocation extends FloatingActionButtonLocation {

    Offset getOffset(DynamicType, DynamicType) {
        Code at absolute offset: 0x17fc54
    }

    double _rightOffsetX@191063916(DynamicType, DynamicType) {
        Code at absolute offset: 0x96508
    }
}

class FabEndOffsetX extends StandardFabLocation {
}

class __EndTopFabLocation&StandardFabLocation&FabEndOffsetX@191063916 extends StandardFabLocation implements FabEndOffsetX {

    double getOffsetX(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x965c8
    }
}

class FloatingActionButtonLocation extends Object {
}

class _ScalingFabMotionAnimator@191063916 extends FloatingActionButtonAnimator {
    Animatable _rotationTween@191063916
    Animatable _thresholdCenterTween@191063916

    Animatable get:_rotationTween@191063916() {
        Code at absolute offset: 0xfaa0
    }

    Animatable get:_thresholdCenterTween@191063916() {
        Code at absolute offset: 0xfaa0
    }

    Animation getScaleAnimation(DynamicType, DynamicType) {
        Code at absolute offset: 0x96c54
    }

    Animation getRotationAnimation(DynamicType, DynamicType) {
        Code at absolute offset: 0x962f0
    }
}

class FloatingActionButtonAnimator extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x14d360
    }
}

class _EndFloatFabLocation@191063916 extends __EndFloatFabLocation&StandardFabLocation&FabEndOffsetX&FabFloatOffsetY@191063916 {

    String toString(DynamicType) {
        Code at absolute offset: 0x14d350
    }
}

class __EndFloatFabLocation&StandardFabLocation&FabEndOffsetX&FabFloatOffsetY@191063916 extends __EndTopFabLocation&StandardFabLocation&FabEndOffsetX@191063916 implements FabFloatOffsetY {

    double getOffsetY(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x967f0
    }
}

class ScrollController extends ChangeNotifier {

    ScrollController ScrollController.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x98048
    }

    bool get:hasClients(DynamicType) {
        Code at absolute offset: 0x98134
    }

    ScrollPosition get:position(DynamicType) {
        Code at absolute offset: 0x97fec
    }

    double get:offset(DynamicType) {
        Code at absolute offset: 0x97fa0
    }

    Future animateTo(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x97214
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14bf50
    }

    VoidType debugFillDescription(DynamicType, DynamicType) {
        Code at absolute offset: 0x97cc0
    }
}

class :: {
}

class ScrollPosition extends _ScrollPosition&ViewportOffset&ScrollMetrics@472085019 {
}

class _ScrollPosition&ViewportOffset&ScrollMetrics@472085019 extends ViewportOffset implements ScrollMetrics {
}

class ViewportOffset extends ChangeNotifier {
}

class :: {
}

class ScrollMetrics extends Object {
}

class :: {
}

class :: {
}

class ScrollPositionAlignmentPolicy extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class MediaQuery extends InheritedWidget {

    MediaQuery MediaQuery.removePadding(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x98e28
    }

    MediaQueryData of(DynamicType, DynamicType) {
        Code at absolute offset: 0x99d70
    }

    double textScaleFactorOf(DynamicType) {
        Code at absolute offset: 0x98d6c
    }

    Brightness platformBrightnessOf(DynamicType) {
        Code at absolute offset: 0x98cfc
    }

    bool highContrastOf(DynamicType) {
        Code at absolute offset: 0x98c8c
    }

    bool boldTextOverride(DynamicType) {
        Code at absolute offset: 0x98c1c
    }

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x143f1c
    }
}

class :: {
}

class MediaQueryData extends Object {

    MediaQueryData MediaQueryData.fromWindow(DynamicType, DynamicType) {
        Code at absolute offset: 0x988fc
    }

    MediaQueryData copyWith(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x98ed4
    }

    MediaQueryData removePadding(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x99534
    }

    MediaQueryData removeViewInsets(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x99260
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x187408
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15b810
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x154abc
    }
}

class NavigationMode extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class _TooltipPositionDelegate@260220820 extends SingleChildLayoutDelegate {

    BoxConstraints getConstraintsForChild(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Offset getPositionForChild(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool shouldRelayout(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
}

class __TooltipState&State&SingleTickerProviderStateMixin@260220820 extends State implements SingleTickerProviderStateMixin {

    Ticker createTicker(DynamicType, DynamicType) {
        Code at absolute offset: 0x1356b0
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeDependencies(DynamicType) {
        Code at absolute offset: 0xf68c0
    }
}

class Tooltip extends StatefulWidget {

    String get:message(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x9a680
    }

    _TooltipState@260220820 createState(DynamicType) {
        Code at absolute offset: 0x13df44
    }
}

class _TooltipOverlay@260220820 extends StatelessWidget {

    String get:message(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xead4c
    }
}

class _TooltipState@260220820 extends __TooltipState&State&SingleTickerProviderStateMixin@260220820 {

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12b7a0
    }

    VoidType _handleMouseTrackerChange@260220820(DynamicType) {
        Code at absolute offset: 0xc7fb8
    }

    VoidType _handleStatusChanged@260220820(DynamicType, DynamicType) {
        Code at absolute offset: 0xc7ed0
    }

    VoidType _hideTooltip@260220820(DynamicType, DynamicType) {
        Code at absolute offset: 0xc7c3c
    }

    VoidType _showTooltip@260220820(DynamicType, DynamicType) {
        Code at absolute offset: 0xc8110
    }

    bool ensureTooltipVisible(DynamicType) {
        Code at absolute offset: 0xc747c
    }

    VoidType _createNewEntry@260220820(DynamicType) {
        Code at absolute offset: 0xc7564
    }

    VoidType _removeEntry@260220820(DynamicType) {
        Code at absolute offset: 0xc7dd8
    }

    VoidType _handlePointerEvent@260220820(DynamicType, DynamicType) {
        Code at absolute offset: 0xc7b98
    }

    VoidType deactivate(DynamicType) {
        Code at absolute offset: 0xef3e0
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xee830
    }

    VoidType _handleLongPress@260220820(DynamicType) {
        Code at absolute offset: 0x9a6ac
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf2bcc
    }

    DynamicType get:_handleMouseTrackerChange@260220820(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleStatusChanged@260220820(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:ensureTooltipVisible(DynamicType) {
        Code at absolute offset: 0x176920
    }

    DynamicType get:_handlePointerEvent@260220820(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleLongPress@260220820(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class HapticFeedback extends Object {

    Future vibrate() {
        Code at absolute offset: 0x9a890
    }
}

class :: {
}

class _FifoCache@253408314<K, V> extends Object {

    _FifoCache@253408314 _FifoCache@253408314.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    V putIfAbsent(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9ac64
    }
}

class :: {
}

class MaterialTapTargetSize extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class ThemeData extends _State&Object&Diagnosticable@398042623 {
    _FifoCache@253408314 _localizedThemeDataCache@253408314

    _FifoCache@253408314 get:_localizedThemeDataCache@253408314() {
        Code at absolute offset: 0xfaa0
    }

    ThemeData ThemeData.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xbc200
    }

    ThemeData ThemeData.light(DynamicType) {
        Code at absolute offset: 0xbc1c4
    }

    ThemeData ThemeData.fallback(DynamicType) {
        Code at absolute offset: 0xbc198
    }

    ThemeData copyWith(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc5ef0
    }

    ThemeData localize(DynamicType, DynamicType) {
        Code at absolute offset: 0x9ab7c
    }

    Brightness estimateBrightnessForColor(DynamicType) {
        Code at absolute offset: 0xa3b14
    }

    ThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9ae4c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17cd24
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x1596b0
    }
}

class DataTableThemeData extends _State&Object&Diagnosticable@398042623 {

    DataTableThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9bf64
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158ee0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17b3b8
    }

    MaterialStateProperty _lerpProperties@172332636(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9f75c
    }
}

class :: {
}

class _LerpProperties@172332636<T> extends Object implements MaterialStateProperty {
}

class TextStyle extends _DiagnosticableTree&Object&Diagnosticable@99198569 {

    List get:fontFamilyFallback(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    TextStyle copyWith(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9eea8
    }

    TextStyle merge(DynamicType, DynamicType) {
        Code at absolute offset: 0x9ed84
    }

    TextStyle lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9c1d4
    }

    TextStyle getTextStyle(DynamicType, DynamicType) {
        Code at absolute offset: 0x9eac0
    }

    ParagraphStyle getParagraphStyle(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9e730
    }

    RenderComparison compareTo(DynamicType, DynamicType) {
        Code at absolute offset: 0x9d0e0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17eee8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x159e78
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x13d7ec
    }
}

class :: {
}

class :: {

    bool setEquals(DynamicType, DynamicType) {
        Code at absolute offset: 0x9e594
    }

    bool listEquals(DynamicType, DynamicType) {
        Code at absolute offset: 0x9d440
    }

    bool mapEquals(DynamicType, DynamicType) {
        Code at absolute offset: 0x9db88
    }

    VoidType mergeSort(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9ddc8
    }

    _Closure@0150898 _defaultCompare@95414040() {
        Code at absolute offset: 0xfaa0
    }

    VoidType _insertionSort@95414040(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9d95c
    }

    VoidType _movingInsertionSort@95414040(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9d664
    }

    VoidType _mergeSort@95414040(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9e438
    }

    VoidType _merge@95414040(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9dfec
    }
}

class RenderComparison extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class :: {
}

class AxisDirection extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class Axis extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class VerticalDirection extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class TextSelectionThemeData extends _State&Object&Diagnosticable@398042623 {

    TextSelectionThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9f7f0
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x1595b0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17c910
    }
}

class :: {
}

class OutlinedButtonThemeData extends _State&Object&Diagnosticable@398042623 {

    OutlinedButtonThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9f9c4
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158fd0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17be78
    }
}

class :: {
}

class ButtonStyle extends _State&Object&Diagnosticable@398042623 {

    ButtonStyle lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9fa94
    }
}

class :: {
}

class ElevatedButtonThemeData extends _State&Object&Diagnosticable@398042623 {

    ElevatedButtonThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9fc08
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158fd0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17b890
    }
}

class :: {
}

class TextButtonThemeData extends _State&Object&Diagnosticable@398042623 {

    TextButtonThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9fcd8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158fd0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17c840
    }
}

class :: {
}

class TimePickerThemeData extends _State&Object&Diagnosticable@398042623 {

    TimePickerThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x9fda8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x159acc
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17d980
    }
}

class :: {
}

class BorderSide extends Object {

    BorderSide merge(DynamicType, DynamicType) {
        Code at absolute offset: 0xa1adc
    }

    BorderSide scale(DynamicType, DynamicType) {
        Code at absolute offset: 0xa19f8
    }

    Paint toPaint(DynamicType) {
        Code at absolute offset: 0xa16e8
    }

    bool canMerge(DynamicType, DynamicType) {
        Code at absolute offset: 0xa15c8
    }

    BorderSide lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa011c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1802b8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15a844
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14d204
    }
}

class BorderStyle extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class :: {

    VoidType paintBorder(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa0424
    }
}

class ShapeBorder extends Object {

    ShapeBorder add(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    ShapeBorder +(DynamicType, DynamicType) {
        Code at absolute offset: 0xa1380
    }

    ShapeBorder lerpFrom(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x163464
    }

    ShapeBorder lerpTo(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x168770
    }

    ShapeBorder lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa14cc
    }
}

class OutlinedBorder extends ShapeBorder {
}

class BottomNavigationBarThemeData extends _State&Object&Diagnosticable@398042623 {

    BottomNavigationBarThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa1c04
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158988
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17a340
    }
}

class :: {
}

class ButtonBarThemeData extends _State&Object&Diagnosticable@398042623 {

    ButtonBarThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa1e04
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158a7c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17a6bc
    }
}

class :: {
}

class DividerThemeData extends _State&Object&Diagnosticable@398042623 {

    DividerThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa215c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158f6c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17b70c
    }
}

class :: {
}

class MaterialBannerThemeData extends _State&Object&Diagnosticable@398042623 {

    MaterialBannerThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa22c0
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x1576c0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17a0e0
    }
}

class :: {
}

class PopupMenuThemeData extends _State&Object&Diagnosticable@398042623 {

    PopupMenuThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa23f8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x1592d8
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17c078
    }
}

class :: {
}

class BottomSheetThemeData extends _State&Object&Diagnosticable@398042623 {

    BottomSheetThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa25cc
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158a10
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17a558
    }
}

class :: {
}

class SnackBarThemeData extends _State&Object&Diagnosticable@398042623 {

    SnackBarThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa2808
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x1594d0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17c52c
    }
}

class :: {
}

class SnackBarBehavior extends Object {
}

class Typography extends _State&Object&Diagnosticable@398042623 {

    Typography Typography.material2014(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa2bac
    }

    Typography Typography._withPlatform@262382893(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa2ab4
    }

    Typography lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa296c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17e14c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158f6c
    }
}

class :: {
}

class ScriptCategory extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class NavigationRailThemeData extends _State&Object&Diagnosticable@398042623 {

    NavigationRailThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa2c88
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x159214
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17bc8c
    }
}

class :: {
}

class FloatingActionButtonThemeData extends _State&Object&Diagnosticable@398042623 {

    FloatingActionButtonThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa300c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x159010
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17b960
    }
}

class :: {
}

class DialogTheme extends _State&Object&Diagnosticable@398042623 {

    DialogTheme lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa34a8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158f5c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17b5b8
    }
}

class :: {
}

class ColorScheme extends _State&Object&Diagnosticable@398042623 {

    ColorScheme ColorScheme.fromSwatch(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa3b90
    }

    Brightness _brightnessFor@166049969(DynamicType) {
        Code at absolute offset: 0xa3aec
    }

    ColorScheme copyWith(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa3884
    }

    ColorScheme lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa35e0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17b038
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158e38
    }
}

class :: {
}

class _ImmutableMap@0150898<K, V> extends Object implements Map {

    _ImmutableMap@0150898 _ImmutableMap@0150898._create@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x11ae8
    }

    V [](DynamicType, DynamicType) {
        Code at absolute offset: 0x131da6
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x12e738
    }

    bool get:isNotEmpty(DynamicType) {
        Code at absolute offset: 0x13395c
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x1329ac
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x12eb90
    }

    Iterable get:keys(DynamicType) {
        Code at absolute offset: 0x123298
    }

    Iterable get:values(DynamicType) {
        Code at absolute offset: 0x1606c4
    }

    bool containsKey(DynamicType, DynamicType) {
        Code at absolute offset: 0x13d5c4
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x123798
    }

    V remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x12cbac
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x140b94
    }
}

class Intent extends _State&Object&Diagnosticable@398042623 {
}

class :: {

    BuildContext _getParent@425441002(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class CallbackAction<T> extends Action {

    CallbackAction CallbackAction.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Object invoke(DynamicType, DynamicType) {
        Code at absolute offset: 0x17717c
    }
}

class Actions extends StatefulWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xa451c
    }

    bool _visitActionsAncestors@425441002(DynamicType, DynamicType) {
        Code at absolute offset: 0xa437c
    }

    ActionDispatcher _findDispatcher@425441002(DynamicType) {
        Code at absolute offset: 0xa4318
    }

    Object invoke(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa4044
    }

    State createState(DynamicType) {
        Code at absolute offset: 0x13df68
    }
}

class DoNothingIntent extends Intent {
}

class DismissAction extends Action {

    DismissAction DismissAction.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _ActionsState@425441002 extends State {

    _ActionsState@425441002 _ActionsState@425441002.(DynamicType) {
        Code at absolute offset: 0xa48c0
    }

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12b9b8
    }

    VoidType _handleActionChanged@425441002(DynamicType, DynamicType) {
        Code at absolute offset: 0xa45e8
    }

    VoidType _updateActionListeners@425441002(DynamicType) {
        Code at absolute offset: 0xa46b0
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf5630
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xee97c
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf3058
    }

    DynamicType get:_handleActionChanged@425441002(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class Action<T> extends _State&Object&Diagnosticable@398042623 {

    Action Action.(DynamicType) {
        Code at absolute offset: 0xa4958
    }

    bool isEnabled(DynamicType, DynamicType) {
        Code at absolute offset: 0x15b62c
    }

    VoidType addActionListener(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType removeActionListener(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class DoNothingAction extends Action {

    DoNothingAction DoNothingAction.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType invoke(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class ActionDispatcher extends _State&Object&Diagnosticable@398042623 {

    Object invokeAction(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa416c
    }
}

class ActivateIntent extends Intent {
}

class ContextAction<T> extends Action {
}

class DismissIntent extends Intent {
}

class _ActionsMarker@425441002 extends InheritedWidget {

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x143cc0
    }
}

class LogicalKeySet extends _LogicalKeySet&KeySet&Diagnosticable@428043213 {

    LogicalKeySet LogicalKeySet.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    LogicalKeySet LogicalKeySet.fromSet(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _LogicalKeySet&KeySet&Diagnosticable@428043213 extends KeySet implements Diagnosticable {

    _LogicalKeySet&KeySet&Diagnosticable@428043213 _LogicalKeySet&KeySet&Diagnosticable@428043213.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _LogicalKeySet&KeySet&Diagnosticable@428043213 _LogicalKeySet&KeySet&Diagnosticable@428043213.fromSet(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String toString(DynamicType, DynamicType) {
        Code at absolute offset: 0x1552dc
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x76a5c
    }
}

class KeySet<T> extends Object {
    List _tempHashStore3@428043213
    List _tempHashStore4@428043213

    List get:_tempHashStore3@428043213() {
        Code at absolute offset: 0xfaa0
    }

    List get:_tempHashStore4@428043213() {
        Code at absolute offset: 0xfaa0
    }

    KeySet KeySet.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa4b24
    }

    KeySet KeySet.fromSet(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Set get:keys(DynamicType) {
        Code at absolute offset: 0xa4af8
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1879a4
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15c42c
    }
}

class :: {
}

class _ShortcutsMarker@428043213 extends InheritedNotifier {
}

class ShortcutManager extends _ShortcutManager&ChangeNotifier&Diagnosticable@428043213 {

    ShortcutManager ShortcutManager.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:shortcuts(DynamicType, DynamicType) {
        Code at absolute offset: 0xa50b8
    }

    bool handleKeypress(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa4c3c
    }
}

class _HashSetIterator@3220832<E> extends Object implements Iterator {

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xe44bc
    }

    E get:current(DynamicType) {
        Code at absolute offset: 0xe4654
    }
}

class Shortcuts extends StatefulWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xa451c
    }

    _ShortcutsState@428043213 createState(DynamicType) {
        Code at absolute offset: 0x13e280
    }
}

class _ShortcutsState@428043213 extends State {

    ShortcutManager get:manager(DynamicType) {
        Code at absolute offset: 0xa5354
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xef120
    }

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12c754
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf65cc
    }

    bool _handleOnKey@428043213(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa5270
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf4964
    }

    DynamicType get:_handleOnKey@428043213(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _ShortcutManager&ChangeNotifier&Diagnosticable@428043213 extends ChangeNotifier implements Diagnosticable {

    _ShortcutManager&ChangeNotifier&Diagnosticable@428043213 _ShortcutManager&ChangeNotifier&Diagnosticable@428043213.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String toString(DynamicType, DynamicType) {
        Code at absolute offset: 0x14c024
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x76a5c
    }
}

class MaterialApp extends StatefulWidget {

    _MaterialAppState@140125171 createState(DynamicType) {
        Code at absolute offset: 0x13dd8c
    }

    HeroController createMaterialHeroController() {
        Code at absolute offset: 0xc2748
    }
}

class :: {
}

class _MaterialScrollBehavior@140125171 extends ScrollBehavior {
}

class ScrollBehavior extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x14d1f4
    }
}

class :: {
}

class ScrollConfiguration extends InheritedWidget {

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x144170
    }
}

class _MaterialAppState@140125171 extends State {

    bool get:_usesRouter@140125171(DynamicType) {
        Code at absolute offset: 0x97170
    }

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12b1f4
    }

    Iterable get:_localizationsDelegates@140125171(DynamicType) {
        Code at absolute offset: 0xc26e0
    }

    Widget _inspectorSelectButtonBuilder@140125171(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xbdac4
    }

    Widget _materialBuilder@140125171(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa550c
    }

    Widget _buildWidgetApp@140125171(DynamicType, DynamicType) {
        Code at absolute offset: 0xbdb38
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xef704
    }

    DynamicType get:_inspectorSelectButtonBuilder@140125171(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_materialBuilder@140125171(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class AnimatedTheme extends ImplicitlyAnimatedWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xbd9e8
    }

    _AnimatedThemeState@252067045 createState(DynamicType) {
        Code at absolute offset: 0x13dea8
    }
}

class ImplicitlyAnimatedWidget extends StatefulWidget {
}

class :: {
}

class _AnimatedPhysicalModelState@412443363 extends AnimatedWidgetBaseState {

    VoidType forEachTween(DynamicType, DynamicType) {
        Code at absolute offset: 0x1703b4
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf1a28
    }
}

class BorderRadiusTween extends Tween {

    BorderRadius lerp(DynamicType, DynamicType) {
        Code at absolute offset: 0x15745c
    }
}

class BorderRadius extends BorderRadiusGeometry {

    BorderRadius BorderRadius.circular(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Radius get:_topLeft@269070249(DynamicType) {
        Code at absolute offset: 0x13a1d8
    }

    RRect toRRect(DynamicType, DynamicType) {
        Code at absolute offset: 0xa5f08
    }

    BorderRadiusGeometry subtract(DynamicType, DynamicType) {
        Code at absolute offset: 0x17e3c4
    }

    BorderRadiusGeometry add(DynamicType, DynamicType) {
        Code at absolute offset: 0x1804e0
    }

    BorderRadius -(DynamicType, DynamicType) {
        Code at absolute offset: 0xa590c
    }

    BorderRadius +(DynamicType, DynamicType) {
        Code at absolute offset: 0xa57b4
    }

    BorderRadius *(DynamicType, DynamicType) {
        Code at absolute offset: 0x16e45c
    }

    BorderRadius lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa5d08
    }

    BorderRadius resolve(DynamicType, DynamicType) {
        Code at absolute offset: 0x13214c
    }
}

class BorderRadiusGeometry extends Object {

    BorderRadiusGeometry subtract(DynamicType, DynamicType) {
        Code at absolute offset: 0x17e414
    }

    BorderRadiusGeometry add(DynamicType, DynamicType) {
        Code at absolute offset: 0x180530
    }

    BorderRadiusGeometry lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa5aec
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14e688
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1835b0
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15ad3c
    }
}

class :: {
}

class _MixedBorderRadius@269070249 extends BorderRadiusGeometry {

    Radius get:_topLeft@269070249(DynamicType) {
        Code at absolute offset: 0xe3bfc
    }

    _MixedBorderRadius@269070249 *(DynamicType, DynamicType) {
        Code at absolute offset: 0x16e50c
    }

    BorderRadius resolve(DynamicType, DynamicType) {
        Code at absolute offset: 0x17e7ac
    }
}

class TextStyleTween extends Tween {

    TextStyle lerp(DynamicType, DynamicType) {
        Code at absolute offset: 0x157494
    }
}

class AnimatedWidgetBaseState<T> extends ImplicitlyAnimatedWidgetState {

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12b480
    }

    VoidType _handleAnimationChanged@412443363(DynamicType) {
        Code at absolute offset: 0xa6034
    }

    DynamicType get:_handleAnimationChanged@412443363(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class AnimatedPhysicalModel extends ImplicitlyAnimatedWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x36838
    }

    _AnimatedPhysicalModelState@412443363 createState(DynamicType) {
        Code at absolute offset: 0x13ded8
    }
}

class AnimatedDefaultTextStyle extends ImplicitlyAnimatedWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x36838
    }

    _AnimatedDefaultTextStyleState@412443363 createState(DynamicType) {
        Code at absolute offset: 0x13dec0
    }
}

class _AnimatedDefaultTextStyleState@412443363 extends AnimatedWidgetBaseState {

    VoidType forEachTween(DynamicType, DynamicType) {
        Code at absolute offset: 0x1702b0
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf197c
    }
}

class _ImplicitlyAnimatedWidgetState&State&SingleTickerProviderStateMixin@412443363<T> extends State implements SingleTickerProviderStateMixin {

    Ticker createTicker(DynamicType, DynamicType) {
        Code at absolute offset: 0x1356b0
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeDependencies(DynamicType) {
        Code at absolute offset: 0xf68c0
    }
}

class DecorationTween extends Tween {

    Decoration lerp(DynamicType, DynamicType) {
        Code at absolute offset: 0x157424
    }
}

class Decoration extends _DiagnosticableTree&Object&Diagnosticable@99198569 {

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x13d790
    }

    bool get:isComplex(DynamicType) {
        Code at absolute offset: 0x31fa8
    }

    Decoration lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa60e4
    }

    bool hitTest(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x80f34
    }
}

class :: {
}

class BoxPainter extends Object {
}

class BoxDecoration extends Decoration {

    EdgeInsetsGeometry get:padding(DynamicType) {
        Code at absolute offset: 0xa6d30
    }

    Path getClipPath(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa6b88
    }

    BoxDecoration scale(DynamicType, DynamicType) {
        Code at absolute offset: 0xbb340
    }

    bool get:isComplex(DynamicType) {
        Code at absolute offset: 0x168e78
    }

    BoxDecoration lerpFrom(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    BoxDecoration lerpTo(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    BoxDecoration lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa6624
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17ebb0
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x159da0
    }

    bool hitTest(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16596c
    }

    _BoxDecorationPainter@272196095 createBoxPainter(DynamicType, DynamicType) {
        Code at absolute offset: 0x16e404
    }
}

class :: {
}

class _BoxDecorationPainter@272196095 extends BoxPainter {

    Paint _getBackgroundPaint@272196095(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa694c
    }

    VoidType _paintBox@272196095(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa67fc
    }

    VoidType _paintShadows@272196095(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa69e8
    }

    VoidType _paintBackgroundColor@272196095(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa6798
    }

    VoidType paint(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x161af4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14bac8
    }
}

class BoxShadow extends Shadow {

    Paint toPaint(DynamicType) {
        Code at absolute offset: 0xa6b28
    }

    BoxShadow scale(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    BoxShadow lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    List lerpList(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa7828
    }
}

class :: {
}

class BorderDirectional extends BoxBorder {

    EdgeInsetsGeometry get:dimensions(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool get:isUniform(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    BorderDirectional scale(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    BorderDirectional lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa7784
    }

    VoidType paint(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class BoxBorder extends ShapeBorder {

    BoxBorder lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa7bac
    }

    Path getOuterPath(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x164e80
    }

    VoidType _paintUniformBorderWithRadius@271461502(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa6f88
    }

    VoidType _paintUniformBorderWithRectangle@271461502(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa6f10
    }
}

class :: {
}

class BoxShape extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class Border extends BoxBorder {

    Border merge(DynamicType, DynamicType) {
        Code at absolute offset: 0xa76bc
    }

    EdgeInsetsGeometry get:dimensions(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool get:isUniform(DynamicType) {
        Code at absolute offset: 0xa75d8
    }

    bool get:_colorIsUniform@271461502(DynamicType) {
        Code at absolute offset: 0xa7468
    }

    Border add(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16fe08
    }

    Border scale(DynamicType, DynamicType) {
        Code at absolute offset: 0x165670
    }

    ShapeBorder lerpFrom(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16340c
    }

    ShapeBorder lerpTo(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x168718
    }

    Border lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa72a8
    }

    VoidType paint(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15c2d8
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1813a4
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x1576c0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14dd08
    }
}

class _CupertinoEdgeShadowDecoration@73053933 extends Decoration {

    _CupertinoEdgeShadowDecoration@73053933 lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa803c
    }

    _CupertinoEdgeShadowDecoration@73053933 lerpFrom(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _CupertinoEdgeShadowDecoration@73053933 lerpTo(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _CupertinoEdgeShadowPainter@73053933 createBoxPainter(DynamicType, DynamicType) {
        Code at absolute offset: 0x16e3ac
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17eafc
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0xcca08
    }
}

class LinearGradient extends Gradient {

    Shader createShader(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa936c
    }

    LinearGradient scale(DynamicType, DynamicType) {
        Code at absolute offset: 0xa926c
    }

    LinearGradient lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xbb144
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1844d0
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15b1d8
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1518c8
    }
}

class Gradient extends Object {
}

class :: {

    Color _sample@286499651(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa8f18
    }

    _ColorsAndStops@286499651 _interpolateColorsAndStops@286499651(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa8110
    }
}

class _ColorsAndStops@286499651 extends Object {
}

class _SplayTreeNode@3220832<K, Node> extends Object {

    K get:key(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    VoidType set:left(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:right(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _SplayTree@3220832<K, Node> extends Object {

    int _splay@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0xa85d4
    }

    VoidType _addNewRoot@3220832(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa8364
    }
}

class _SplayTreeSetNode@3220832<K> extends _SplayTreeNode@3220832 {
}

class SplayTreeSet<E> extends _SplayTreeSet&_SplayTree&IterableMixin&SetMixin@3220832 {

    SplayTreeSet SplayTreeSet.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa8d50
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12f634
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x133410
    }

    bool get:isEmpty(DynamicType) {
        Code at absolute offset: 0x12e93c
    }

    bool contains(DynamicType, DynamicType) {
        Code at absolute offset: 0x12e7d4
    }

    bool add(DynamicType, DynamicType) {
        Code at absolute offset: 0x16cd1e
    }

    VoidType addAll(DynamicType, DynamicType) {
        Code at absolute offset: 0xa8260
    }

    Set intersection(DynamicType, DynamicType) {
        Code at absolute offset: 0x15fe98
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x140bbc
    }

    DynamicType get:contains(DynamicType) {
        Code at absolute offset: 0xe5070
    }
}

class _SplayTreeSet&_SplayTree&IterableMixin&SetMixin@3220832<E> extends _SplayTreeSet&_SplayTree&IterableMixin@3220832 implements SetMixin {

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x132104
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x130370
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13215c
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x132d80
    }

    String join(DynamicType, DynamicType) {
        Code at absolute offset: 0x13154c
    }
}

class _SplayTreeSet&_SplayTree&IterableMixin@3220832<E> extends _SplayTree@3220832 implements IterableMixin {
}

class IterableMixin<E> extends Object implements Iterable {
}

class :: {
    Animatable _kRightMiddleTween@73053933
    Animatable _kMiddleLeftTween@73053933
    DecorationTween _kGradientShadowTween@73053933

    Animatable get:_kRightMiddleTween@73053933() {
        Code at absolute offset: 0xfaa0
    }

    Animatable get:_kMiddleLeftTween@73053933() {
        Code at absolute offset: 0xfaa0
    }

    DecorationTween get:_kGradientShadowTween@73053933() {
        Code at absolute offset: 0xfaa0
    }
}

class _CupertinoBackGestureDetector@73053933<T> extends StatefulWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415bc
    }

    _CupertinoBackGestureDetectorState@73053933 createState(DynamicType) {
        Code at absolute offset: 0x13dd58
    }
}

class CupertinoRouteTransitionMixin<T> extends PageRoute {

    bool isPopGestureInProgress(DynamicType) {
        Code at absolute offset: 0xb500c
    }

    bool _isPopGestureEnabled@73053933(DynamicType) {
        Code at absolute offset: 0xb7478
    }

    _CupertinoBackGestureController@73053933 _startPopGesture@73053933(DynamicType) {
        Code at absolute offset: 0xb5038
    }

    Widget buildPageTransitions(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb4b9c
    }
}

class PageRoute<T> extends ModalRoute {

    PageRoute PageRoute.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class ModalRoute<T> extends _ModalRoute&TransitionRoute&LocalHistoryRoute@484188637 {

    ModalRoute ModalRoute.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb4494
    }

    ModalRoute of(DynamicType) {
        Code at absolute offset: 0xb4ac0
    }

    VoidType setState(DynamicType, DynamicType) {
        Code at absolute offset: 0xdfa20
    }

    VoidType install(DynamicType) {
        Code at absolute offset: 0x16c81c
    }

    TickerFuture didPush(DynamicType) {
        Code at absolute offset: 0x165f70
    }

    VoidType didAdd(DynamicType) {
        Code at absolute offset: 0x166fd8
    }

    VoidType set:offstage(DynamicType, DynamicType) {
        Code at absolute offset: 0x37f10
    }

    BuildContext get:subtreeContext(DynamicType) {
        Code at absolute offset: 0xb4a68
    }

    Future willPop(DynamicType) {
        Code at absolute offset: 0x1634bc
    }

    bool get:hasScopedWillPopCallback(DynamicType) {
        Code at absolute offset: 0xabfa0
    }

    VoidType didChangePrevious(DynamicType, DynamicType) {
        Code at absolute offset: 0x15e6f8
    }

    VoidType changedInternalState(DynamicType) {
        Code at absolute offset: 0x1875ec
    }

    VoidType changedExternalState(DynamicType) {
        Code at absolute offset: 0x15e168
    }

    bool get:canPop(DynamicType) {
        Code at absolute offset: 0xabfd8
    }

    Widget _buildModalBarrier@484188637(DynamicType, DynamicType) {
        Code at absolute offset: 0xac33c
    }

    Widget _buildModalScope@484188637(DynamicType, DynamicType) {
        Code at absolute offset: 0xaaf84
    }

    Iterable createOverlayEntries(DynamicType) {
        Code at absolute offset: 0xa9678
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x155130
    }

    DynamicType get:_buildModalBarrier@484188637(DynamicType) {
        Code at absolute offset: 0x18767c
    }

    DynamicType get:_buildModalScope@484188637(DynamicType) {
        Code at absolute offset: 0x187694
    }
}

class _ModalRoute&TransitionRoute&LocalHistoryRoute@484188637<T> extends TransitionRoute implements LocalHistoryRoute {

    _ModalRoute&TransitionRoute&LocalHistoryRoute@484188637 _ModalRoute&TransitionRoute&LocalHistoryRoute@484188637.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Future willPop(DynamicType) {
        Code at absolute offset: 0xa9548
    }

    bool didPop(DynamicType, DynamicType) {
        Code at absolute offset: 0x160710
    }

    bool get:willHandlePopInternally(DynamicType) {
        Code at absolute offset: 0x160844
    }
}

class LocalHistoryRoute<T> extends Route {
}

class OverlayEntry extends Object {

    OverlayEntry OverlayEntry.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:opaque(DynamicType, DynamicType) {
        Code at absolute offset: 0xaaef4
    }

    VoidType set:maintainState(DynamicType, DynamicType) {
        Code at absolute offset: 0xaae8c
    }

    VoidType remove(DynamicType) {
        Code at absolute offset: 0xaacf0
    }

    VoidType markNeedsBuild(DynamicType) {
        Code at absolute offset: 0xaaca8
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x155250
    }
}

class :: {
}

class _OverlayEntryWidgetState@466319124 extends State {

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf41d8
    }

    VoidType _markNeedsBuild@466319124(DynamicType) {
        Code at absolute offset: 0xa9720
    }
}

class _OverlayEntryWidget@466319124 extends StatefulWidget {

    _OverlayEntryWidgetState@466319124 createState(DynamicType) {
        Code at absolute offset: 0x13e180
    }
}

class _RenderTheatre@466319124 extends __RenderTheatre&RenderBox&ContainerRenderObjectMixin@466319124 {

    _RenderTheatre@466319124 _RenderTheatre@466319124.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa9c54
    }

    VoidType setupParentData(DynamicType, DynamicType) {
        Code at absolute offset: 0xffd84
    }

    VoidType _resolve@466319124(DynamicType) {
        Code at absolute offset: 0xa9bd0
    }

    VoidType _markNeedResolution@466319124(DynamicType) {
        Code at absolute offset: 0x8f450
    }

    VoidType set:textDirection(DynamicType, DynamicType) {
        Code at absolute offset: 0xa9ce4
    }

    VoidType set:skipCount(DynamicType, DynamicType) {
        Code at absolute offset: 0xa9d84
    }

    RenderBox get:_firstOnstageChild@466319124(DynamicType) {
        Code at absolute offset: 0xa9a08
    }

    RenderBox get:_lastOnstageChild@466319124(DynamicType) {
        Code at absolute offset: 0xa9dd0
    }

    double computeDistanceToActualBaseline(DynamicType, DynamicType) {
        Code at absolute offset: 0xf6e00
    }

    bool get:sizedByParent(DynamicType) {
        Code at absolute offset: 0x80f34
    }

    VoidType performResize(DynamicType) {
        Code at absolute offset: 0xf7120
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x105554
    }

    bool hitTestChildren(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf8108
    }

    VoidType paintStack(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa9780
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xff4fc
    }

    VoidType visitChildrenForSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0xffa8c
    }

    Rect describeApproximatePaintClip(DynamicType, DynamicType) {
        Code at absolute offset: 0x100184
    }

    DynamicType get:paintStack(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _TheatreElement@466319124 extends MultiChildRenderObjectElement {

    _TheatreElement@466319124 _TheatreElement@466319124.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Theatre@466319124 get:widget(DynamicType) {
        Code at absolute offset: 0x13d9b8
    }

    _RenderTheatre@466319124 get:renderObject(DynamicType) {
        Code at absolute offset: 0x13cd54
    }
}

class _OverlayState&State&TickerProviderStateMixin@466319124 extends State implements TickerProviderStateMixin {

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeDependencies(DynamicType) {
        Code at absolute offset: 0xf6a44
    }
}

class _Theatre@466319124 extends MultiChildRenderObjectWidget {

    _TheatreElement@466319124 createElement(DynamicType) {
        Code at absolute offset: 0x13d0fc
    }

    _RenderTheatre@466319124 createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16ab5c
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x176d40
    }
}

class Overlay extends StatefulWidget {

    OverlayState of(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xa9ea0
    }

    OverlayState createState(DynamicType) {
        Code at absolute offset: 0x13e198
    }
}

class __RenderTheatre&RenderBox&ContainerRenderObjectMixin@466319124 extends RenderBox implements ContainerRenderObjectMixin {

    __RenderTheatre&RenderBox&ContainerRenderObjectMixin@466319124 __RenderTheatre&RenderBox&ContainerRenderObjectMixin@466319124.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x127530
    }

    VoidType visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0x1064f0
    }

    VoidType _insertIntoChildList@333266271(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xaa1b4
    }

    VoidType insert(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x17448c
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0xa9f0e
    }

    VoidType _removeFromChildList@333266271(DynamicType, DynamicType) {
        Code at absolute offset: 0xa9f94
    }

    VoidType remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x161e44
    }

    VoidType move(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16d4e4
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x126920
    }

    VoidType redepthChildren(DynamicType) {
        Code at absolute offset: 0x127ce0
    }
}

class OverlayState extends _OverlayState&State&TickerProviderStateMixin@466319124 {

    OverlayState OverlayState.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12c2f4
    }

    VoidType insert(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xaabd4
    }

    VoidType insertAll(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xaaa60
    }

    VoidType rearrange(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xaa7a4
    }

    VoidType _remove@466319124(DynamicType, DynamicType) {
        Code at absolute offset: 0xaa724
    }

    VoidType _didChangeEntryOpacity@466319124(DynamicType) {
        Code at absolute offset: 0xaa6e4
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf4268
    }
}

class _ModalScope@484188637<T> extends StatefulWidget {

    _ModalScopeState@484188637 createState(DynamicType) {
        Code at absolute offset: 0x13e224
    }
}

class _ModalScopeState@484188637<T> extends State {
    Map _actionMap@484188637

    Map get:_actionMap@484188637() {
        Code at absolute offset: 0xfaa0
    }

    _ModalScopeState@484188637 _ModalScopeState@484188637.(DynamicType) {
        Code at absolute offset: 0xabe64
    }

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12c4f4
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf64d4
    }

    VoidType didChangeDependencies(DynamicType) {
        Code at absolute offset: 0x1da1c
    }

    VoidType _forceRebuildPage@484188637(DynamicType) {
        Code at absolute offset: 0xabe00
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xef0ec
    }

    bool get:_shouldIgnoreFocusRequest@484188637(DynamicType) {
        Code at absolute offset: 0xabd1c
    }

    VoidType _routeSetState@484188637(DynamicType, DynamicType) {
        Code at absolute offset: 0xabb24
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf4618
    }
}

class _DismissModalAction@484188637 extends DismissAction {

    _DismissModalAction@484188637 _DismissModalAction@484188637.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Object invoke(DynamicType, DynamicType) {
        Code at absolute offset: 0x177200
    }
}

class Type extends Object {
}

class FocusScopeNode extends FocusNode {

    FocusScopeNode FocusScopeNode.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x85f30
    }

    FocusScopeNode get:nearestScope(DynamicType) {
        Code at absolute offset: 0x155994
    }

    FocusNode get:focusedChild(DynamicType) {
        Code at absolute offset: 0xd45a0
    }

    VoidType setFirstFocus(DynamicType, DynamicType) {
        Code at absolute offset: 0xabbdc
    }

    VoidType autofocus(DynamicType, DynamicType) {
        Code at absolute offset: 0xabc58
    }

    VoidType _doRequestFocus@426042876(DynamicType, DynamicType) {
        Code at absolute offset: 0x18659c
    }
}

class ModalBarrier extends StatelessWidget {

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xebc44
    }
}

class :: {
}

class _ModalBarrierSemanticsDelegate@494005443 extends SemanticsGestureDelegate {

    VoidType assignSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0x17f9bc
    }
}

class SemanticsGestureDelegate extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x154798
    }
}

class :: {
}

class RawGestureDetector extends StatefulWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    RawGestureDetectorState createState(DynamicType) {
        Code at absolute offset: 0x13e044
    }
}

class GestureRecognizerFactoryWithHandlers<T> extends GestureRecognizerFactory {

    T constructor(DynamicType) {
        Code at absolute offset: 0x1609c0
    }

    VoidType initializer(DynamicType, DynamicType) {
        Code at absolute offset: 0x16c1bc
    }
}

class GestureRecognizer extends _GestureRecognizer&GestureArenaMember&DiagnosticableTreeMixin@131296176 {

    GestureRecognizer GestureRecognizer.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0xb1f30
    }

    VoidType handleNonAllowedPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    bool isPointerAllowed(DynamicType, DynamicType) {
        Code at absolute offset: 0x80f34
    }

    PointerDeviceKind getKindForPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0xb1ecc
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    T invokeCallback(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xaeaa8
    }
}

class _GestureRecognizer&GestureArenaMember&DiagnosticableTreeMixin@131296176 extends GestureArenaMember implements DiagnosticableTreeMixin {

    String toString(DynamicType, DynamicType) {
        Code at absolute offset: 0x14c844
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x76a5c
    }

    DiagnosticsNode toDiagnosticsNode(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x133600
    }
}

class :: {
}

class DragStartBehavior extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class GestureRecognizerState extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class OffsetPair extends Object {

    OffsetPair OffsetPair.fromEventPosition(DynamicType, DynamicType) {
        Code at absolute offset: 0xac700
    }

    OffsetPair +(DynamicType, DynamicType) {
        Code at absolute offset: 0xac654
    }

    OffsetPair -(DynamicType, DynamicType) {
        Code at absolute offset: 0xac528
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14ce0c
    }
}

class PrimaryPointerGestureRecognizer extends OneSequenceGestureRecognizer {

    PrimaryPointerGestureRecognizer PrimaryPointerGestureRecognizer.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb1bf0
    }

    VoidType addAllowedPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0x13b080
    }

    VoidType handleEvent(DynamicType, DynamicType) {
        Code at absolute offset: 0xac7e8
    }

    VoidType didExceedDeadlineWithEvent(DynamicType, DynamicType) {
        Code at absolute offset: 0xb1b50
    }

    VoidType acceptGesture(DynamicType, DynamicType) {
        Code at absolute offset: 0xb1ac4
    }

    VoidType rejectGesture(DynamicType, DynamicType) {
        Code at absolute offset: 0x14bc10
    }

    VoidType didStopTrackingLastPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0x14e220
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x144528
    }

    VoidType _stopTimer@131296176(DynamicType) {
        Code at absolute offset: 0xaee74
    }

    double _getGlobalDistance@131296176(DynamicType, DynamicType) {
        Code at absolute offset: 0xaee20
    }

    DynamicType get:handleEvent(DynamicType) {
        Code at absolute offset: 0x1546c8
    }
}

class LongPressGestureRecognizer extends PrimaryPointerGestureRecognizer {

    LongPressGestureRecognizer LongPressGestureRecognizer.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool isPointerAllowed(DynamicType, DynamicType) {
        Code at absolute offset: 0x143524
    }

    VoidType didExceedDeadline(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType handlePrimaryPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0x15ee34
    }

    VoidType _checkLongPressStart@124232524(DynamicType) {
        Code at absolute offset: 0xaea28
    }

    VoidType _checkLongPressMoveUpdate@124232524(DynamicType, DynamicType) {
        Code at absolute offset: 0xae964
    }

    VoidType _checkLongPressEnd@124232524(DynamicType, DynamicType) {
        Code at absolute offset: 0xacc5c
    }

    VoidType _reset@124232524(DynamicType) {
        Code at absolute offset: 0xacbe8
    }

    VoidType resolve(DynamicType, DynamicType) {
        Code at absolute offset: 0x15a924
    }

    VoidType acceptGesture(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class :: {
}

class LongPressMoveUpdateDetails extends Object {
}

class LongPressStartDetails extends Object {
}

class LongPressEndDetails extends Object {
}

class VelocityEstimate extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x14cf8c
    }
}

class :: {
}

class Velocity extends Object {

    Offset get:pixelsPerSecond(DynamicType) {
        Code at absolute offset: 0xe3bfc
    }

    Velocity -(DynamicType, DynamicType) {
        Code at absolute offset: 0xad814
    }

    Velocity +(DynamicType, DynamicType) {
        Code at absolute offset: 0xad758
    }

    Velocity clampMagnitude(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xad870
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x180228
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15a7f0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14ce84
    }
}

class VelocityTracker extends Object {

    VelocityTracker VelocityTracker.withKind(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addPosition(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xad9a0
    }

    VelocityEstimate getVelocityEstimate(DynamicType) {
        Code at absolute offset: 0xacd0c
    }
}

class _PointAtTime@136010635 extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x14d188
    }
}

class _Matrix@125188158 extends Object {

    _Matrix@125188158 _Matrix@125188158.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    double get(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xae624
    }

    VoidType set(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xae8c8
    }

    _Vector@125188158 getRow(DynamicType, DynamicType) {
        Code at absolute offset: 0xae87c
    }
}

class :: {
}

class _Vector@125188158 extends Object {

    _Vector@125188158 _Vector@125188158.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xae7b4
    }

    double *(DynamicType, DynamicType) {
        Code at absolute offset: 0xae70c
    }

    double norm(DynamicType) {
        Code at absolute offset: 0xae810
    }
}

class LeastSquaresSolver extends Object {

    PolynomialFit solve(DynamicType, DynamicType) {
        Code at absolute offset: 0xada68
    }
}

class PolynomialFit extends Object {
    double confidence

    double get:confidence(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    PolynomialFit PolynomialFit.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class BaseTapGestureRecognizer extends PrimaryPointerGestureRecognizer {

    BaseTapGestureRecognizer BaseTapGestureRecognizer.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addAllowedPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0x13b288
    }

    VoidType startTrackingPointer(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType handlePrimaryPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0x15f0e0
    }

    VoidType resolve(DynamicType, DynamicType) {
        Code at absolute offset: 0x15a980
    }

    VoidType didExceedDeadline(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType acceptGesture(DynamicType, DynamicType) {
        Code at absolute offset: 0x15a214
    }

    VoidType rejectGesture(DynamicType, DynamicType) {
        Code at absolute offset: 0x14bcac
    }

    VoidType _checkDown@134069716(DynamicType) {
        Code at absolute offset: 0xaed00
    }

    VoidType _checkUp@134069716(DynamicType) {
        Code at absolute offset: 0xaec24
    }

    VoidType _checkCancel@134069716(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xaeda4
    }

    VoidType _reset@134069716(DynamicType) {
        Code at absolute offset: 0xaebb0
    }
}

class :: {
}

class TapGestureRecognizer extends BaseTapGestureRecognizer {

    TapGestureRecognizer TapGestureRecognizer.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool isPointerAllowed(DynamicType, DynamicType) {
        Code at absolute offset: 0x1435a4
    }

    VoidType handleTapDown(DynamicType, DynamicType) {
        Code at absolute offset: 0x17fd6c
    }

    VoidType handleTapUp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1800d0
    }

    VoidType handleTapCancel(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x17fea8
    }
}

class TapUpDetails extends Object {
}

class TapDownDetails extends Object {
}

class _Timer@1026248 extends Object implements Timer {
    _Timer@1026248 _sentinelTimer@1026248
    _TimerHeap@1026248 _heap@1026248
    _Timer@1026248 _firstZeroTimer@1026248
    _Timer@1026248 _lastZeroTimer@1026248
    int _idCount@1026248
    RawReceivePort _receivePort@1026248
    SendPort _sendPort@1026248
    int _scheduledWakeupTime@1026248
    bool _handlingCallbacks@1026248

    _Timer@1026248 get:_sentinelTimer@1026248() {
        Code at absolute offset: 0xfaa0
    }

    _TimerHeap@1026248 get:_heap@1026248() {
        Code at absolute offset: 0xfaa0
    }

    _Timer@1026248 get:_lastZeroTimer@1026248() {
        Code at absolute offset: 0xfaa0
    }

    _Timer@1026248 _Timer@1026248._internal@1026248(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb0390
    }

    _Timer@1026248 _createTimer@1026248(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb0224
    }

    _Timer@1026248 _Timer@1026248.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb0cbc
    }

    _Timer@1026248 _Timer@1026248.periodic(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb01f0
    }

    VoidType cancel(DynamicType) {
        Code at absolute offset: 0xaeec4
    }

    VoidType _advanceWakeupTime@1026248(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _enqueue@1026248(DynamicType) {
        Code at absolute offset: 0xaf2fe
    }

    VoidType _notifyZeroHandler@1026248() {
        Code at absolute offset: 0xb0090
    }

    List _queueFromZeroEvent@1026248() {
        Code at absolute offset: 0xb0474
    }

    VoidType _notifyEventHandler@1026248() {
        Code at absolute offset: 0xaefcc
    }

    List _queueFromTimeoutEvent@1026248() {
        Code at absolute offset: 0xb07dc
    }

    VoidType _runTimers@1026248(DynamicType) {
        Code at absolute offset: 0xb0dc0
    }

    VoidType _handleMessage@1026248(DynamicType) {
        Code at absolute offset: 0xb0cf0
    }

    VoidType _scheduleWakeup@1026248(DynamicType) {
        Code at absolute offset: 0xaf1b4
    }

    VoidType _cancelWakeup@1026248() {
        Code at absolute offset: 0xb16c8
    }

    SendPort _createTimerHandler@1026248() {
        Code at absolute offset: 0xaf254
    }

    VoidType _shutdownTimerHandler@1026248() {
        Code at absolute offset: 0xb1644
    }

    Timer _factory@1026248(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb14d4
    }
}

class _TimerHeap@1026248 extends Object {

    _TimerHeap@1026248 _TimerHeap@1026248.(DynamicType, DynamicType) {
        Code at absolute offset: 0xafe14
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0xaf4a0
    }

    _Timer@1026248 removeFirst(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType remove(DynamicType, DynamicType) {
        Code at absolute offset: 0xb1748
    }

    VoidType _resize@1026248(DynamicType) {
        Code at absolute offset: 0xaff58
    }

    VoidType _bubbleUp@1026248(DynamicType, DynamicType) {
        Code at absolute offset: 0xaf594
    }

    VoidType _bubbleDown@1026248(DynamicType, DynamicType) {
        Code at absolute offset: 0xaf980
    }

    VoidType _swap@1026248(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Timer@1026248 _parent@1026248(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class OneSequenceGestureRecognizer extends GestureRecognizer {

    OneSequenceGestureRecognizer OneSequenceGestureRecognizer.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb1d00
    }

    VoidType handleNonAllowedPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0x139b50
    }

    VoidType handleEvent(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType resolve(DynamicType, DynamicType) {
        Code at absolute offset: 0x15a9ec
    }

    VoidType resolvePointer(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb1e48
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x144910
    }

    GestureArenaEntry _addPointerToArena@131296176(DynamicType, DynamicType) {
        Code at absolute offset: 0xb1df8
    }

    VoidType startTrackingPointer(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x136d88
    }

    VoidType stopTrackingPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0xacaf4
    }

    VoidType stopTrackingIfPointerNoLongerDown(DynamicType, DynamicType) {
        Code at absolute offset: 0xaca9c
    }
}

class GestureRecognizerFactory<T> extends Object {
}

class RawGestureDetectorState extends State {

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12bddc
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf5a8c
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xeec58
    }

    VoidType _syncAll@463132872(DynamicType, DynamicType) {
        Code at absolute offset: 0xb2e58
    }

    VoidType _handlePointerDown@463132872(DynamicType, DynamicType) {
        Code at absolute offset: 0xb2cb4
    }

    HitTestBehavior get:_defaultBehavior@463132872(DynamicType) {
        Code at absolute offset: 0xb2e10
    }

    VoidType _updateSemanticsForRenderObject@463132872(DynamicType, DynamicType) {
        Code at absolute offset: 0xb20c8
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf3b54
    }

    DynamicType get:_handlePointerDown@463132872(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_updateSemanticsForRenderObject@463132872(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class RenderSemanticsGestureHandler extends RenderProxyBox {

    RenderSemanticsGestureHandler RenderSemanticsGestureHandler.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:onTap(DynamicType, DynamicType) {
        Code at absolute offset: 0xb2b18
    }

    VoidType set:onLongPress(DynamicType, DynamicType) {
        Code at absolute offset: 0xb2a18
    }

    VoidType set:onHorizontalDragUpdate(DynamicType, DynamicType) {
        Code at absolute offset: 0xb2918
    }

    VoidType set:onVerticalDragUpdate(DynamicType, DynamicType) {
        Code at absolute offset: 0xb2818
    }

    VoidType describeSemanticsConfiguration(DynamicType, DynamicType) {
        Code at absolute offset: 0xf839c
    }

    bool _isValidAction@337160605(DynamicType, DynamicType) {
        Code at absolute offset: 0x80f34
    }

    VoidType _performSemanticScrollLeft@337160605(DynamicType) {
        Code at absolute offset: 0xb26b4
    }

    VoidType _performSemanticScrollRight@337160605(DynamicType) {
        Code at absolute offset: 0xb250c
    }

    VoidType _performSemanticScrollUp@337160605(DynamicType) {
        Code at absolute offset: 0xb2358
    }

    VoidType _performSemanticScrollDown@337160605(DynamicType) {
        Code at absolute offset: 0xb2170
    }

    DynamicType get:_performSemanticScrollLeft@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_performSemanticScrollRight@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_performSemanticScrollUp@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_performSemanticScrollDown@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class DragUpdateDetails extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x14cac4
    }
}

class :: {
}

class DragEndDetails extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x14cb28
    }
}

class DragDownDetails extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x14c9fc
    }
}

class DragStartDetails extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x14ca60
    }
}

class HitTestBehavior extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class _GestureSemantics@463132872 extends SingleChildRenderObjectWidget {

    RenderSemanticsGestureHandler createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a7d0
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1767e8
    }
}

class GestureDetector extends StatelessWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    GestureDetector GestureDetector.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb314c
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xeb424
    }
}

class _DefaultSemanticsGestureDelegate@463132872 extends SemanticsGestureDelegate {

    VoidType assignSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0x17f90c
    }

    _Closure@0150898 _getTapHandler@463132872(DynamicType, DynamicType) {
        Code at absolute offset: 0xb4304
    }

    _Closure@0150898 _getLongPressHandler@463132872(DynamicType, DynamicType) {
        Code at absolute offset: 0xb4210
    }

    _Closure@0150898 _getHorizontalDragUpdateHandler@463132872(DynamicType, DynamicType) {
        Code at absolute offset: 0xb3fd8
    }

    _Closure@0150898 _getVerticalDragUpdateHandler@463132872(DynamicType, DynamicType) {
        Code at absolute offset: 0xb3da0
    }
}

class _ModalBarrierGestureDetector@494005443 extends StatelessWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xebe28
    }
}

class _AnyTapGestureRecognizer@494005443 extends BaseTapGestureRecognizer {

    _AnyTapGestureRecognizer@494005443 _AnyTapGestureRecognizer@494005443.(DynamicType, DynamicType) {
        Code at absolute offset: 0xb4418
    }

    bool isPointerAllowed(DynamicType, DynamicType) {
        Code at absolute offset: 0x14364c
    }

    VoidType handleTapDown(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType handleTapUp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1801b8
    }

    VoidType handleTapCancel(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x180084
    }
}

class _AnyTapGestureRecognizerFactory@494005443 extends GestureRecognizerFactory {

    _AnyTapGestureRecognizer@494005443 constructor(DynamicType) {
        Code at absolute offset: 0x160a0c
    }

    VoidType initializer(DynamicType, DynamicType) {
        Code at absolute offset: 0x16c240
    }
}

class PageStorageBucket extends Object {
}

class :: {
}

class PageStorage extends StatelessWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xeb194
    }
}

class :: {
}

class HeroController extends NavigatorObserver {
    _Closure@0150898 _defaultHeroFlightShuttleBuilder@483011697

    _Closure@0150898 get:_defaultHeroFlightShuttleBuilder@483011697() {
        Code at absolute offset: 0xfaa0
    }

    HeroController HeroController.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType didPush(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb7404
    }

    VoidType didPop(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb7394
    }

    VoidType didReplace(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x37a90
    }

    VoidType didStartUserGesture(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType didStopUserGesture(DynamicType) {
        Code at absolute offset: 0xb7268
    }

    VoidType _maybeStartHeroTransition@483011697(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x37b84
    }

    VoidType _startHeroTransition@483011697(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xdfac8
    }

    VoidType _handleFlightEnded@483011697(DynamicType, DynamicType) {
        Code at absolute offset: 0xb71bc
    }

    DynamicType get:_handleFlightEnded@483011697(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {

    Rect _boundingBoxFor@483011697(DynamicType, DynamicType) {
        Code at absolute offset: 0xb539c
    }
}

class _HeroFlight@483011697 extends Object {
    Animatable _reverseTween@483011697

    Animatable get:_reverseTween@483011697() {
        Code at absolute offset: 0xfaa0
    }

    _HeroFlight@483011697 _HeroFlight@483011697.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Tween _doCreateRectTween@483011697(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb6924
    }

    Widget _buildOverlay@483011697(DynamicType, DynamicType) {
        Code at absolute offset: 0xb5938
    }

    VoidType _handleAnimationUpdate@483011697(DynamicType, DynamicType) {
        Code at absolute offset: 0xb55a4
    }

    VoidType start(DynamicType, DynamicType) {
        Code at absolute offset: 0xb6b34
    }

    VoidType divert(DynamicType, DynamicType) {
        Code at absolute offset: 0xb62dc
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1548c8
    }

    DynamicType get:_buildOverlay@483011697(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleAnimationUpdate@483011697(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class AnimatedBuilder extends AnimatedWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xa451c
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0x175174
    }
}

class AnimatedWidget extends StatefulWidget {

    _AnimatedState@431170175 createState(DynamicType) {
        Code at absolute offset: 0x13e12c
    }
}

class _AnimatedState@431170175 extends State {

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12c818
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf66bc
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xef160
    }

    VoidType _handleChange@431170175(DynamicType) {
        Code at absolute offset: 0xb5b1c
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf4a6c
    }

    DynamicType get:_handleChange@431170175(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
}

class FadeTransition extends SingleChildRenderObjectWidget {

    RenderAnimatedOpacity createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a868
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x176880
    }
}

class RenderAnimatedOpacity extends _RenderAnimatedOpacity&RenderProxyBox&RenderProxyBoxMixin&RenderAnimatedOpacityMixin@337160605 {

    RenderAnimatedOpacity RenderAnimatedOpacity.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb60ec
    }
}

class _RenderAnimatedOpacity&RenderProxyBox&RenderProxyBoxMixin&RenderAnimatedOpacityMixin@337160605 extends _RenderAnimatedOpacity&RenderProxyBox&RenderProxyBoxMixin@337160605 implements RenderAnimatedOpacityMixin {

    _RenderAnimatedOpacity&RenderProxyBox&RenderProxyBoxMixin&RenderAnimatedOpacityMixin@337160605 _RenderAnimatedOpacity&RenderProxyBox&RenderProxyBoxMixin&RenderAnimatedOpacityMixin@337160605.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool get:alwaysNeedsCompositing(DynamicType) {
        Code at absolute offset: 0xfc094
    }

    VoidType set:opacity(DynamicType, DynamicType) {
        Code at absolute offset: 0xb5f70
    }

    VoidType set:alwaysIncludeSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0xb5f14
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x126e24
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x126508
    }

    VoidType _updateOpacity@337160605(DynamicType) {
        Code at absolute offset: 0xb5d48
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfd3cc
    }

    VoidType visitChildrenForSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0xff724
    }

    DynamicType get:_updateOpacity@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _RenderAnimatedOpacity&RenderProxyBox&RenderProxyBoxMixin@337160605 extends RenderProxyBox implements RenderProxyBoxMixin {

    _RenderAnimatedOpacity&RenderProxyBox&RenderProxyBoxMixin@337160605 _RenderAnimatedOpacity&RenderProxyBox&RenderProxyBoxMixin@337160605.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType setupParentData(DynamicType, DynamicType) {
        Code at absolute offset: 0xffbb8
    }

    double computeDistanceToActualBaseline(DynamicType, DynamicType) {
        Code at absolute offset: 0xf6c08
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x101cd0
    }

    bool hitTestChildren(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf7730
    }

    VoidType applyPaintTransform(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb5bb0
    }
}

class RenderProxyBoxMixin<T> extends _RenderProxyBoxMixin&RenderBox&RenderObjectWithChildMixin@337160605 {
}

class _RenderProxyBoxMixin&RenderBox&RenderObjectWithChildMixin@337160605<T> extends Object implements RenderBox, RenderObjectWithChildMixin {
}

class RenderAnimatedOpacityMixin<T> extends RenderObjectWithChildMixin {
}

class RotationTransition extends AnimatedWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xa451c
    }

    Animation get:turns(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0x175010
    }
}

class DecoratedBoxTransition extends AnimatedWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x36838
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0x175108
    }
}

class SlideTransition extends AnimatedWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x36838
    }

    Animation get:position(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0x174dbc
    }
}

class ScaleTransition extends AnimatedWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xa451c
    }

    Animation get:scale(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0x174f18
    }
}

class RectTween extends Tween {

    Rect lerp(DynamicType, DynamicType) {
        Code at absolute offset: 0x157068
    }
}

class ReverseTween<T> extends Tween {

    T lerp(DynamicType, DynamicType) {
        Code at absolute offset: 0x156e68
    }
}

class _HeroFlightManifest@483011697 extends Object {

    Object get:tag(DynamicType) {
        Code at absolute offset: 0xb6eec
    }

    Animation get:animation(DynamicType) {
        Code at absolute offset: 0xb6224
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1547d0
    }
}

class HeroFlightDirection extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class _HeroState@483011697 extends State {

    _HeroState@483011697 _HeroState@483011697.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType startFlight(DynamicType, DynamicType) {
        Code at absolute offset: 0xb69f4
    }

    VoidType ensurePlaceholderIsHidden(DynamicType) {
        Code at absolute offset: 0xb5820
    }

    VoidType endFlight(DynamicType, DynamicType) {
        Code at absolute offset: 0xb5788
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf3c9c
    }
}

class Hero extends StatefulWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xa451c
    }

    Map _allHeroesFor@483011697(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb6fac
    }

    _HeroState@483011697 createState(DynamicType) {
        Code at absolute offset: 0x13e064
    }
}

class _CupertinoBackGestureController@73053933<T> extends Object {

    _CupertinoBackGestureController@73053933 _CupertinoBackGestureController@73053933.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType dragUpdate(DynamicType, DynamicType) {
        Code at absolute offset: 0xba810
    }

    VoidType dragEnd(DynamicType, DynamicType) {
        Code at absolute offset: 0xb759c
    }
}

class SystemNavigator extends Object {

    Future pop(DynamicType) {
        Code at absolute offset: 0xb9a58
    }

    VoidType routeUpdated(DynamicType, DynamicType) {
        Code at absolute offset: 0xb99bc
    }
}

class :: {
}

class Lists extends Object {

    VoidType copy(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _CupertinoEdgeShadowPainter@73053933 extends BoxPainter {

    VoidType paint(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1618f8
    }
}

class CupertinoPageTransition extends StatelessWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x36838
    }

    CupertinoPageTransition CupertinoPageTransition.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb4cdc
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xe5900
    }
}

class _CupertinoBackGestureDetectorState@73053933<T> extends State {

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x129b3c
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xee490
    }

    VoidType _handleDragStart@73053933(DynamicType, DynamicType) {
        Code at absolute offset: 0xbb0b8
    }

    VoidType _handleDragUpdate@73053933(DynamicType, DynamicType) {
        Code at absolute offset: 0xbaf28
    }

    VoidType _handleDragEnd@73053933(DynamicType, DynamicType) {
        Code at absolute offset: 0xbabb4
    }

    VoidType _handleDragCancel@73053933(DynamicType) {
        Code at absolute offset: 0xbaab8
    }

    VoidType _handlePointerDown@73053933(DynamicType, DynamicType) {
        Code at absolute offset: 0xba9b0
    }

    double _convertToLogical@73053933(DynamicType, DynamicType) {
        Code at absolute offset: 0xbacc0
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xef4ac
    }

    DynamicType get:_handleDragStart@73053933(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleDragUpdate@73053933(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleDragEnd@73053933(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleDragCancel@73053933(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handlePointerDown@73053933(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class ImplicitlyAnimatedWidgetState<T> extends _ImplicitlyAnimatedWidgetState&State&SingleTickerProviderStateMixin@412443363 {

    VoidType initState(DynamicType) {
        Code at absolute offset: 0xbbbe0
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf5000
    }

    VoidType _updateCurve@412443363(DynamicType) {
        Code at absolute offset: 0xbbb40
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xee57c
    }

    bool _shouldAnimateTween@412443363(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xbb670
    }

    VoidType _updateTween@412443363(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xbbab0
    }

    bool _constructTweens@412443363(DynamicType) {
        Code at absolute offset: 0xbb44c
    }

    VoidType forEachTween(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class ThemeDataTween extends Tween {

    ThemeData lerp(DynamicType, DynamicType) {
        Code at absolute offset: 0x1573ec
    }
}

class _AnimatedThemeState@252067045 extends AnimatedWidgetBaseState {

    VoidType forEachTween(DynamicType, DynamicType) {
        Code at absolute offset: 0x1701ac
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf18f0
    }
}

class :: {
}

class Theme extends StatelessWidget {
    ThemeData _kFallbackTheme@252067045

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xa451c
    }

    ThemeData get:_kFallbackTheme@252067045() {
        Code at absolute offset: 0xfaa0
    }

    ThemeData of(DynamicType, DynamicType) {
        Code at absolute offset: 0x9aa24
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xeac78
    }
}

class ChipThemeData extends _State&Object&Diagnosticable@398042623 {

    ChipThemeData ChipThemeData.fromDefaults(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xbd830
    }

    ChipThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc2f5c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158d6c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17acf4
    }
}

class :: {
}

class ButtonThemeData extends _State&Object&Diagnosticable@398042623 {

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17a7f4
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158b00
    }
}

class :: {
}

class ButtonTextTheme extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class ButtonBarLayoutBehavior extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class _InheritedTheme@252067045 extends InheritedTheme {

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x143888
    }
}

class InheritedTheme extends InheritedWidget {
}

class :: {
}

class FloatingActionButton extends StatelessWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xe6010
    }
}

class :: {
}

class _DefaultHeroTag@190192485 extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x14d340
    }
}

class WidgetsApp extends StatefulWidget {
    bool showPerformanceOverlayOverride
    Map _defaultShortcuts@439236006
    Map _defaultMacOsShortcuts@439236006
    Map defaultActions

    Map get:_defaultShortcuts@439236006() {
        Code at absolute offset: 0xfaa0
    }

    Map get:_defaultMacOsShortcuts@439236006() {
        Code at absolute offset: 0xfaa0
    }

    Map get:defaultActions() {
        Code at absolute offset: 0xfaa0
    }

    WidgetsApp WidgetsApp.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xbdef8
    }

    WidgetsApp WidgetsApp.router(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc2540
    }

    Map get:defaultShortcuts() {
        Code at absolute offset: 0xc2454
    }

    _WidgetsAppState@439236006 createState(DynamicType) {
        Code at absolute offset: 0x13dfa4
    }
}

class :: {
}

class __WidgetsAppState&State&WidgetsBindingObserver@439236006 extends State implements WidgetsBindingObserver {

    Future didPushRouteInformation(DynamicType, DynamicType) {
        Code at absolute offset: 0x1359e4
    }

    VoidType didChangeMetrics(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeTextScaleFactor(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangePlatformBrightness(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeAppLifecycleState(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didHaveMemoryPressure(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeAccessibilityFeatures(DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class WidgetsBindingObserver extends Object {
}

class _MediaQueryFromWindow@439236006 extends StatefulWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    _MediaQueryFromWindowsState@439236006 createState(DynamicType) {
        Code at absolute offset: 0x13dfbc
    }
}

class __MediaQueryFromWindowsState&State&WidgetsBindingObserver@439236006 extends State implements WidgetsBindingObserver {

    Future didPopRoute(DynamicType) {
        Code at absolute offset: 0x13357c
    }

    Future didPushRoute(DynamicType, DynamicType) {
        Code at absolute offset: 0x13357c
    }

    Future didPushRouteInformation(DynamicType, DynamicType) {
        Code at absolute offset: 0x135a14
    }

    VoidType didChangeLocales(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeAppLifecycleState(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didHaveMemoryPressure(DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class _WidgetsAppState@439236006 extends __WidgetsAppState&State&WidgetsBindingObserver@439236006 {

    String get:_initialRouteName@439236006(DynamicType) {
        Code at absolute offset: 0xc0000
    }

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12b9e4
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf56d4
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xeea6c
    }

    bool get:_usesRouter@439236006(DynamicType) {
        Code at absolute offset: 0x97170
    }

    RouteInformationProvider get:_effectiveRouteInformationProvider@439236006(DynamicType) {
        Code at absolute offset: 0xa5354
    }

    VoidType _updateNavigator@439236006(DynamicType) {
        Code at absolute offset: 0xbec10
    }

    Route _onGenerateRoute@439236006(DynamicType, DynamicType) {
        Code at absolute offset: 0xbfd88
    }

    Route _onUnknownRoute@439236006(DynamicType, DynamicType) {
        Code at absolute offset: 0xbec6c
    }

    Future didPopRoute(DynamicType) {
        Code at absolute offset: 0x14c680
    }

    Future didPushRoute(DynamicType, DynamicType) {
        Code at absolute offset: 0x133474
    }

    Locale _resolveLocales@439236006(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xbffb4
    }

    Locale basicLocaleListResolution(DynamicType, DynamicType) {
        Code at absolute offset: 0xbe164
    }

    VoidType didChangeLocales(DynamicType, DynamicType) {
        Code at absolute offset: 0x15a710
    }

    Iterable get:_localizationsDelegates@439236006(DynamicType) {
        Code at absolute offset: 0xbeda4
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf30b4
    }

    DynamicType get:_onGenerateRoute@439236006(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_onUnknownRoute@439236006(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class LocalizationsDelegate<T> extends Object {

    Type get:type(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {

    Future _loadAll@401081674(DynamicType, DynamicType) {
        Code at absolute offset: 0xbedfc
    }
}

class _Pending@401081674 extends Object {
}

class SynchronousFuture<T> extends Object implements Future {

    Future then(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16e124
    }

    Future whenComplete(DynamicType, DynamicType) {
        Code at absolute offset: 0x165c70
    }
}

class :: {
}

class WidgetsLocalizations extends Object {
}

class _LocalizationsState@401081674 extends State {

    _LocalizationsState@401081674 _LocalizationsState@401081674.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12be7c
    }

    bool _anyDelegatesShouldReload@401081674(DynamicType, DynamicType) {
        Code at absolute offset: 0xbf8e8
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf5bf8
    }

    VoidType load(DynamicType, DynamicType) {
        Code at absolute offset: 0xbf6d8
    }

    T resourcesFor(DynamicType, DynamicType) {
        Code at absolute offset: 0xbf630
    }

    TextDirection get:_textDirection@401081674(DynamicType) {
        Code at absolute offset: 0xbf584
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf3e34
    }
}

class _WidgetsLocalizationsDelegate@401081674 extends LocalizationsDelegate {

    bool isSupported(DynamicType, DynamicType) {
        Code at absolute offset: 0x80f34
    }

    Future load(DynamicType, DynamicType) {
        Code at absolute offset: 0x16e0fc
    }

    bool shouldReload(DynamicType, DynamicType) {
        Code at absolute offset: 0x16d8bc
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14bab8
    }
}

class DefaultWidgetsLocalizations extends Object implements WidgetsLocalizations {

    Future load(DynamicType) {
        Code at absolute offset: 0xbfb48
    }
}

class _LocalizationsScope@401081674 extends InheritedWidget {

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x143e80
    }
}

class Localizations extends StatefulWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xa451c
    }

    Localizations Localizations.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xbfccc
    }

    Locale localeOf(DynamicType, DynamicType) {
        Code at absolute offset: 0xbfc74
    }

    T of(DynamicType, DynamicType) {
        Code at absolute offset: 0xbfb88
    }

    _LocalizationsState@401081674 createState(DynamicType) {
        Code at absolute offset: 0x13e0a4
    }
}

class RouteInformationProvider extends ValueListenable {
}

class :: {
}

class RouteInformationParser<T> extends Object {
}

class _IntentionToReportRouteInformation@445049130 extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class RootBackButtonDispatcher extends _RootBackButtonDispatcher&BackButtonDispatcher&WidgetsBindingObserver@445049130 {

    RootBackButtonDispatcher RootBackButtonDispatcher.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0xc02d8
    }

    VoidType removeCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0xc0164
    }

    Future didPopRoute(DynamicType) {
        Code at absolute offset: 0x156d54
    }
}

class _RootBackButtonDispatcher&BackButtonDispatcher&WidgetsBindingObserver@445049130 extends BackButtonDispatcher implements WidgetsBindingObserver {

    _RootBackButtonDispatcher&BackButtonDispatcher&WidgetsBindingObserver@445049130 _RootBackButtonDispatcher&BackButtonDispatcher&WidgetsBindingObserver@445049130.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Future didPushRoute(DynamicType, DynamicType) {
        Code at absolute offset: 0x13357c
    }

    Future didPushRouteInformation(DynamicType, DynamicType) {
        Code at absolute offset: 0x135a14
    }

    VoidType didChangeMetrics(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeTextScaleFactor(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangePlatformBrightness(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeLocales(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeAppLifecycleState(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didHaveMemoryPressure(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeAccessibilityFeatures(DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class RouterDelegate<T> extends Listenable {
}

class _PlatformRouteInformationProvider&RouteInformationProvider&WidgetsBindingObserver@445049130 extends RouteInformationProvider implements WidgetsBindingObserver {
}

class PlatformRouteInformationProvider extends _PlatformRouteInformationProvider&RouteInformationProvider&WidgetsBindingObserver&ChangeNotifier@445049130 {

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12d200
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12eeb0
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xc043c
    }
}

class _RouterState@445049130<T> extends State {

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12c348
    }

    VoidType _scheduleRouteInformationReportingTask@445049130(DynamicType) {
        Code at absolute offset: 0xc07f4
    }

    VoidType _reportRouteInformation@445049130(DynamicType, DynamicType) {
        Code at absolute offset: 0xc0af8
    }

    RouteInformation _retrieveNewRouteInformation@445049130(DynamicType) {
        Code at absolute offset: 0xc06e8
    }

    VoidType _maybeNeedToReportRouteInformation@445049130(DynamicType) {
        Code at absolute offset: 0xc0790
    }

    VoidType didChangeDependencies(DynamicType) {
        Code at absolute offset: 0xf6a78
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf6170
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xeef60
    }

    VoidType _processInitialRoute@445049130(DynamicType) {
        Code at absolute offset: 0xc0574
    }

    VoidType _handleRouteInformationProviderNotification@445049130(DynamicType) {
        Code at absolute offset: 0xc0574
    }

    Future _handleBackButtonDispatcherNotification@445049130(DynamicType) {
        Code at absolute offset: 0xc09bc
    }

    _Closure@0150898 _verifyRouteInformationParserStillCurrent@445049130(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Closure@0150898 _verifyRouterDelegatePopStillCurrent@445049130(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _handleRouterDelegateNotification@445049130(DynamicType) {
        Code at absolute offset: 0xc0748
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf45b8
    }

    DynamicType get:_reportRouteInformation@445049130(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleRouteInformationProviderNotification@445049130(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleBackButtonDispatcherNotification@445049130(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleRouterDelegateNotification@445049130(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _PlatformRouteInformationProvider&RouteInformationProvider&WidgetsBindingObserver&ChangeNotifier@445049130 extends _PlatformRouteInformationProvider&RouteInformationProvider&WidgetsBindingObserver@445049130 implements ChangeNotifier {

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0xc0d64
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0xc0c74
    }

    bool get:hasListeners(DynamicType) {
        Code at absolute offset: 0xc04c4
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xc04a4
    }
}

class Router<T> extends StatefulWidget {

    State createState(DynamicType) {
        Code at absolute offset: 0x13e1e4
    }
}

class _CallbackHookProvider@445049130<T> extends Object {

    _CallbackHookProvider@445049130 _CallbackHookProvider@445049130.(DynamicType) {
        Code at absolute offset: 0xc0f7c
    }

    bool get:hasCallbacks(DynamicType) {
        Code at absolute offset: 0xc026c
    }

    VoidType addCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0xc0404
    }

    VoidType removeCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0xc02a8
    }

    T invokeCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0xc0ddc
    }
}

class RouteInformation extends Object {
}

class BackButtonDispatcher extends _CallbackHookProvider@445049130 {

    BackButtonDispatcher BackButtonDispatcher.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool get:hasCallbacks(DynamicType) {
        Code at absolute offset: 0xc022c
    }

    Future invokeCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0xc1030
    }
}

class _MediaQueryFromWindowsState@439236006 extends __MediaQueryFromWindowsState&State&WidgetsBindingObserver@439236006 {

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12bb8c
    }

    VoidType didChangeAccessibilityFeatures(DynamicType) {
        Code at absolute offset: 0x12ceb4
    }

    VoidType didChangeMetrics(DynamicType) {
        Code at absolute offset: 0x133318
    }

    VoidType didChangeTextScaleFactor(DynamicType) {
        Code at absolute offset: 0x12cb3c
    }

    VoidType didChangePlatformBrightness(DynamicType) {
        Code at absolute offset: 0x12cc00
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf37d8
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xeead8
    }
}

class ScrollAction extends Action {

    ScrollAction ScrollAction.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool isEnabled(DynamicType, DynamicType) {
        Code at absolute offset: 0x15b674
    }

    VoidType invoke(DynamicType, DynamicType) {
        Code at absolute offset: 0x1775c4
    }
}

class ScrollIntent extends Intent {
}

class ScrollIncrementType extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class :: {
}

class Scrollable extends StatefulWidget {

    ScrollableState of(DynamicType) {
        Code at absolute offset: 0xc1470
    }

    Future ensureVisible(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc12f4
    }
}

class _ScrollableState&State&TickerProviderStateMixin&RestorationMixin@446019050 extends _ScrollableState&State&TickerProviderStateMixin@446019050 implements RestorationMixin {
}

class RestorationMixin<S> extends State {
}

class :: {
}

class _ScrollableState&State&TickerProviderStateMixin@446019050 extends State implements TickerProviderStateMixin {
}

class ScrollableState extends _ScrollableState&State&TickerProviderStateMixin&RestorationMixin@446019050 implements ScrollContext {
}

class ScrollContext extends Object {
}

class :: {
}

class _ScrollableScope@446019050 extends InheritedWidget {
}

class DirectionalFocusAction extends Action {

    DirectionalFocusAction DirectionalFocusAction.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType invoke(DynamicType, DynamicType) {
        Code at absolute offset: 0x1774b4
    }
}

class DirectionalFocusIntent extends Intent {
}

class TraversalDirection extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class PreviousFocusAction extends Action {

    PreviousFocusAction PreviousFocusAction.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType invoke(DynamicType, DynamicType) {
        Code at absolute offset: 0x1773f4
    }
}

class PreviousFocusIntent extends Intent {
}

class NextFocusAction extends Action {

    NextFocusAction NextFocusAction.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType invoke(DynamicType, DynamicType) {
        Code at absolute offset: 0x177334
    }
}

class NextFocusIntent extends Intent {
}

class RequestFocusAction extends Action {

    RequestFocusAction RequestFocusAction.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType invoke(DynamicType, DynamicType) {
        Code at absolute offset: 0x1772f0
    }
}

class RequestFocusIntent extends Intent {
}

class ThemeMode extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class CupertinoPageTransitionsBuilder extends PageTransitionsBuilder {

    Widget buildTransitions(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1831fc
    }
}

class PageTransitionsBuilder extends Object {
}

class :: {
}

class FadeUpwardsPageTransitionsBuilder extends PageTransitionsBuilder {

    Widget buildTransitions(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1831b8
    }
}

class _FadeUpwardsPageTransition@217490068 extends StatelessWidget {
    Tween _bottomUpTween@217490068
    Animatable _fastOutSlowInTween@217490068
    Animatable _easeInTween@217490068

    Tween get:_bottomUpTween@217490068() {
        Code at absolute offset: 0xfaa0
    }

    Animatable get:_fastOutSlowInTween@217490068() {
        Code at absolute offset: 0xfaa0
    }

    Animatable get:_easeInTween@217490068() {
        Code at absolute offset: 0xfaa0
    }

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xa451c
    }

    _FadeUpwardsPageTransition@217490068 _FadeUpwardsPageTransition@217490068.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc282c
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xeabe8
    }
}

class PageTransitionsTheme extends _State&Object&Diagnosticable@398042623 {

    Widget buildTransitions(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc2a60
    }

    List _all@217490068(DynamicType, DynamicType) {
        Code at absolute offset: 0xc29dc
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17bf48
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x159288
    }
}

class ColorSwatch<T> extends Color {

    Color [](DynamicType, DynamicType) {
        Code at absolute offset: 0xa3dd0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1782c8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x157d0c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x146818
    }
}

class :: {
}

class BottomAppBarTheme extends _State&Object&Diagnosticable@398042623 {

    BottomAppBarTheme lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc2c80
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158930
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17a234
    }
}

class :: {
}

class AppBarTheme extends _State&Object&Diagnosticable@398042623 {

    AppBarTheme of(DynamicType) {
        Code at absolute offset: 0xc2f14
    }

    AppBarTheme lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc2d60
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x1588b8
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x179f20
    }
}

class :: {
}

class CardTheme extends _State&Object&Diagnosticable@398042623 {

    CardTheme lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc362c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x158d00
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17ab90
    }
}

class :: {
}

class TooltipThemeData extends _State&Object&Diagnosticable@398042623 {

    TooltipThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc3764
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x159c54
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17dfbc
    }
}

class :: {
}

class TooltipTheme extends InheritedTheme {

    TooltipThemeData of(DynamicType) {
        Code at absolute offset: 0xc3aa8
    }
}

class TabBarTheme extends _State&Object&Diagnosticable@398042623 {

    TabBarTheme lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc3b0c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x159540
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17c6bc
    }
}

class :: {
}

class SliderThemeData extends _State&Object&Diagnosticable@398042623 {

    SliderThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc3c70
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x159338
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17c1a0
    }
}

class :: {
}

class ShowValueIndicator extends Object {
}

class Thumb extends Object {
}

class IconThemeData extends _State&Object&Diagnosticable@398042623 {

    IconThemeData copyWith(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x173c80
    }

    IconThemeData merge(DynamicType, DynamicType) {
        Code at absolute offset: 0xc420c
    }

    bool get:isConcrete(DynamicType) {
        Code at absolute offset: 0xc4190
    }

    double get:opacity(DynamicType) {
        Code at absolute offset: 0xc4380
    }

    IconThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc3fd0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x179dfc
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15884c
    }
}

class :: {
}

class CupertinoIconThemeData extends _CupertinoIconThemeData&IconThemeData&Diagnosticable@65449307 {

    IconThemeData resolve(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    CupertinoIconThemeData copyWith(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x173b04
    }
}

class _CupertinoIconThemeData&IconThemeData&Diagnosticable@65449307 extends IconThemeData implements Diagnosticable {

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x76a5c
    }

    String toString(DynamicType, DynamicType) {
        Code at absolute offset: 0x14bb14
    }
}

class :: {
}

class TextTheme extends _State&Object&Diagnosticable@398042623 {

    TextTheme copyWith(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc4f2c
    }

    TextTheme merge(DynamicType, DynamicType) {
        Code at absolute offset: 0xc4a68
    }

    TextTheme lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc43d8
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17ca38
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x159608
    }
}

class :: {
}

class ToggleButtonsThemeData extends _State&Object&Diagnosticable@398042623 {

    ToggleButtonsThemeData lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc57d4
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x159b94
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17dc78
    }
}

class :: {
}

class MaterialBasedCupertinoThemeData extends CupertinoThemeData {

    MaterialBasedCupertinoThemeData MaterialBasedCupertinoThemeData.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class CupertinoThemeData extends _State&Object&Diagnosticable@398042623 {

    CupertinoThemeData noDefault(DynamicType) {
        Code at absolute offset: 0xc701c
    }
}

class _CupertinoTextThemeDefaults@84195667 extends Object {
}

class _CupertinoThemeDefaults@84195667 extends Object {
}

class :: {
}

class _InheritedCupertinoTheme@84195667 extends InheritedWidget {

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x143798
    }
}

class _NoDefaultCupertinoThemeData@84195667 extends CupertinoThemeData {
}

class CupertinoTheme extends StatelessWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415bc
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xe59d8
    }
}

class VisualDensity extends _State&Object&Diagnosticable@398042623 {

    VisualDensity get:adaptivePlatformDensity() {
        Code at absolute offset: 0xc7224
    }

    Offset get:baseSizeAdjustment(DynamicType) {
        Code at absolute offset: 0xc71c4
    }

    VisualDensity lerp(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc5e6c
    }

    BoxConstraints effectiveConstraints(DynamicType, DynamicType) {
        Code at absolute offset: 0xc702c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17d89c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x157670
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x13d220
    }
}

class _IdentityThemeDataCacheKey@253408314 extends Object {

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15aae4
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x183330
    }
}

class MaterialLocalizations extends Object {

    MaterialLocalizations of(DynamicType) {
        Code at absolute offset: 0xc72b8
    }
}

class :: {
}

class _MaterialLocalizationsDelegate@208075540 extends LocalizationsDelegate {

    bool isSupported(DynamicType, DynamicType) {
        Code at absolute offset: 0x174d40
    }

    Future load(DynamicType, DynamicType) {
        Code at absolute offset: 0x16e0d4
    }

    bool shouldReload(DynamicType, DynamicType) {
        Code at absolute offset: 0x16d86c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14baa8
    }
}

class DefaultMaterialLocalizations extends Object implements MaterialLocalizations {

    Future load(DynamicType) {
        Code at absolute offset: 0xc7328
    }
}

class Feedback extends Object {

    Future forTap(DynamicType) {
        Code at absolute offset: 0xc7348
    }

    Future forLongPress(DynamicType) {
        Code at absolute offset: 0x9a700
    }

    TargetPlatform _platform@187191779(DynamicType) {
        Code at absolute offset: 0x9a9dc
    }
}

class :: {
}

class SemanticsService extends Object {

    Future tooltip(DynamicType) {
        Code at absolute offset: 0xc78a8
    }
}

class :: {
}

class RenderPositionedBox extends RenderAligningShiftedBox {

    RenderPositionedBox RenderPositionedBox.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc8378
    }

    VoidType set:widthFactor(DynamicType, DynamicType) {
        Code at absolute offset: 0xc82f0
    }

    VoidType set:heightFactor(DynamicType, DynamicType) {
        Code at absolute offset: 0xc8268
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x1003c4
    }
}

class RenderShiftedBox extends _RenderShiftedBox&RenderBox&RenderObjectWithChildMixin@340204652 {

    RenderShiftedBox RenderShiftedBox.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    double computeDistanceToActualBaseline(DynamicType, DynamicType) {
        Code at absolute offset: 0xf6aa4
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfcd38
    }

    bool hitTestChildren(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf756c
    }
}

class SingleChildLayoutDelegate extends Object {

    Size getSize(DynamicType, DynamicType) {
        Code at absolute offset: 0x93efc
    }
}

class :: {
}

class RenderAbsorbPointer extends RenderProxyBox {

    RenderAbsorbPointer RenderAbsorbPointer.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc85c8
    }

    VoidType set:absorbing(DynamicType, DynamicType) {
        Code at absolute offset: 0xc8570
    }

    VoidType set:ignoringSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    bool hitTest(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfcb10
    }

    VoidType visitChildrenForSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0xff8b0
    }
}

class RenderMouseRegion extends RenderProxyBox implements MouseTrackerAnnotation {

    RenderMouseRegion RenderMouseRegion.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc8704
    }

    bool hitTestSelf(DynamicType, DynamicType) {
        Code at absolute offset: 0x80f34
    }

    bool hitTest(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfc9e8
    }

    VoidType handleEvent(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:opaque(DynamicType, DynamicType) {
        Code at absolute offset: 0xc86b8
    }

    VoidType set:cursor(DynamicType, DynamicType) {
        Code at absolute offset: 0xc863c
    }

    VoidType performResize(DynamicType) {
        Code at absolute offset: 0xf7120
    }
}

class RenderSemanticsAnnotations extends RenderProxyBox {

    RenderSemanticsAnnotations RenderSemanticsAnnotations.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc89cc
    }

    VoidType set:container(DynamicType, DynamicType) {
        Code at absolute offset: 0xc8570
    }

    VoidType set:explicitChildNodes(DynamicType, DynamicType) {
        Code at absolute offset: 0xc908c
    }

    VoidType set:excludeSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:checked(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:enabled(DynamicType, DynamicType) {
        Code at absolute offset: 0xc8dac
    }

    VoidType set:selected(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:button(DynamicType, DynamicType) {
        Code at absolute offset: 0xc8fdc
    }

    VoidType set:link(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:header(DynamicType, DynamicType) {
        Code at absolute offset: 0xc9034
    }

    VoidType set:textField(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:readOnly(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:focusable(DynamicType, DynamicType) {
        Code at absolute offset: 0xc8f14
    }

    VoidType set:focused(DynamicType, DynamicType) {
        Code at absolute offset: 0xc891c
    }

    VoidType set:inMutuallyExclusiveGroup(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:obscured(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:multiline(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:scopesRoute(DynamicType, DynamicType) {
        Code at absolute offset: 0xc90e4
    }

    VoidType set:namesRoute(DynamicType, DynamicType) {
        Code at absolute offset: 0xc8974
    }

    VoidType set:hidden(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:image(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:liveRegion(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:maxValueLength(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:currentValueLength(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:toggled(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:label(DynamicType, DynamicType) {
        Code at absolute offset: 0xc8c24
    }

    String get:value(DynamicType) {
        Code at absolute offset: 0xc87fe
    }

    VoidType set:value(DynamicType, DynamicType) {
        Code at absolute offset: 0xc8894
    }

    VoidType set:increasedValue(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:decreasedValue(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:hint(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:hintOverrides(DynamicType, DynamicType) {
        Code at absolute offset: 0xc8b9c
    }

    VoidType set:textDirection(DynamicType, DynamicType) {
        Code at absolute offset: 0xc8f6c
    }

    VoidType set:sortKey(DynamicType, DynamicType) {
        Code at absolute offset: 0xc8e04
    }

    VoidType set:onTap(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onDismiss(DynamicType, DynamicType) {
        Code at absolute offset: 0xc8cac
    }

    VoidType set:onLongPress(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onScrollLeft(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onScrollRight(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onScrollUp(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onScrollDown(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onIncrease(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onDecrease(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onCopy(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onCut(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onPaste(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onMoveCursorForwardByCharacter(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onMoveCursorBackwardByCharacter(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onMoveCursorForwardByWord(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onMoveCursorBackwardByWord(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onSetSelection(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onDidGainAccessibilityFocus(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:onDidLoseAccessibilityFocus(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:customSemanticsActions(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType visitChildrenForSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0xff92c
    }

    VoidType describeSemanticsConfiguration(DynamicType, DynamicType) {
        Code at absolute offset: 0xf8644
    }

    VoidType _performTap@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _performLongPress@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _performDismiss@337160605(DynamicType) {
        Code at absolute offset: 0xc8e74
    }

    VoidType _performScrollLeft@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _performScrollRight@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _performScrollUp@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _performScrollDown@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _performIncrease@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _performDecrease@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _performCopy@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _performCut@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _performPaste@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _performDidGainAccessibilityFocus@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _performDidLoseAccessibilityFocus@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_performDismiss@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class RenderTransform extends RenderProxyBox {

    RenderTransform RenderTransform.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc9504
    }

    VoidType set:origin(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:alignment(DynamicType, DynamicType) {
        Code at absolute offset: 0xc9470
    }

    VoidType set:textDirection(DynamicType, DynamicType) {
        Code at absolute offset: 0xc93f8
    }

    VoidType set:transform(DynamicType, DynamicType) {
        Code at absolute offset: 0xc9354
    }

    Matrix4 get:_effectiveTransform@337160605(DynamicType) {
        Code at absolute offset: 0xc914c
    }

    bool hitTest(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfc908
    }

    bool hitTestChildren(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf77f0
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfdefc
    }

    VoidType applyPaintTransform(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1068ac
    }
}

class RenderClipPath extends _RenderCustomClip@337160605 {

    Path get:_defaultClip@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class RenderRepaintBoundary extends RenderProxyBox {

    RenderRepaintBoundary RenderRepaintBoundary.(DynamicType, DynamicType) {
        Code at absolute offset: 0xc95b8
    }

    bool get:isRepaintBoundary(DynamicType) {
        Code at absolute offset: 0x80f34
    }
}

class DecorationPosition extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class RenderLimitedBox extends RenderProxyBox {

    RenderLimitedBox RenderLimitedBox.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc9890
    }

    VoidType set:maxWidth(DynamicType, DynamicType) {
        Code at absolute offset: 0xc9838
    }

    VoidType set:maxHeight(DynamicType, DynamicType) {
        Code at absolute offset: 0xc97e0
    }

    BoxConstraints _limitConstraints@337160605(DynamicType, DynamicType) {
        Code at absolute offset: 0xc961c
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x101b6c
    }
}

class RenderConstrainedBox extends RenderProxyBox {

    RenderConstrainedBox RenderConstrainedBox.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc81e0
    }

    VoidType set:additionalConstraints(DynamicType, DynamicType) {
        Code at absolute offset: 0xc9908
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x101a0c
    }
}

class _RenderPhysicalModelBase@337160605<T> extends _RenderCustomClip@337160605 {

    _RenderPhysicalModelBase@337160605 _RenderPhysicalModelBase@337160605.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc9b28
    }

    VoidType set:elevation(DynamicType, DynamicType) {
        Code at absolute offset: 0xc9aa0
    }

    VoidType set:shadowColor(DynamicType, DynamicType) {
        Code at absolute offset: 0xc9a18
    }

    VoidType set:color(DynamicType, DynamicType) {
        Code at absolute offset: 0xc9990
    }

    bool get:alwaysNeedsCompositing(DynamicType) {
        Code at absolute offset: 0x80f34
    }

    VoidType describeSemanticsConfiguration(DynamicType, DynamicType) {
        Code at absolute offset: 0xf8360
    }
}

class RenderOffstage extends RenderProxyBox {

    RenderOffstage RenderOffstage.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc9cb8
    }

    VoidType set:offstage(DynamicType, DynamicType) {
        Code at absolute offset: 0xc9c60
    }

    double computeDistanceToActualBaseline(DynamicType, DynamicType) {
        Code at absolute offset: 0xf6c64
    }

    bool get:sizedByParent(DynamicType) {
        Code at absolute offset: 0xcc054
    }

    VoidType performResize(DynamicType) {
        Code at absolute offset: 0xf7198
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x101e58
    }

    bool hitTest(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfca84
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfe27c
    }

    VoidType visitChildrenForSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0xff860
    }
}

class RenderMergeSemantics extends RenderProxyBox {

    RenderMergeSemantics RenderMergeSemantics.(DynamicType, DynamicType) {
        Code at absolute offset: 0xc95b8
    }

    VoidType describeSemanticsConfiguration(DynamicType, DynamicType) {
        Code at absolute offset: 0xf88c4
    }
}

class RenderPhysicalShape extends _RenderPhysicalModelBase@337160605 {

    RenderPhysicalShape RenderPhysicalShape.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc9d8c
    }

    PhysicalModelLayer get:layer(DynamicType) {
        Code at absolute offset: 0xc9d38
    }

    Path get:_defaultClip@337160605(DynamicType) {
        Code at absolute offset: 0x16ae40
    }

    bool hitTest(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfc80c
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfd920
    }
}

class _RenderCustomClip@337160605<T> extends RenderProxyBox {

    _RenderCustomClip@337160605 _RenderCustomClip@337160605.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:clipper(DynamicType, DynamicType) {
        Code at absolute offset: 0xca674
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x126f10
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x1265a8
    }

    VoidType _markNeedsClip@337160605(DynamicType) {
        Code at absolute offset: 0xca62c
    }

    VoidType set:clipBehavior(DynamicType, DynamicType) {
        Code at absolute offset: 0xca5c8
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x101db4
    }

    VoidType _updateClip@337160605(DynamicType) {
        Code at absolute offset: 0xc9df8
    }

    Rect describeApproximatePaintClip(DynamicType, DynamicType) {
        Code at absolute offset: 0xfff7c
    }

    DynamicType get:_markNeedsClip@337160605(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _DecorationClipper@459235064 extends CustomClipper {

    Path getClip(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool shouldReclip(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
}

class DecoratedBox extends SingleChildRenderObjectWidget {

    RenderDecoratedBox createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a61c
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x17672c
    }
}

class Container extends StatelessWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    Container Container.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xca158
    }

    EdgeInsetsGeometry get:_paddingIncludingDecoration@459235064(DynamicType) {
        Code at absolute offset: 0xca0a4
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xeb1f8
    }
}

class RenderExcludeSemantics extends RenderProxyBox {

    RenderExcludeSemantics RenderExcludeSemantics.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc9cb8
    }

    VoidType set:excluding(DynamicType, DynamicType) {
        Code at absolute offset: 0xca940
    }

    VoidType visitChildrenForSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0xff95c
    }
}

class RenderDecoratedBox extends RenderProxyBox {

    RenderDecoratedBox RenderDecoratedBox.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcab30
    }

    VoidType set:decoration(DynamicType, DynamicType) {
        Code at absolute offset: 0xcaa94
    }

    VoidType set:position(DynamicType, DynamicType) {
        Code at absolute offset: 0xcaa24
    }

    VoidType set:configuration(DynamicType, DynamicType) {
        Code at absolute offset: 0xca9a8
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x126600
    }

    bool hitTestSelf(DynamicType, DynamicType) {
        Code at absolute offset: 0xf74f8
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfdb6c
    }
}

class RenderClipRect extends _RenderCustomClip@337160605 {

    RenderClipRect RenderClipRect.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcac08
    }

    Rect get:_defaultClip@337160605(DynamicType) {
        Code at absolute offset: 0x105edc
    }

    bool hitTest(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfc654
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfd540
    }
}

class CustomClipper<T> extends Listenable {

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    Rect getApproximateClipRect(DynamicType, DynamicType) {
        Code at absolute offset: 0xcac6c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x149a28
    }
}

class ShapeBorderClipper extends CustomClipper {

    Path getClip(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool shouldReclip(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class RenderOpacity extends RenderProxyBox {

    RenderOpacity RenderOpacity.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcae00
    }

    bool get:alwaysNeedsCompositing(DynamicType) {
        Code at absolute offset: 0xfc030
    }

    VoidType set:opacity(DynamicType, DynamicType) {
        Code at absolute offset: 0xcacbc
    }

    VoidType set:alwaysIncludeSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfd278
    }

    VoidType visitChildrenForSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0xff6a8
    }
}

class RenderAnnotatedRegion<T> extends RenderProxyBox {

    bool get:alwaysNeedsCompositing(DynamicType) {
        Code at absolute offset: 0xfc0e0
    }

    RenderAnnotatedRegion RenderAnnotatedRegion.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcafe0
    }

    T get:value(DynamicType) {
        Code at absolute offset: 0xcafca
    }

    VoidType set:value(DynamicType, DynamicType) {
        Code at absolute offset: 0xcaec2
    }

    VoidType set:sized(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfe2d0
    }
}

class RenderPhysicalModel extends _RenderPhysicalModelBase@337160605 {

    RenderPhysicalModel RenderPhysicalModel.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcb164
    }

    PhysicalModelLayer get:layer(DynamicType) {
        Code at absolute offset: 0xcb110
    }

    VoidType set:shape(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:borderRadius(DynamicType, DynamicType) {
        Code at absolute offset: 0xcb088
    }

    RRect get:_defaultClip@337160605(DynamicType) {
        Code at absolute offset: 0x16ac9c
    }

    bool hitTest(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfc730
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfd6a4
    }
}

class RenderBlockSemantics extends RenderProxyBox {

    RenderBlockSemantics RenderBlockSemantics.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:blocking(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType describeSemanticsConfiguration(DynamicType, DynamicType) {
        Code at absolute offset: 0xf88a4
    }
}

class RenderIgnorePointer extends RenderProxyBox {

    RenderIgnorePointer RenderIgnorePointer.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcb348
    }

    VoidType set:ignoring(DynamicType, DynamicType) {
        Code at absolute offset: 0xcb2d4
    }

    VoidType set:ignoringSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0xcb250
    }

    bool get:_effectiveIgnoringSemantics@337160605(DynamicType) {
        Code at absolute offset: 0xcb21c
    }

    bool hitTest(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfca84
    }

    VoidType visitChildrenForSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0xff7c0
    }
}

class RenderFractionalTranslation extends RenderProxyBox {

    RenderFractionalTranslation RenderFractionalTranslation.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcb458
    }

    VoidType set:translation(DynamicType, DynamicType) {
        Code at absolute offset: 0xcb3c4
    }

    bool hitTest(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfc978
    }

    bool hitTestChildren(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf78f4
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfe078
    }

    VoidType applyPaintTransform(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x106950
    }
}

class IgnorePointer extends SingleChildRenderObjectWidget {

    RenderIgnorePointer createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a228
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x17600c
    }
}

class AbsorbPointer extends SingleChildRenderObjectWidget {

    RenderAbsorbPointer createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a280
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1760ac
    }
}

class DefaultAssetBundle extends InheritedWidget {

    AssetBundle of(DynamicType) {
        Code at absolute offset: 0xcb5b4
    }
}

class CachingAssetBundle extends AssetBundle {

    CachingAssetBundle CachingAssetBundle.(DynamicType) {
        Code at absolute offset: 0xcb668
    }

    Future loadString(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcbad4
    }
}

class PlatformAssetBundle extends CachingAssetBundle {

    PlatformAssetBundle PlatformAssetBundle.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Future load(DynamicType, DynamicType) {
        Code at absolute offset: 0xcb708
    }
}

class AssetBundle extends Object {

    Future loadString(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcb95c
    }

    String _utf8decode@368177032(DynamicType) {
        Code at absolute offset: 0xcb860
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x153990
    }
}

class :: {
    AssetBundle rootBundle

    AssetBundle get:rootBundle() {
        Code at absolute offset: 0xfaa0
    }

    AssetBundle _initRootBundle@368177032() {
        Code at absolute offset: 0xcb634
    }
}

class PositionedDirectional extends StatelessWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xcbb64
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xeb06c
    }
}

class CustomMultiChildLayout extends MultiChildRenderObjectWidget {

    CustomMultiChildLayout CustomMultiChildLayout.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcbb80
    }

    RenderCustomMultiChildLayoutBox createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a964
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x176a78
    }
}

class LayoutId extends ParentDataWidget {

    LayoutId LayoutId.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x98818
    }

    VoidType applyParentData(DynamicType, DynamicType) {
        Code at absolute offset: 0x16babc
    }
}

class ClipRect extends SingleChildRenderObjectWidget {

    RenderClipRect createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169c48
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x17557c
    }

    VoidType didUnmountRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x15f4d8
    }
}

class Listener extends StatelessWidget {

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xeb12c
    }
}

class _RawMouseRegion@397167661 extends SingleChildRenderObjectWidget {

    RenderMouseRegion createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a14c
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175eec
    }
}

class KeyedSubtree extends StatelessWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xeb194
    }
}

class Offstage extends SingleChildRenderObjectWidget {

    RenderOffstage createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a084
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175d50
    }

    _OffstageElement@397167661 createElement(DynamicType) {
        Code at absolute offset: 0x13d00c
    }
}

class RepaintBoundary extends SingleChildRenderObjectWidget {

    RenderRepaintBoundary createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a1ec
    }
}

class MergeSemantics extends SingleChildRenderObjectWidget {

    RenderMergeSemantics createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a4e0
    }
}

class ColoredBox extends SingleChildRenderObjectWidget {

    _RenderColoredBox@397167661 createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a5bc
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1766a0
    }
}

class SizedBox extends SingleChildRenderObjectWidget {

    RenderConstrainedBox createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169f9c
    }

    BoxConstraints get:_additionalConstraints@397167661(DynamicType) {
        Code at absolute offset: 0xcbc74
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175b84
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x13d394
    }
}

class _RenderColoredBox@397167661 extends RenderProxyBoxWithHitTestBehavior {

    _RenderColoredBox@397167661 _RenderColoredBox@397167661.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:color(DynamicType, DynamicType) {
        Code at absolute offset: 0xcbe68
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfd124
    }
}

class CustomSingleChildLayout extends SingleChildRenderObjectWidget {

    RenderCustomSingleChildLayoutBox createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169f50
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175af8
    }
}

class Semantics extends SingleChildRenderObjectWidget {

    Semantics Semantics.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xab06c
    }

    RenderSemanticsAnnotations createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a2cc
    }

    TextDirection _getTextDirection@397167661(DynamicType, DynamicType) {
        Code at absolute offset: 0xcbf00
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x176160
    }
}

class Opacity extends SingleChildRenderObjectWidget {

    RenderOpacity createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169b84
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175408
    }
}

class ConstrainedBox extends SingleChildRenderObjectWidget {

    RenderConstrainedBox createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169fe8
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175c14
    }
}

class RichText extends MultiChildRenderObjectWidget {

    RichText RichText.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcf8cc
    }

    List _extractChildren@397167661(DynamicType) {
        Code at absolute offset: 0xcf874
    }

    RenderParagraph createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16aa28
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x176bcc
    }
}

class RenderParagraph extends _RenderParagraph&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin&RelayoutWhenSystemFontsChangeMixin@334149678 {
    List _placeholderSpans@334149678

    List get:_placeholderSpans@334149678(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    RenderParagraph RenderParagraph.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xce838
    }

    VoidType setupParentData(DynamicType, DynamicType) {
        Code at absolute offset: 0xffd0c
    }

    InlineSpan get:text(DynamicType) {
        Code at absolute offset: 0xced9c
    }

    VoidType set:text(DynamicType, DynamicType) {
        Code at absolute offset: 0xcf324
    }

    VoidType _extractPlaceholderSpans@334149678(DynamicType, DynamicType) {
        Code at absolute offset: 0xce99c
    }

    VoidType set:textAlign(DynamicType, DynamicType) {
        Code at absolute offset: 0xcf774
    }

    TextDirection get:textDirection(DynamicType) {
        Code at absolute offset: 0xcf488
    }

    VoidType set:textDirection(DynamicType, DynamicType) {
        Code at absolute offset: 0xcf428
    }

    VoidType set:softWrap(DynamicType, DynamicType) {
        Code at absolute offset: 0xcf71c
    }

    VoidType set:overflow(DynamicType, DynamicType) {
        Code at absolute offset: 0xcd730
    }

    double get:textScaleFactor(DynamicType) {
        Code at absolute offset: 0xced80
    }

    VoidType set:textScaleFactor(DynamicType, DynamicType) {
        Code at absolute offset: 0xcf7dc
    }

    VoidType set:maxLines(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    Locale get:locale(DynamicType) {
        Code at absolute offset: 0xcf85c
    }

    VoidType set:locale(DynamicType, DynamicType) {
        Code at absolute offset: 0xcedc8
    }

    VoidType set:strutStyle(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:textWidthBasis(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:textHeightBehavior(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    double computeDistanceToActualBaseline(DynamicType, DynamicType) {
        Code at absolute offset: 0xf6d64
    }

    bool hitTestSelf(DynamicType, DynamicType) {
        Code at absolute offset: 0x80f34
    }

    bool hitTestChildren(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf7c28
    }

    VoidType handleEvent(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x106f4c
    }

    VoidType _layoutText@334149678(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xce718
    }

    VoidType systemFontsDidChange(DynamicType) {
        Code at absolute offset: 0xce678
    }

    VoidType _layoutTextWithConstraints@334149678(DynamicType, DynamicType) {
        Code at absolute offset: 0xce6b8
    }

    VoidType _layoutChildren@334149678(DynamicType, DynamicType) {
        Code at absolute offset: 0xcea38
    }

    VoidType _setParentData@334149678(DynamicType) {
        Code at absolute offset: 0xcf4b4
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x1045d0
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfebec
    }

    List getBoxesForSelection(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    List _combineSemanticsInfo@334149678(DynamicType) {
        Code at absolute offset: 0xcee58
    }

    VoidType describeSemanticsConfiguration(DynamicType, DynamicType) {
        Code at absolute offset: 0xf890c
    }

    VoidType assembleSemanticsNode(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x107844
    }

    VoidType clearSemantics(DynamicType) {
        Code at absolute offset: 0x106cf0
    }

    DynamicType get:systemFontsDidChange(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _RenderParagraph&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin&RelayoutWhenSystemFontsChangeMixin@334149678 extends _RenderParagraph&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@334149678 implements RelayoutWhenSystemFontsChangeMixin {

    _RenderParagraph&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin&RelayoutWhenSystemFontsChangeMixin@334149678 _RenderParagraph&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin&RelayoutWhenSystemFontsChangeMixin@334149678.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType systemFontsDidChange(DynamicType) {
        Code at absolute offset: 0xcc968
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x1271ec
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x1267ac
    }
}

class _RenderParagraph&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@334149678 extends _RenderParagraph&RenderBox&ContainerRenderObjectMixin@334149678 implements RenderBoxContainerDefaultsMixin {

    _RenderParagraph&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@334149678 _RenderParagraph&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@334149678.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _RenderParagraph&RenderBox&ContainerRenderObjectMixin@334149678 extends RenderBox implements ContainerRenderObjectMixin {

    _RenderParagraph&RenderBox&ContainerRenderObjectMixin@334149678 _RenderParagraph&RenderBox&ContainerRenderObjectMixin@334149678.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _insertIntoChildList@333266271(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcc448
    }

    VoidType insert(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x174244
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0xcbfbe
    }

    VoidType _removeFromChildList@333266271(DynamicType, DynamicType) {
        Code at absolute offset: 0xcc228
    }

    VoidType remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x161d44
    }

    VoidType move(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16d15c
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0xcc144
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0xcc068
    }

    VoidType redepthChildren(DynamicType) {
        Code at absolute offset: 0x127b00
    }

    VoidType visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0x106318
    }

    RenderBox get:firstChild(DynamicType) {
        Code at absolute offset: 0xcc054
    }

    RenderBox childAfter(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class TextParentData extends ContainerBoxParentData {

    String toString(DynamicType) {
        Code at absolute offset: 0x152668
    }
}

class :: {
}

class TextOverflow extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class PlaceholderSpan extends InlineSpan {
}

class InlineSpan extends DiagnosticableTree {

    bool visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    InlineSpan getSpanForPosition(DynamicType, DynamicType) {
        Code at absolute offset: 0xcd678
    }

    List getSemanticsInformation(DynamicType) {
        Code at absolute offset: 0xccb04
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0xcca44
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0xcca08
    }
}

class :: {
}

class InlineSpanSemanticsInformation extends Object {

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x184788
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15b304
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x151d4c
    }
}

class Accumulator extends Object {

    VoidType increment(DynamicType, DynamicType) {
        Code at absolute offset: 0xcc9e4
    }
}

class TextSpan extends InlineSpan {

    VoidType build(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcd3d4
    }

    bool visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0xcd1c4
    }

    InlineSpan getSpanForPositionVisitor(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcd070
    }

    VoidType computeSemanticsInformation(DynamicType, DynamicType) {
        Code at absolute offset: 0xccb4c
    }

    RenderComparison compareTo(DynamicType, DynamicType) {
        Code at absolute offset: 0xccda8
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17e9b8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x159d00
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x13d6c4
    }
}

class :: {
}

class :: {
}

class TextPainter extends Object {

    VoidType markNeedsLayout(DynamicType) {
        Code at absolute offset: 0xcd854
    }

    VoidType set:text(DynamicType, DynamicType) {
        Code at absolute offset: 0xce560
    }

    VoidType set:textAlign(DynamicType, DynamicType) {
        Code at absolute offset: 0xcdf24
    }

    VoidType set:textDirection(DynamicType, DynamicType) {
        Code at absolute offset: 0xcd9c4
    }

    VoidType set:textScaleFactor(DynamicType, DynamicType) {
        Code at absolute offset: 0xce414
    }

    VoidType set:ellipsis(DynamicType, DynamicType) {
        Code at absolute offset: 0xcd7d4
    }

    VoidType set:locale(DynamicType, DynamicType) {
        Code at absolute offset: 0xcdf90
    }

    VoidType setPlaceholderDimensions(DynamicType, DynamicType) {
        Code at absolute offset: 0xce4b0
    }

    ParagraphStyle _createParagraphStyle@302105366(DynamicType, DynamicType) {
        Code at absolute offset: 0xcdcb4
    }

    double _applyFloatingPointHack@302105366(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    double get:maxIntrinsicWidth(DynamicType) {
        Code at absolute offset: 0xcde84
    }

    double get:width(DynamicType) {
        Code at absolute offset: 0xcdc58
    }

    double get:height(DynamicType) {
        Code at absolute offset: 0xcdb1c
    }

    Size get:size(DynamicType) {
        Code at absolute offset: 0xcda30
    }

    double computeDistanceToActualBaseline(DynamicType, DynamicType) {
        Code at absolute offset: 0xce470
    }

    bool get:didExceedMaxLines(DynamicType) {
        Code at absolute offset: 0xcde44
    }

    VoidType layout(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xce010
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcd8f0
    }

    List getBoxesForSelection(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcd93c
    }

    TextPosition getPositionForOffset(DynamicType, DynamicType) {
        Code at absolute offset: 0xcdee0
    }
}

class :: {
}

class PlaceholderDimensions extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x151dd4
    }
}

class TextWidthBasis extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class Align extends SingleChildRenderObjectWidget {

    RenderPositionedBox createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169edc
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175a30
    }
}

class _OffstageElement@397167661 extends SingleChildRenderObjectElement {

    _OffstageElement@397167661 _OffstageElement@397167661.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Offstage get:widget(DynamicType) {
        Code at absolute offset: 0x13d80c
    }
}

class CustomPaint extends SingleChildRenderObjectWidget {

    RenderCustomPaint createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169bd8
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1754a8
    }

    VoidType didUnmountRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x15f43c
    }
}

class RenderCustomPaint extends RenderProxyBox {

    RenderCustomPaint RenderCustomPaint.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd10e0
    }

    VoidType set:painter(DynamicType, DynamicType) {
        Code at absolute offset: 0xd15d4
    }

    VoidType set:foregroundPainter(DynamicType, DynamicType) {
        Code at absolute offset: 0xd153c
    }

    VoidType _didUpdatePainter@320012902(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd12dc
    }

    VoidType set:preferredSize(DynamicType, DynamicType) {
        Code at absolute offset: 0xd1648
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x126d5c
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x126484
    }

    bool hitTestChildren(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf76c0
    }

    bool hitTestSelf(DynamicType, DynamicType) {
        Code at absolute offset: 0xf7490
    }

    VoidType performResize(DynamicType) {
        Code at absolute offset: 0xf7098
    }

    VoidType _paintWithPainter@320012902(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd11ac
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfd048
    }

    VoidType describeSemanticsConfiguration(DynamicType, DynamicType) {
        Code at absolute offset: 0xf8320
    }

    VoidType assembleSemanticsNode(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1070d4
    }

    VoidType clearSemantics(DynamicType) {
        Code at absolute offset: 0x106ca4
    }

    List _updateSemanticsChildren@320012902(DynamicType, DynamicType) {
        Code at absolute offset: 0xd0b5c
    }

    bool _canUpdateSemanticsChild@320012902(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    SemanticsNode _updateSemanticsChild@320012902(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
}

class CustomPainterSemantics extends Object {
}

class CustomPainter extends Listenable {

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    bool shouldRebuildSemantics(DynamicType, DynamicType) {
        Code at absolute offset: 0xcfb40
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1499b4
    }
}

class _ShapeBorderPainter@206372823 extends CustomPainter {

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x179b14
    }

    bool shouldRepaint(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
    Map kMaterialEdges

    Map get:kMaterialEdges() {
        Code at absolute offset: 0xfaa0
    }
}

class MaterialType extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class _MaterialState@206372823 extends __MaterialState&State&TickerProviderStateMixin@206372823 {

    _MaterialState@206372823 _MaterialState@206372823.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Color _getBackgroundColor@206372823(DynamicType, DynamicType) {
        Code at absolute offset: 0xd046c
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf1278
    }

    Widget _transparentInterior@206372823(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd0430
    }

    ShapeBorder _getShape@206372823(DynamicType) {
        Code at absolute offset: 0xcfe68
    }
}

class RoundedRectangleBorder extends OutlinedBorder {

    ShapeBorder scale(DynamicType, DynamicType) {
        Code at absolute offset: 0x165468
    }

    ShapeBorder lerpFrom(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x162794
    }

    ShapeBorder lerpTo(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x167bfc
    }

    Path getOuterPath(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x164b34
    }

    VoidType paint(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15ba24
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x180f40
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x157670
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14d3e4
    }
}

class :: {
}

class _RoundedRectangleToCircleBorder@297493913 extends OutlinedBorder {

    ShapeBorder scale(DynamicType, DynamicType) {
        Code at absolute offset: 0x1654e0
    }

    ShapeBorder lerpFrom(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x162928
    }

    ShapeBorder lerpTo(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x167d20
    }

    Rect _adjustRect@297493913(DynamicType, DynamicType) {
        Code at absolute offset: 0xd00e0
    }

    BorderRadius _adjustBorderRadius@297493913(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xcfff8
    }

    Path getOuterPath(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x164c00
    }

    VoidType paint(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15bc40
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x181018
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x1595b0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14d45c
    }
}

class __MaterialState&State&TickerProviderStateMixin@206372823 extends State implements TickerProviderStateMixin {

    Ticker createTicker(DynamicType, DynamicType) {
        Code at absolute offset: 0x1355ac
    }

    VoidType _removeTicker@410311458(DynamicType, DynamicType) {
        Code at absolute offset: 0x1740d8
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeDependencies(DynamicType) {
        Code at absolute offset: 0x939c8
    }
}

class Material extends StatefulWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    MaterialInkController of(DynamicType) {
        Code at absolute offset: 0xd0538
    }

    _MaterialState@206372823 createState(DynamicType) {
        Code at absolute offset: 0x13de54
    }
}

class _InkFeatures@206372823 extends SingleChildRenderObjectWidget {

    _RenderInkFeatures@206372823 createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169aa0
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175314
    }
}

class InkFeature extends Object {

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xd0834
    }

    VoidType _paint@206372823(DynamicType, DynamicType) {
        Code at absolute offset: 0xd0594
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x76a5c
    }
}

class _ShapeBorderPaint@206372823 extends StatelessWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xeab50
    }
}

class ShapeBorderTween extends Tween {

    ShapeBorder lerp(DynamicType, DynamicType) {
        Code at absolute offset: 0x1573b4
    }
}

class MaterialInkController extends Object {
}

class _MaterialInterior@206372823 extends ImplicitlyAnimatedWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x36838
    }

    _MaterialInteriorState@206372823 createState(DynamicType) {
        Code at absolute offset: 0x13de90
    }
}

class _MaterialInteriorState@206372823 extends AnimatedWidgetBaseState {

    VoidType forEachTween(DynamicType, DynamicType) {
        Code at absolute offset: 0x16fef4
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf1760
    }
}

class _RenderInkFeatures@206372823 extends RenderProxyBox implements MaterialInkController {

    _RenderInkFeatures@206372823 _RenderInkFeatures@206372823.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd0ad8
    }

    VoidType addInkFeature(DynamicType, DynamicType) {
        Code at absolute offset: 0xd09bc
    }

    VoidType _removeFeature@206372823(DynamicType, DynamicType) {
        Code at absolute offset: 0xd08a4
    }

    VoidType _didChangeLayout@206372823(DynamicType) {
        Code at absolute offset: 0xd0968
    }

    bool hitTestSelf(DynamicType, DynamicType) {
        Code at absolute offset: 0xf747c
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfce04
    }
}

class _SemanticsDebuggerPainter@447241909 extends CustomPainter {

    bool shouldRepaint(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
}

class SemanticsDebugger extends StatefulWidget {
}

class _SemanticsClient@447241909 extends ChangeNotifier {

    VoidType _didUpdateSemantics@447241909(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _SemanticsDebuggerState@447241909 extends __SemanticsDebuggerState&State&WidgetsBindingObserver@447241909 {

    VoidType _update@447241909(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _handleTap@447241909(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _handleLongPress@447241909(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class __SemanticsDebuggerState&State&WidgetsBindingObserver@447241909 extends State implements WidgetsBindingObserver {
}

class PhysicalShape extends SingleChildRenderObjectWidget {

    RenderPhysicalShape createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169d24
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175724
    }
}

class ExcludeSemantics extends SingleChildRenderObjectWidget {

    RenderExcludeSemantics createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a570
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x176614
    }
}

class PhysicalModel extends SingleChildRenderObjectWidget {

    RenderPhysicalModel createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169c9c
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x17561c
    }
}

class _MouseRegionState@397167661 extends State {

    VoidType handleExit(DynamicType, DynamicType) {
        Code at absolute offset: 0xd17d4
    }

    _Closure@0150898 getHandleExit(DynamicType) {
        Code at absolute offset: 0xd184c
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf3890
    }

    DynamicType get:handleExit(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class Center extends Align {
}

class Flex extends MultiChildRenderObjectWidget {

    Flex Flex.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd3090
    }

    TextDirection getEffectiveTextDirection(DynamicType, DynamicType) {
        Code at absolute offset: 0xd2fb8
    }

    RenderFlex createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a8bc
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x176938
    }
}

class RenderFlex extends _RenderFlex&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin&DebugOverflowIndicatorMixin@325478290 {

    RenderFlex RenderFlex.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd2cf4
    }

    VoidType set:direction(DynamicType, DynamicType) {
        Code at absolute offset: 0xd2ef0
    }

    VoidType set:mainAxisAlignment(DynamicType, DynamicType) {
        Code at absolute offset: 0xd2c2c
    }

    VoidType set:mainAxisSize(DynamicType, DynamicType) {
        Code at absolute offset: 0xd2f54
    }

    VoidType set:crossAxisAlignment(DynamicType, DynamicType) {
        Code at absolute offset: 0x917a4
    }

    VoidType set:textDirection(DynamicType, DynamicType) {
        Code at absolute offset: 0xd2c90
    }

    VoidType set:verticalDirection(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:textBaseline(DynamicType, DynamicType) {
        Code at absolute offset: 0xd2e30
    }

    VoidType set:clipBehavior(DynamicType, DynamicType) {
        Code at absolute offset: 0xd2e94
    }

    VoidType setupParentData(DynamicType, DynamicType) {
        Code at absolute offset: 0xffc1c
    }

    double computeDistanceToActualBaseline(DynamicType, DynamicType) {
        Code at absolute offset: 0xf6d08
    }

    int _getFlex@325478290(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x101fdc
    }

    bool hitTestChildren(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf7b48
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfe508
    }

    Rect describeApproximatePaintClip(DynamicType, DynamicType) {
        Code at absolute offset: 0x10001c
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x13e2c0
    }
}

class _RenderFlex&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin&DebugOverflowIndicatorMixin@325478290 extends _RenderFlex&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@325478290 implements DebugOverflowIndicatorMixin {

    _RenderFlex&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin&DebugOverflowIndicatorMixin@325478290 _RenderFlex&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin&DebugOverflowIndicatorMixin@325478290.(DynamicType) {
        Code at absolute offset: 0xd2a14
    }
}

class _RenderFlex&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@325478290 extends _RenderFlex&RenderBox&ContainerRenderObjectMixin@325478290 implements RenderBoxContainerDefaultsMixin {

    _RenderFlex&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@325478290 _RenderFlex&RenderBox&ContainerRenderObjectMixin&RenderBoxContainerDefaultsMixin@325478290.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    double defaultComputeDistanceToFirstActualBaseline(DynamicType, DynamicType) {
        Code at absolute offset: 0xd28a4
    }

    double defaultComputeDistanceToHighestActualBaseline(DynamicType, DynamicType) {
        Code at absolute offset: 0xd2608
    }

    bool defaultHitTestChildren(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd243c
    }

    VoidType defaultPaint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd21b4
    }

    DynamicType get:defaultPaint(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _RenderFlex&RenderBox&ContainerRenderObjectMixin@325478290 extends RenderBox implements ContainerRenderObjectMixin {

    _RenderFlex&RenderBox&ContainerRenderObjectMixin@325478290 _RenderFlex&RenderBox&ContainerRenderObjectMixin@325478290.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _insertIntoChildList@333266271(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd1bac
    }

    VoidType insert(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x173fb4
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0xd18f6
    }

    VoidType _removeFromChildList@333266271(DynamicType, DynamicType) {
        Code at absolute offset: 0xd198c
    }

    VoidType remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x161c44
    }

    VoidType move(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16cdd4
    }

    VoidType attach(DynamicType, DynamicType) {
        Code at absolute offset: 0x127058
    }

    VoidType detach(DynamicType) {
        Code at absolute offset: 0x1266a4
    }

    VoidType redepthChildren(DynamicType) {
        Code at absolute offset: 0x127920
    }

    VoidType visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0x1060c4
    }
}

class FlexParentData extends ContainerBoxParentData {

    String toString(DynamicType) {
        Code at absolute offset: 0x1525c0
    }
}

class DebugOverflowIndicatorMixin extends RenderObject {
}

class :: {
}

class _OverflowSide@322233388 extends Object {
}

class :: {

    bool _startIsTopLeft@325478290(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd2b24
    }
}

class FallThroughError extends Error {

    FallThroughError FallThroughError._create@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd2bd4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x13f654
    }
}

class MainAxisSize extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class MainAxisAlignment extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class FlexFit extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class CrossAxisAlignment extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class MouseRegion extends StatefulWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xbd9e8
    }

    _MouseRegionState@397167661 createState(DynamicType) {
        Code at absolute offset: 0x13dfd4
    }
}

class Positioned extends ParentDataWidget {

    Positioned Positioned.directional(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd31b8
    }

    VoidType applyParentData(DynamicType, DynamicType) {
        Code at absolute offset: 0x16bbf0
    }
}

class Transform extends SingleChildRenderObjectWidget {

    RenderTransform createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169da4
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175818
    }
}

class Builder extends StatelessWidget {

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xeb1a8
    }
}

class FractionalTranslation extends SingleChildRenderObjectWidget {

    RenderFractionalTranslation createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169e28
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1758f0
    }
}

class Padding extends SingleChildRenderObjectWidget {

    RenderPadding createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169e80
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175990
    }
}

class LimitedBox extends SingleChildRenderObjectWidget {

    RenderLimitedBox createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a034
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175ca0
    }
}

class BlockSemantics extends SingleChildRenderObjectWidget {

    RenderBlockSemantics createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a51c
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x17658c
    }
}

class Column extends Flex {

    Column Column.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd32f0
    }
}

class _ReadingOrderDirectionalGroupData@442280150 extends _State&Object&Diagnosticable@398042623 {

    TextDirection get:directionality(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Rect get:rect(DynamicType) {
        Code at absolute offset: 0xd3a9c
    }

    VoidType sortWithDirectionality(DynamicType, DynamicType) {
        Code at absolute offset: 0xd3a14
    }
}

class ReadingOrderTraversalPolicy extends _WidgetOrderTraversalPolicy&FocusTraversalPolicy&DirectionalFocusTraversalPolicyMixin@442280150 {

    ReadingOrderTraversalPolicy ReadingOrderTraversalPolicy.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    List _collectDirectionalityGroups@442280150(DynamicType, DynamicType) {
        Code at absolute offset: 0xd3c14
    }

    _ReadingOrderSortData@442280150 _pickNext@442280150(DynamicType, DynamicType) {
        Code at absolute offset: 0xd3820
    }

    Iterable sortDescendants(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x8d6c8
    }
}

class :: {

    BuildContext _getAncestor@442280150(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _focusAndEnsureVisible@442280150(DynamicType, DynamicType) {
        Code at absolute offset: 0xd4358
    }
}

class _FocusTraversalGroupMarker@442280150 extends InheritedWidget {

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x31fa8
    }
}

class FocusTraversalGroup extends StatefulWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xa451c
    }

    FocusTraversalPolicy of(DynamicType, DynamicType) {
        Code at absolute offset: 0xd5890
    }

    _FocusTraversalGroupState@442280150 createState(DynamicType) {
        Code at absolute offset: 0x13e02c
    }
}

class _DirectionalPolicyDataEntry@442280150 extends Object {
}

class _DirectionalPolicyData@442280150 extends Object {
}

class _FocusTraversalGroupState@442280150 extends State {

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12bd60
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xeec18
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf3aa4
    }
}

class DirectionalFocusTraversalPolicyMixin extends FocusTraversalPolicy {
}

class Focus extends StatefulWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415bc
    }

    FocusNode of(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd5ac0
    }

    _FocusState@427492240 createState(DynamicType) {
        Code at absolute offset: 0x13e00c
    }
}

class :: {
}

class _FocusScopeState@427492240 extends _FocusState@427492240 {

    FocusScopeNode _createNode@427492240(DynamicType) {
        Code at absolute offset: 0x174b5c
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf38c4
    }
}

class FocusScope extends Focus {

    FocusScopeNode of(DynamicType) {
        Code at absolute offset: 0xd5ba8
    }

    _FocusScopeState@427492240 createState(DynamicType) {
        Code at absolute offset: 0x13dfec
    }
}

class _FocusMarker@427492240 extends InheritedNotifier {
}

class _FocusState@427492240 extends State {

    FocusNode get:focusNode(DynamicType) {
        Code at absolute offset: 0xd6554
    }

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12bd34
    }

    VoidType _initNode@427492240(DynamicType) {
        Code at absolute offset: 0xd6014
    }

    FocusNode _createNode@427492240(DynamicType) {
        Code at absolute offset: 0x174c08
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xeeb28
    }

    VoidType didChangeDependencies(DynamicType) {
        Code at absolute offset: 0xf69ac
    }

    VoidType _handleAutofocus@427492240(DynamicType) {
        Code at absolute offset: 0xd5f5c
    }

    VoidType deactivate(DynamicType) {
        Code at absolute offset: 0xef44c
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf5788
    }

    VoidType _handleFocusChanged@427492240(DynamicType) {
        Code at absolute offset: 0xd5cec
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf398c
    }

    DynamicType get:_handleFocusChanged@427492240(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class FocusHighlightStrategy extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class UnfocusDisposition extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class DebugCreator extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x154754
    }
}

class BuildContext extends Object {
}

class InheritedElement extends ProxyElement {

    InheritedElement InheritedElement.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    InheritedWidget get:widget(DynamicType) {
        Code at absolute offset: 0x13dcc8
    }

    VoidType _updateInheritance@398042623(DynamicType) {
        Code at absolute offset: 0x13c4a0
    }

    VoidType setDependencies(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd689c
    }

    VoidType updateDependencies(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd6864
    }

    VoidType notifyDependent(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType updated(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType notifyClients(DynamicType, DynamicType) {
        Code at absolute offset: 0x15d530
    }
}

class LeafRenderObjectElement extends RenderObjectElement {

    LeafRenderObjectElement LeafRenderObjectElement.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType insertRenderObjectChild(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType moveRenderObjectChild(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType removeRenderObjectChild(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class _State&Object&Diagnosticable@398042623 extends Object implements Diagnosticable {

    String toString(DynamicType, DynamicType) {
        Code at absolute offset: 0x14bb48
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x76a5c
    }
}

class LabeledGlobalKey<T> extends GlobalKey {

    String toString(DynamicType) {
        Code at absolute offset: 0x14c3c4
    }
}

class LeafRenderObjectWidget extends RenderObjectWidget {

    LeafRenderObjectElement createElement(DynamicType) {
        Code at absolute offset: 0x13d1e8
    }
}

class ErrorWidget extends LeafRenderObjectWidget {
    _Closure@0150898 builder

    _Closure@0150898 get:builder() {
        Code at absolute offset: 0xfaa0
    }

    String get:message(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    ErrorWidget ErrorWidget.withDetails(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Widget _defaultErrorWidgetBuilder@398042623(DynamicType) {
        Code at absolute offset: 0xd691c
    }

    RenderBox createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16abec
    }
}

class RootRenderObjectElement extends RenderObjectElement {

    RootRenderObjectElement RootRenderObjectElement.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType assignOwner(DynamicType, DynamicType) {
        Code at absolute offset: 0xd6a30
    }

    VoidType mount(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd69fc
    }
}

class _InactiveElements@398042623 extends Object {

    _InactiveElements@398042623 _InactiveElements@398042623.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _unmount@398042623(DynamicType, DynamicType) {
        Code at absolute offset: 0xd6cd0
    }

    VoidType _unmountAll@398042623(DynamicType) {
        Code at absolute offset: 0xd6da4
    }

    VoidType _deactivateRecursively@398042623(DynamicType) {
        Code at absolute offset: 0xd6b48
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0xd6ae8
    }

    VoidType remove(DynamicType, DynamicType) {
        Code at absolute offset: 0xd6d5c
    }

    DynamicType get:_unmount@398042623(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class RenderObjectElement extends Element {

    RenderObjectElement RenderObjectElement.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    RenderObjectWidget get:widget(DynamicType) {
        Code at absolute offset: 0x13db0c
    }

    RenderObject get:renderObject(DynamicType) {
        Code at absolute offset: 0x13cda8
    }

    ParentDataElement _findAncestorParentDataElement@398042623(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType mount(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13641c
    }

    VoidType update(DynamicType, DynamicType) {
        Code at absolute offset: 0x142468
    }

    VoidType performRebuild(DynamicType) {
        Code at absolute offset: 0x1568ec
    }

    List updateChildren(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd6edc
    }

    VoidType deactivate(DynamicType) {
        Code at absolute offset: 0x135408
    }

    VoidType unmount(DynamicType) {
        Code at absolute offset: 0x16aec0
    }

    VoidType _updateParentData@398042623(DynamicType, DynamicType) {
        Code at absolute offset: 0xd6e80
    }

    VoidType _updateSlot@398042623(DynamicType, DynamicType) {
        Code at absolute offset: 0x136574
    }

    VoidType attachRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x1370dc
    }

    VoidType detachRenderObject(DynamicType) {
        Code at absolute offset: 0x13c8d8
    }
}

class _StateLifecycle@398042623 extends Object {
}

class SingleChildRenderObjectWidget extends RenderObjectWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    SingleChildRenderObjectElement createElement(DynamicType) {
        Code at absolute offset: 0x13d044
    }
}

class Element extends DiagnosticableTree implements BuildContext {
    int _nextHashCode@398042623

    Element Element.(DynamicType, DynamicType) {
        Code at absolute offset: 0x8e0ac
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17e938
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x133410
    }

    int _sort@398042623(DynamicType, DynamicType) {
        Code at absolute offset: 0xd8454
    }

    Widget get:widget(DynamicType) {
        Code at absolute offset: 0xee40
    }

    RenderObject get:renderObject(DynamicType) {
        Code at absolute offset: 0x13cdbc
    }

    DiagnosticsNode describeElement(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x99fa8
    }

    VoidType visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType visitChildElements(DynamicType, DynamicType) {
        Code at absolute offset: 0xb70c4
    }

    Element updateChild(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd7bdc
    }

    VoidType mount(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd887c
    }

    VoidType update(DynamicType, DynamicType) {
        Code at absolute offset: 0xd8420
    }

    VoidType updateSlotForChild(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd82a4
    }

    VoidType _updateSlot@398042623(DynamicType, DynamicType) {
        Code at absolute offset: 0x136604
    }

    VoidType _updateDepth@398042623(DynamicType, DynamicType) {
        Code at absolute offset: 0xd8034
    }

    VoidType detachRenderObject(DynamicType) {
        Code at absolute offset: 0x13c97c
    }

    VoidType attachRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x137330
    }

    Element _retakeInactiveElement@398042623(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd8138
    }

    Element inflateWidget(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd7d84
    }

    VoidType deactivateChild(DynamicType, DynamicType) {
        Code at absolute offset: 0xd8320
    }

    VoidType forgetChild(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType _activateWithParent@398042623(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xd7ed0
    }

    VoidType _activateRecursively@398042623(DynamicType) {
        Code at absolute offset: 0xd7f4c
    }

    VoidType activate(DynamicType) {
        Code at absolute offset: 0x136b00
    }

    VoidType deactivate(DynamicType) {
        Code at absolute offset: 0x135480
    }

    VoidType unmount(DynamicType) {
        Code at absolute offset: 0x16b114
    }

    RenderObject findRenderObject(DynamicType) {
        Code at absolute offset: 0xc7448
    }

    Size get:size(DynamicType) {
        Code at absolute offset: 0xbae18
    }

    InheritedWidget dependOnInheritedElement(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15fd94
    }

    T dependOnInheritedWidgetOfExactType(DynamicType, DynamicType) {
        Code at absolute offset: 0x934cc
    }

    InheritedElement getElementForInheritedWidgetOfExactType(DynamicType) {
        Code at absolute offset: 0x8d5b8
    }

    VoidType _updateInheritance@398042623(DynamicType) {
        Code at absolute offset: 0x13c44c
    }

    T findAncestorStateOfType(DynamicType) {
        Code at absolute offset: 0x9a3c0
    }

    T findAncestorRenderObjectOfType(DynamicType) {
        Code at absolute offset: 0xb845c
    }

    VoidType visitAncestorElements(DynamicType, DynamicType) {
        Code at absolute offset: 0x8d4fc
    }

    VoidType didChangeDependencies(DynamicType) {
        Code at absolute offset: 0x13ca60
    }

    String debugGetCreatorChain(DynamicType, DynamicType) {
        Code at absolute offset: 0xd8634
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x13d6e4
    }

    bool _debugSetAllowIgnoredCallsToMarkNeedsBuild@398042623(DynamicType, DynamicType) {
        Code at absolute offset: 0x80f34
    }

    VoidType markNeedsBuild(DynamicType) {
        Code at absolute offset: 0x8df10
    }

    VoidType rebuild(DynamicType) {
        Code at absolute offset: 0xd8ae8
    }
}

class StatelessWidget extends Widget {

    StatelessElement createElement(DynamicType) {
        Code at absolute offset: 0x13ce38
    }
}

class State<T> extends _State&Object&Diagnosticable@398042623 {

    VoidType set:_widget@398042623(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf6878
    }

    VoidType setState(DynamicType, DynamicType) {
        Code at absolute offset: 0x9589c
    }

    VoidType deactivate(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeDependencies(DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class _ElementLifecycle@398042623 extends Object {
}

class StatefulWidget extends Widget {

    StatefulElement createElement(DynamicType) {
        Code at absolute offset: 0x13ce70
    }
}

class GlobalObjectKey<T> extends GlobalKey {

    Object get:value(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17fb28
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15a6e4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14c584
    }
}

class IndexedSlot<T> extends Object {

    T get:value(DynamicType) {
        Code at absolute offset: 0xf8ae
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x18726c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15b740
    }
}

class SingleChildRenderObjectElement extends RenderObjectElement {

    SingleChildRenderObjectElement SingleChildRenderObjectElement.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    SingleChildRenderObjectWidget get:widget(DynamicType) {
        Code at absolute offset: 0x13d8d0
    }

    VoidType visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0x13e8c0
    }

    VoidType forgetChild(DynamicType, DynamicType) {
        Code at absolute offset: 0x1575d0
    }

    VoidType mount(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x135d88
    }

    VoidType update(DynamicType, DynamicType) {
        Code at absolute offset: 0x141fb8
    }

    VoidType insertRenderObjectChild(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x176e6c
    }

    VoidType moveRenderObjectChild(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType removeRenderObjectChild(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x168cb8
    }
}

class StatelessElement extends ComponentElement {

    StatelessElement StatelessElement.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    StatelessWidget get:widget(DynamicType) {
        Code at absolute offset: 0x13db64
    }

    Widget build(DynamicType) {
        Code at absolute offset: 0x164ed8
    }

    VoidType update(DynamicType, DynamicType) {
        Code at absolute offset: 0x14254c
    }
}

class RenderObjectWidget extends Widget {

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didUnmountRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class GlobalKey<T> extends Key {
    Map _registry@398042623

    Map get:_registry@398042623() {
        Code at absolute offset: 0xfaa0
    }

    GlobalKey GlobalKey.(DynamicType, DynamicType) {
        Code at absolute offset: 0x98330
    }

    VoidType _register@398042623(DynamicType, DynamicType) {
        Code at absolute offset: 0xd8a70
    }

    VoidType _unregister@398042623(DynamicType, DynamicType) {
        Code at absolute offset: 0xd8b9c
    }

    Element get:_currentElement@398042623(DynamicType) {
        Code at absolute offset: 0x93880
    }

    BuildContext get:currentContext(DynamicType) {
        Code at absolute offset: 0xb4a98
    }

    T get:currentState(DynamicType) {
        Code at absolute offset: 0x93760
    }
}

class Widget extends DiagnosticableTree {

    Key get:key(DynamicType) {
        Code at absolute offset: 0x19b76
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x13d548
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17e938
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x159cd8
    }

    bool canUpdate(DynamicType, DynamicType) {
        Code at absolute offset: 0xd821c
    }
}

class InheritedWidget extends ProxyWidget {

    InheritedElement createElement(DynamicType) {
        Code at absolute offset: 0x13cf14
    }
}

class UniqueKey extends LocalKey {

    String toString(DynamicType) {
        Code at absolute offset: 0x14c33c
    }
}

class ProxyElement extends ComponentElement {

    ProxyElement ProxyElement.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    ProxyWidget get:widget(DynamicType) {
        Code at absolute offset: 0x8e1e8
    }

    Widget build(DynamicType) {
        Code at absolute offset: 0x165084
    }

    VoidType update(DynamicType, DynamicType) {
        Code at absolute offset: 0x14299c
    }

    VoidType updated(DynamicType, DynamicType) {
        Code at absolute offset: 0x172d84
    }
}

class ComponentElement extends Element {

    ComponentElement ComponentElement.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType mount(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1364bc
    }

    VoidType _firstBuild@398042623(DynamicType) {
        Code at absolute offset: 0x165814
    }

    VoidType performRebuild(DynamicType) {
        Code at absolute offset: 0x1569e0
    }

    VoidType visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0x13ea3c
    }

    VoidType forgetChild(DynamicType, DynamicType) {
        Code at absolute offset: 0x157650
    }
}

class StatefulElement extends ComponentElement {

    StatefulElement StatefulElement.(DynamicType, DynamicType) {
        Code at absolute offset: 0xd8c94
    }

    Widget build(DynamicType) {
        Code at absolute offset: 0x164f58
    }

    VoidType _firstBuild@398042623(DynamicType) {
        Code at absolute offset: 0x165750
    }

    VoidType performRebuild(DynamicType) {
        Code at absolute offset: 0x15697c
    }

    VoidType update(DynamicType, DynamicType) {
        Code at absolute offset: 0x1425d4
    }

    VoidType activate(DynamicType) {
        Code at absolute offset: 0x136ac8
    }

    VoidType deactivate(DynamicType) {
        Code at absolute offset: 0x135434
    }

    VoidType unmount(DynamicType) {
        Code at absolute offset: 0x16af48
    }

    InheritedWidget dependOnInheritedElement(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15fd48
    }

    VoidType didChangeDependencies(DynamicType) {
        Code at absolute offset: 0x13ca24
    }
}

class WidgetsBinding extends _WidgetsBinding&BindingBase&ServicesBinding&SchedulerBinding&GestureBinding&RendererBinding&SemanticsBinding@441399801 {
    WidgetsBinding _instance@441399801
}

class _WidgetsBinding&BindingBase&ServicesBinding&SchedulerBinding&GestureBinding&RendererBinding&SemanticsBinding@441399801 extends Object implements _WidgetsBinding&BindingBase&ServicesBinding&SchedulerBinding&GestureBinding&RendererBinding@441399801, SemanticsBinding {
}

class _WidgetsBinding&BindingBase&ServicesBinding&SchedulerBinding&GestureBinding&RendererBinding@441399801 extends Object implements _WidgetsBinding&BindingBase&ServicesBinding&SchedulerBinding&GestureBinding@441399801, RendererBinding {
}

class _WidgetsBinding&BindingBase&ServicesBinding&SchedulerBinding&GestureBinding@441399801 extends Object implements _WidgetsBinding&BindingBase&ServicesBinding&SchedulerBinding@441399801, GestureBinding {
}

class _WidgetsBinding&BindingBase&ServicesBinding&SchedulerBinding@441399801 extends Object implements _WidgetsBinding&BindingBase&ServicesBinding@441399801, SchedulerBinding {
}

class _WidgetsBinding&BindingBase&ServicesBinding@441399801 extends Object implements BindingBase, ServicesBinding {
}

class RenderObjectToWidgetElement<T> extends RootRenderObjectElement {

    RenderObjectToWidgetElement RenderObjectToWidgetElement.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    RenderObjectToWidgetAdapter get:widget(DynamicType) {
        Code at absolute offset: 0x13d960
    }

    VoidType visitChildren(DynamicType, DynamicType) {
        Code at absolute offset: 0x106668
    }

    VoidType forgetChild(DynamicType, DynamicType) {
        Code at absolute offset: 0x1575f0
    }

    VoidType mount(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x135f68
    }

    VoidType update(DynamicType, DynamicType) {
        Code at absolute offset: 0x1421d4
    }

    VoidType performRebuild(DynamicType) {
        Code at absolute offset: 0x156864
    }

    VoidType _rebuild@441399801(DynamicType) {
        Code at absolute offset: 0xdb63c
    }

    RenderObjectWithChildMixin get:renderObject(DynamicType) {
        Code at absolute offset: 0x13cd18
    }

    VoidType insertRenderObjectChild(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x176ee0
    }

    VoidType moveRenderObjectChild(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType removeRenderObjectChild(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x168d30
    }
}

class RenderObjectToWidgetAdapter<T> extends RenderObjectWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415bc
    }

    RenderObjectToWidgetAdapter RenderObjectToWidgetAdapter.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    RenderObjectToWidgetElement createElement(DynamicType) {
        Code at absolute offset: 0x13d17c
    }

    RenderObjectWithChildMixin createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16abd8
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    RenderObjectToWidgetElement attachToRenderTree(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xdb4a8
    }

    String toStringShort(DynamicType) {
        Code at absolute offset: 0x13d538
    }
}

class :: {

    VoidType runApp(DynamicType) {
        Code at absolute offset: 0xdc174
    }
}

class WidgetsFlutterBinding extends _WidgetsFlutterBinding&BindingBase&GestureBinding&SchedulerBinding&ServicesBinding&PaintingBinding&SemanticsBinding&RendererBinding&WidgetsBinding@441399801 {

    WidgetsFlutterBinding WidgetsFlutterBinding.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    WidgetsBinding ensureInitialized() {
        Code at absolute offset: 0xdc1cc
    }
}

class SchedulerPhase extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class :: {

    bool nearZero(DynamicType, DynamicType) {
        Code at absolute offset: 0xddd0c
    }
}

class _InterpolationSimulation@47066280 extends Simulation {

    _InterpolationSimulation@47066280 _InterpolationSimulation@47066280.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb8014
    }

    double x(DynamicType, DynamicType) {
        Code at absolute offset: 0x179b94
    }
}

class _AlwaysDismissedAnimation@48411118 extends Animation {

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType addStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType removeStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    AnimationStatus get:status(DynamicType) {
        Code at absolute offset: 0x139dac
    }

    double get:value(DynamicType) {
        Code at absolute offset: 0x134a5e
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1494c8
    }
}

class ProxyAnimation extends _ProxyAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin&AnimationLocalStatusListenersMixin@48411118 {

    ProxyAnimation ProxyAnimation.(DynamicType, DynamicType) {
        Code at absolute offset: 0xb4898
    }

    VoidType set:parent(DynamicType, DynamicType) {
        Code at absolute offset: 0x38024
    }

    VoidType didStartListening(DynamicType) {
        Code at absolute offset: 0x16bf54
    }

    VoidType didStopListening(DynamicType) {
        Code at absolute offset: 0x16ef64
    }

    AnimationStatus get:status(DynamicType) {
        Code at absolute offset: 0x139dbc
    }

    double get:value(DynamicType) {
        Code at absolute offset: 0x134a86
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1494d8
    }
}

class AnimationMin<T> extends CompoundAnimation {

    AnimationMin AnimationMin.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    T get:value(DynamicType) {
        Code at absolute offset: 0x134cbe
    }
}

class _ProxyAnimation&Animation&AnimationLazyListenerMixin@48411118 extends Animation implements AnimationLazyListenerMixin {

    VoidType didRegisterListener(DynamicType) {
        Code at absolute offset: 0xdea74
    }

    VoidType didUnregisterListener(DynamicType) {
        Code at absolute offset: 0xde50c
    }
}

class ReverseAnimation extends _ReverseAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalStatusListenersMixin@48411118 {

    ReverseAnimation ReverseAnimation.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12d128
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12edd0
    }

    VoidType didStartListening(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType didStopListening(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _statusChangeHandler@48411118(DynamicType, DynamicType) {
        Code at absolute offset: 0xde778
    }

    AnimationStatus get:status(DynamicType) {
        Code at absolute offset: 0x139e24
    }

    double get:value(DynamicType) {
        Code at absolute offset: 0x134b02
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x149624
    }

    DynamicType get:_statusChangeHandler@48411118(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class CurvedAnimation extends _CurvedAnimation&Animation&AnimationWithParentMixin@48411118 {

    CurvedAnimation CurvedAnimation.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x96e0c
    }

    VoidType _updateCurveDirection@48411118(DynamicType, DynamicType) {
        Code at absolute offset: 0x96f3c
    }

    bool get:_useForwardCurve@48411118(DynamicType) {
        Code at absolute offset: 0xdebfc
    }

    double get:value(DynamicType) {
        Code at absolute offset: 0x134bba
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x149690
    }

    DynamicType get:_updateCurveDirection@48411118(DynamicType) {
        Code at absolute offset: 0x179afc
    }
}

class _AlwaysCompleteAnimation@48411118 extends Animation {

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType addStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType removeStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    AnimationStatus get:status(DynamicType) {
        Code at absolute offset: 0x139d9c
    }

    double get:value(DynamicType) {
        Code at absolute offset: 0x134a36
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1494b8
    }
}

class _CompoundAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin@48411118<T> extends _CompoundAnimation&Animation&AnimationLazyListenerMixin@48411118 implements AnimationLocalListenersMixin {

    _CompoundAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin@48411118 _CompoundAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin@48411118.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12d1c0
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12ee68
    }

    VoidType notifyListeners(DynamicType) {
        Code at absolute offset: 0xdec8c
    }
}

class _ReverseAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalStatusListenersMixin@48411118 extends _ProxyAnimation&Animation&AnimationLazyListenerMixin@48411118 implements AnimationLocalStatusListenersMixin {

    _ReverseAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalStatusListenersMixin@48411118 _ReverseAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalStatusListenersMixin@48411118.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12d090
    }

    VoidType removeStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12ed10
    }

    VoidType notifyStatusListeners(DynamicType, DynamicType) {
        Code at absolute offset: 0xde818
    }
}

class _TrainHoppingMode@48411118 extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class _CompoundAnimation&Animation&AnimationLazyListenerMixin@48411118<T> extends Animation implements AnimationLazyListenerMixin {

    VoidType didRegisterListener(DynamicType) {
        Code at absolute offset: 0xdef00
    }

    VoidType didUnregisterListener(DynamicType) {
        Code at absolute offset: 0xdeebc
    }
}

class CompoundAnimation<T> extends _CompoundAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin&AnimationLocalStatusListenersMixin@48411118 {

    CompoundAnimation CompoundAnimation.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x961b0
    }

    VoidType didStartListening(DynamicType) {
        Code at absolute offset: 0x16c050
    }

    VoidType didStopListening(DynamicType) {
        Code at absolute offset: 0x16f060
    }

    AnimationStatus get:status(DynamicType) {
        Code at absolute offset: 0x139f08
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1497ec
    }

    VoidType _maybeNotifyStatusListeners@48411118(DynamicType, DynamicType) {
        Code at absolute offset: 0xdf700
    }

    VoidType _maybeNotifyListeners@48411118(DynamicType) {
        Code at absolute offset: 0xdef9c
    }

    DynamicType get:_maybeNotifyStatusListeners@48411118(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_maybeNotifyListeners@48411118(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _ProxyAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin@48411118 extends _ProxyAnimation&Animation&AnimationLazyListenerMixin@48411118 implements AnimationLocalListenersMixin {

    _ProxyAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin@48411118 _ProxyAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin@48411118.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12d090
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12ed10
    }

    VoidType notifyListeners(DynamicType) {
        Code at absolute offset: 0xdf7f0
    }

    DynamicType get:notifyListeners(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _CurvedAnimation&Animation&AnimationWithParentMixin@48411118 extends Animation implements AnimationWithParentMixin {

    VoidType addListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12d178
    }

    VoidType removeListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x12ee20
    }

    VoidType addStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x135258
    }

    VoidType removeStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x136cb8
    }

    AnimationStatus get:status(DynamicType) {
        Code at absolute offset: 0x139ecc
    }
}

class _ProxyAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin&AnimationLocalStatusListenersMixin@48411118 extends _ProxyAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin@48411118 implements AnimationLocalStatusListenersMixin {

    _ProxyAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin&AnimationLocalStatusListenersMixin@48411118 _ProxyAnimation&Animation&AnimationLazyListenerMixin&AnimationLocalListenersMixin&AnimationLocalStatusListenersMixin@48411118.(DynamicType) {
        Code at absolute offset: 0xb4948
    }

    VoidType addStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x135218
    }

    VoidType removeStatusListener(DynamicType, DynamicType) {
        Code at absolute offset: 0x136c70
    }

    VoidType notifyStatusListeners(DynamicType, DynamicType) {
        Code at absolute offset: 0x38274
    }

    DynamicType get:notifyStatusListeners(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
}

class IntTween extends Tween {

    int lerp(DynamicType, DynamicType) {
        Code at absolute offset: 0x1570a0
    }
}

class ColorTween extends Tween {

    Color lerp(DynamicType, DynamicType) {
        Code at absolute offset: 0x156f14
    }
}

class _NavigatorPopObservation@443124995 extends _NavigatorObservation@443124995 {

    VoidType notify(DynamicType, DynamicType) {
        Code at absolute offset: 0xe035c
    }

    DynamicType get:notify(DynamicType) {
        Code at absolute offset: 0x165e3c
    }
}

class RouteTransitionRecord extends Object {
}

class NavigatorState extends _NavigatorState&State&TickerProviderStateMixin@443124995 {

    NavigatorState NavigatorState.(DynamicType) {
        Code at absolute offset: 0xe0aa4
    }

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12bec8
    }

    VoidType didChangeDependencies(DynamicType) {
        Code at absolute offset: 0xf69fc
    }

    VoidType _updateHeroController@443124995(DynamicType, DynamicType) {
        Code at absolute offset: 0xe11bc
    }

    VoidType _updateEffectiveObservers@443124995(DynamicType) {
        Code at absolute offset: 0xe05c8
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf5d9c
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xeed24
    }

    OverlayState get:overlay(DynamicType) {
        Code at absolute offset: 0xb9990
    }

    Iterable get:_allRouteOverlayEntries@443124995(DynamicType) {
        Code at absolute offset: 0xb9938
    }

    VoidType _flushHistoryUpdates@443124995(DynamicType, DynamicType) {
        Code at absolute offset: 0xb8690
    }

    VoidType _flushObserverNotifications@443124995(DynamicType) {
        Code at absolute offset: 0xba07c
    }

    VoidType _flushRouteAnnouncement@443124995(DynamicType) {
        Code at absolute offset: 0xb9ba4
    }

    _RouteEntry@443124995 _getRouteBefore@443124995(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xac114
    }

    int _getIndexBefore@443124995(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xac18c
    }

    _RouteEntry@443124995 _getRouteAfter@443124995(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xb9f3c
    }

    Route _routeNamed@443124995(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe06d8
    }

    Future pushNamed(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe0fac
    }

    Future push(DynamicType, DynamicType) {
        Code at absolute offset: 0xe0ca0
    }

    VoidType _afterNavigation@443124995(DynamicType, DynamicType) {
        Code at absolute offset: 0xb82dc
    }

    Future maybePop(DynamicType, DynamicType) {
        Code at absolute offset: 0xe08e4
    }

    VoidType pop(DynamicType, DynamicType) {
        Code at absolute offset: 0xb80b8
    }

    VoidType finalizeRoute(DynamicType, DynamicType) {
        Code at absolute offset: 0xe10b8
    }

    VoidType set:_userGesturesInProgress@443124995(DynamicType, DynamicType) {
        Code at absolute offset: 0xb5300
    }

    bool get:userGestureInProgress(DynamicType) {
        Code at absolute offset: 0xabde8
    }

    VoidType didStartUserGesture(DynamicType) {
        Code at absolute offset: 0xb50fc
    }

    VoidType didStopUserGesture(DynamicType) {
        Code at absolute offset: 0xb798c
    }

    VoidType _handlePointerDown@443124995(DynamicType, DynamicType) {
        Code at absolute offset: 0xe03ec
    }

    VoidType _handlePointerUpOrCancel@443124995(DynamicType, DynamicType) {
        Code at absolute offset: 0xe04d8
    }

    VoidType _cancelActivePointers@443124995(DynamicType) {
        Code at absolute offset: 0xb8308
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf3fb0
    }

    DynamicType get:_handlePointerDown@443124995(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handlePointerUpOrCancel@443124995(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _NotAnnounced@443124995 extends Route {

    _NotAnnounced@443124995 _NotAnnounced@443124995.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class NavigatorObserver extends Object {
}

class _NavigatorState&State&TickerProviderStateMixin@443124995 extends State implements TickerProviderStateMixin {

    Ticker createTicker(DynamicType, DynamicType) {
        Code at absolute offset: 0x1355ac
    }

    VoidType _removeTicker@410311458(DynamicType, DynamicType) {
        Code at absolute offset: 0x1740d8
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType didChangeDependencies(DynamicType) {
        Code at absolute offset: 0x939c8
    }
}

class _NavigatorPushObservation@443124995 extends _NavigatorObservation@443124995 {

    VoidType notify(DynamicType, DynamicType) {
        Code at absolute offset: 0xe1324
    }

    DynamicType get:notify(DynamicType) {
        Code at absolute offset: 0x165e24
    }
}

class _RouteLifecycle@443124995 extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class _NavigatorRemoveObservation@443124995 extends _NavigatorObservation@443124995 {

    VoidType notify(DynamicType, DynamicType) {
        Code at absolute offset: 0xe1410
    }

    DynamicType get:notify(DynamicType) {
        Code at absolute offset: 0x165e54
    }
}

class TransitionDelegate<T> extends Object {
}

class RoutePopDisposition extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class HeroControllerScope extends InheritedWidget {

    HeroController of(DynamicType) {
        Code at absolute offset: 0xe1448
    }

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x143fa8
    }
}

class _RouteEntry@443124995 extends RouteTransitionRecord {
    Route notAnnounced
    _Closure@0150898 isPresentPredicate
    _Closure@0150898 suitableForTransitionAnimationPredicate
    _Closure@0150898 willBePresentPredicate

    Route get:notAnnounced() {
        Code at absolute offset: 0xfaa0
    }

    _Closure@0150898 get:isPresentPredicate() {
        Code at absolute offset: 0xfaa0
    }

    _Closure@0150898 get:suitableForTransitionAnimationPredicate() {
        Code at absolute offset: 0xfaa0
    }

    _Closure@0150898 get:willBePresentPredicate() {
        Code at absolute offset: 0xfaa0
    }

    _RouteEntry@443124995 _RouteEntry@443124995.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe0e34
    }

    bool get:hasPage(DynamicType) {
        Code at absolute offset: 0xba620
    }

    VoidType handleAdd(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType handlePush(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xba238
    }

    VoidType handleDidPopNext(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType handlePop(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType handleRemoval(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType didAdd(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType pop(DynamicType, DynamicType) {
        Code at absolute offset: 0xba590
    }

    VoidType finalize(DynamicType) {
        Code at absolute offset: 0xe119c
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool shouldAnnounceChangeToNext(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    _Closure@0150898 isRoutePredicate(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class DefaultTransitionDelegate<T> extends TransitionDelegate {
}

class Page<T> extends RouteSettings {
}

class Navigator extends StatefulWidget {

    Future maybePop(DynamicType, DynamicType) {
        Code at absolute offset: 0xe1ccc
    }

    NavigatorState of(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe1c24
    }

    List defaultGenerateInitialRoutes(DynamicType, DynamicType) {
        Code at absolute offset: 0xe14c4
    }

    NavigatorState createState(DynamicType) {
        Code at absolute offset: 0x13e144
    }
}

class :: {
}

class _ModalScopeStatus@484188637 extends InheritedWidget {

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x1440b8
    }
}

class LocalHistoryEntry extends Object {

    VoidType remove(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _notifyRemoved@484188637(DynamicType) {
        Code at absolute offset: 0x76068
    }
}

class MaterialPageRoute<T> extends _MaterialPageRoute&PageRoute&MaterialRouteTransitionMixin@216331911 {

    MaterialPageRoute MaterialPageRoute.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Widget buildContent(DynamicType, DynamicType) {
        Code at absolute offset: 0xe25f8
    }

    String get:debugLabel(DynamicType) {
        Code at absolute offset: 0xe2454
    }
}

class _MaterialPageRoute&PageRoute&MaterialRouteTransitionMixin@216331911<T> extends PageRoute implements MaterialRouteTransitionMixin {

    _MaterialPageRoute&PageRoute&MaterialRouteTransitionMixin@216331911 _MaterialPageRoute&PageRoute&MaterialRouteTransitionMixin@216331911.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool canTransitionTo(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Widget buildPage(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe2598
    }

    Widget buildTransitions(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe2500
    }
}

class MaterialRouteTransitionMixin<T> extends PageRoute {
}

class :: {
}

class _SyncCompleter@4048458<T> extends _Completer@4048458 {

    _SyncCompleter@4048458 _SyncCompleter@4048458.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType complete(DynamicType, DynamicType) {
        Code at absolute offset: 0x173280
    }

    VoidType _completeError@4048458(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x173a04
    }
}

class DeferredLoadException extends Object implements Exception {

    String toString(DynamicType) {
        Code at absolute offset: 0x141e34
    }
}

class _IdenticalAndIdentityHashCode@3220832 extends Object {
}

class JsonDecoder extends Converter {

    DynamicType convert(DynamicType, DynamicType) {
        Code at absolute offset: 0x197d0
    }
}

class RegExpMatch extends Object implements Match {
}

class _RegExpMatch@0150898 extends Object implements RegExpMatch {

    int get:start(DynamicType) {
        Code at absolute offset: 0xe3e68
    }

    int get:end(DynamicType) {
        Code at absolute offset: 0xe40f8
    }

    int _start@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0xe3e94
    }

    int _end@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0xe4098
    }

    String group(DynamicType, DynamicType) {
        Code at absolute offset: 0xe3f60
    }

    String [](DynamicType, DynamicType) {
        Code at absolute offset: 0xe3f34
    }
}

class _AllMatchesIterator@0150898 extends Object implements Iterator {

    RegExpMatch get:current(DynamicType) {
        Code at absolute offset: 0xe41c8
    }

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xf050
    }
}

class _StringAllMatchesIterator@0150898 extends Object implements Iterator {

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xe41ec
    }

    Match get:current(DynamicType) {
        Code at absolute offset: 0xe41b4
    }
}

class _HashMapIterator@3220832<K, V, E> extends Object implements Iterator {

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xe4388
    }
}

class _HashMapKeyIterator@3220832<K, V> extends _HashMapIterator@3220832 {

    K get:current(DynamicType) {
        Code at absolute offset: 0xe461c
    }
}

class _CompactIterator@3220832<E> extends Object implements Iterator {

    _CompactIterator@3220832 _CompactIterator@3220832.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe47b8
    }

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xe4668
    }

    E get:current(DynamicType) {
        Code at absolute offset: 0xe49c8
    }
}

class _LinkedListIterator@3220832<E> extends Object implements Iterator {

    E get:current(DynamicType) {
        Code at absolute offset: 0xe41b4
    }

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xe4858
    }
}

class _ListQueueIterator@3220832<E> extends Object implements Iterator {

    E get:current(DynamicType) {
        Code at absolute offset: 0xe4654
    }

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xe49dc
    }
}

class _SplayTreeIterator@3220832<K, Node, T> extends Object implements Iterator {

    _SplayTreeIterator@3220832 _SplayTreeIterator@3220832.(DynamicType, DynamicType) {
        Code at absolute offset: 0xe4e88
    }

    T get:current(DynamicType) {
        Code at absolute offset: 0xe5040
    }

    VoidType _findLeftMostDescendent@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType _rebuildWorkList@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0xe4d08
    }

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xe4acc
    }
}

class CastIterator<S, T> extends Object implements Iterator {

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xe5088
    }

    T get:current(DynamicType) {
        Code at absolute offset: 0xe5584
    }
}

class ExpandIterator<S, T> extends Object implements Iterator {

    T get:current(DynamicType) {
        Code at absolute offset: 0xee40
    }

    bool moveNext(DynamicType) {
        Code at absolute offset: 0xe522c
    }
}

class EmptyIterator<E> extends Object implements Iterator {

    bool moveNext(DynamicType) {
        Code at absolute offset: 0x31fa8
    }

    E get:current(DynamicType) {
        Code at absolute offset: 0xe5604
    }
}

class IconTheme extends InheritedTheme {

    Widget merge(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe5da0
    }

    IconThemeData of(DynamicType) {
        Code at absolute offset: 0xe5af8
    }

    IconThemeData _getInheritedIconThemeData@487033112(DynamicType) {
        Code at absolute offset: 0xe5a74
    }

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x14392c
    }
}

class :: {
}

class Icon extends StatelessWidget {

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xeb87c
    }
}

class IconData extends Object {

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x187334
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15b7a8
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1549d8
    }
}

class :: {
}

class :: {
}

class BackButtonIcon extends StatelessWidget {

    IconData _getIconData@144114528(DynamicType) {
        Code at absolute offset: 0xe5e8c
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xe5e18
    }
}

class :: {
}

class BackButton extends StatelessWidget {

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xe5f08
    }
}

class IconButton extends StatelessWidget {

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xe6b58
    }
}

class :: {
}

class RawMaterialButton extends StatefulWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xe6b48
    }

    _RawMaterialButtonState@153412912 createState(DynamicType) {
        Code at absolute offset: 0x13ddbc
    }
}

class :: {
}

class _InputPadding@153412912 extends SingleChildRenderObjectWidget {

    RenderObject createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169a54
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175288
    }
}

class _RenderInputPadding@153412912 extends RenderShiftedBox {

    _RenderInputPadding@153412912 _RenderInputPadding@153412912.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xc81e0
    }

    VoidType set:minSize(DynamicType, DynamicType) {
        Code at absolute offset: 0xc9908
    }

    VoidType performLayout(DynamicType) {
        Code at absolute offset: 0x100854
    }

    bool hitTest(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfc19c
    }
}

class _RawMaterialButtonState@153412912 extends State {

    _RawMaterialButtonState@153412912 _RawMaterialButtonState@153412912.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool get:_hovered@153412912(DynamicType) {
        Code at absolute offset: 0xe66a8
    }

    bool get:_focused@153412912(DynamicType) {
        Code at absolute offset: 0xe6550
    }

    bool get:_pressed@153412912(DynamicType) {
        Code at absolute offset: 0xe66e0
    }

    bool get:_disabled@153412912(DynamicType) {
        Code at absolute offset: 0xe6860
    }

    VoidType _updateState@153412912(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe6ad8
    }

    VoidType _handleHighlightChanged@153412912(DynamicType, DynamicType) {
        Code at absolute offset: 0xe6930
    }

    VoidType _handleHoveredChanged@153412912(DynamicType, DynamicType) {
        Code at absolute offset: 0xe6620
    }

    VoidType _handleFocusedChanged@153412912(DynamicType, DynamicType) {
        Code at absolute offset: 0xe69b8
    }

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12b23c
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf4d64
    }

    double get:_effectiveElevation@153412912(DynamicType) {
        Code at absolute offset: 0xe6718
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf0520
    }

    DynamicType get:_handleHighlightChanged@153412912(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleHoveredChanged@153412912(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleFocusedChanged@153412912(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class InkResponse extends StatelessWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    _Closure@0150898 getRectCallback(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xea964
    }

    DynamicType get:getRectCallback(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:debugCheckContext(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
}

class InteractiveInkFeature extends InkFeature {

    VoidType set:color(DynamicType, DynamicType) {
        Code at absolute offset: 0xe7428
    }

    VoidType paintInkCircle(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe709c
    }
}

class InkWell extends InkResponse {
}

class _ParentInkResponseProvider@202059085 extends InheritedWidget {

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x143bb0
    }

    _ParentInkResponseState@202059085 of(DynamicType) {
        Code at absolute offset: 0xe74e4
    }
}

class _InkResponseState@202059085 extends __InkResponseState&State&AutomaticKeepAliveClientMixin@202059085 implements _ParentInkResponseState@202059085 {

    _InkResponseState@202059085 _InkResponseState@202059085.(DynamicType) {
        Code at absolute offset: 0xea57c
    }

    bool get:highlightsExist(DynamicType) {
        Code at absolute offset: 0xe8424
    }

    VoidType markChildInkResponsePressed(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe8904
    }

    bool get:_anyChildInkResponsePressed@202059085(DynamicType) {
        Code at absolute offset: 0xe8a00
    }

    VoidType _handleAction@202059085(DynamicType, DynamicType) {
        Code at absolute offset: 0xea464
    }

    VoidType initState(DynamicType) {
        Code at absolute offset: 0x12b2b4
    }

    VoidType didUpdateWidget(DynamicType, DynamicType) {
        Code at absolute offset: 0xf4ea8
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0xee4d4
    }

    bool get:wantKeepAlive(DynamicType) {
        Code at absolute offset: 0xe83a4
    }

    Color getHighlightColorForType(DynamicType, DynamicType) {
        Code at absolute offset: 0xe8788
    }

    VoidType updateHighlight(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe7654
    }

    InteractiveInkFeature _createInkFeature@202059085(DynamicType, DynamicType) {
        Code at absolute offset: 0xe9e88
    }

    VoidType _handleFocusHighlightModeChange@202059085(DynamicType, DynamicType) {
        Code at absolute offset: 0xea230
    }

    bool get:_shouldShowFocus@202059085(DynamicType) {
        Code at absolute offset: 0xe9a94
    }

    VoidType _updateFocusHighlights@202059085(DynamicType) {
        Code at absolute offset: 0xe99f4
    }

    VoidType _handleFocusUpdate@202059085(DynamicType, DynamicType) {
        Code at absolute offset: 0xe9974
    }

    VoidType _handleTapDown@202059085(DynamicType, DynamicType) {
        Code at absolute offset: 0xea3ec
    }

    VoidType _startSplash@202059085(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe9c2c
    }

    VoidType _handleTap@202059085(DynamicType, DynamicType) {
        Code at absolute offset: 0xea144
    }

    VoidType _handleTapCancel@202059085(DynamicType) {
        Code at absolute offset: 0xe8b28
    }

    VoidType _handleDoubleTap@202059085(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType deactivate(DynamicType) {
        Code at absolute offset: 0xef1f8
    }

    bool get:enabled(DynamicType) {
        Code at absolute offset: 0xe992c
    }

    VoidType _handleMouseEnter@202059085(DynamicType, DynamicType) {
        Code at absolute offset: 0xe75ac
    }

    VoidType _handleMouseExit@202059085(DynamicType, DynamicType) {
        Code at absolute offset: 0xea73c
    }

    VoidType _handleHoverChange@202059085(DynamicType) {
        Code at absolute offset: 0xe760c
    }

    bool get:_canRequestFocus@202059085(DynamicType) {
        Code at absolute offset: 0xea658
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf0c60
    }

    DynamicType get:_handleAction@202059085(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleFocusHighlightModeChange@202059085(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleFocusUpdate@202059085(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleTapDown@202059085(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleTapCancel@202059085(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleMouseEnter@202059085(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_handleMouseExit@202059085(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class InkHighlight extends InteractiveInkFeature {

    InkHighlight InkHighlight.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe8494
    }

    VoidType activate(DynamicType) {
        Code at absolute offset: 0xe7df8
    }

    VoidType deactivate(DynamicType) {
        Code at absolute offset: 0xe7b24
    }

    VoidType _handleAlphaStatusChanged@199209331(DynamicType, DynamicType) {
        Code at absolute offset: 0xe7c4c
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x173e60
    }

    VoidType _paintHighlight@199209331(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe7c98
    }

    VoidType paintFeature(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x180a40
    }

    DynamicType get:_handleAlphaStatusChanged@199209331(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
}

class KeepAliveHandle extends ChangeNotifier {

    KeepAliveHandle KeepAliveHandle.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType release(DynamicType) {
        Code at absolute offset: 0xe7f18
    }
}

class :: {
}

class AutomaticKeepAliveClientMixin<T> extends State {
}

class KeepAliveNotification extends Notification {
}

class Notification extends Object {

    bool visitAncestor(DynamicType, DynamicType) {
        Code at absolute offset: 0xe8164
    }

    VoidType dispatch(DynamicType, DynamicType) {
        Code at absolute offset: 0xe8290
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x15460c
    }

    DynamicType get:visitAncestor(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
}

class LayoutChangedNotification extends Notification {
}

class NotificationListener<T> extends StatelessWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415bc
    }

    bool _dispatch@453140401(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe7f74
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xec234
    }
}

class InkSplash extends InteractiveInkFeature {

    InkSplash InkSplash.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe9270
    }

    VoidType confirm(DynamicType) {
        Code at absolute offset: 0xe97f4
    }

    VoidType cancel(DynamicType) {
        Code at absolute offset: 0xe8bac
    }

    VoidType _handleAlphaStatusChanged@201036029(DynamicType, DynamicType) {
        Code at absolute offset: 0xe97b4
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x173eb0
    }

    VoidType paintFeature(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x180c64
    }

    DynamicType get:_handleAlphaStatusChanged@201036029(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {

    _Closure@0150898 _getClipCallback@201036029(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    double _getTargetRadius@201036029(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe8e70
    }

    double _getSplashRadiusForPositionInSize@201036029(DynamicType, DynamicType) {
        Code at absolute offset: 0xe8c04
    }
}

class _InkSplashFactory@201036029 extends InteractiveInkFeatureFactory {

    InteractiveInkFeature create(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xe8f20
    }
}

class _InkResponseStateWidget@202059085 extends StatefulWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0x415c8
    }

    _InkResponseState@202059085 createState(DynamicType) {
        Code at absolute offset: 0x13de18
    }
}

class _ParentInkResponseState@202059085 extends Object {
}

class _HighlightType@202059085 extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class InteractiveInkFeatureFactory extends Object {
}

class __InkResponseState&State&AutomaticKeepAliveClientMixin@202059085 extends State implements AutomaticKeepAliveClientMixin {

    VoidType _ensureKeepAlive@411490736(DynamicType) {
        Code at absolute offset: 0xe8308
    }

    VoidType _releaseKeepAlive@411490736(DynamicType) {
        Code at absolute offset: 0xe7ec4
    }

    VoidType updateKeepAlive(DynamicType) {
        Code at absolute offset: 0xe7e50
    }

    VoidType initState(DynamicType) {
        Code at absolute offset: 0xea8b4
    }

    VoidType deactivate(DynamicType) {
        Code at absolute offset: 0xea874
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xea824
    }
}

class DefaultTextStyle extends InheritedTheme {

    DefaultTextStyle of(DynamicType) {
        Code at absolute offset: 0xeb010
    }

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x1439b8
    }
}

class :: {
}

class Text extends StatelessWidget {

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xec678
    }
}

class DefaultTextHeightBehavior extends InheritedTheme {

    TextHeightBehavior of(DynamicType) {
        Code at absolute offset: 0xeafd0
    }
}

class SafeArea extends StatelessWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xcbb64
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xec248
    }
}

class :: {
}

class Title extends StatelessWidget {

    Widget get:child(DynamicType) {
        Code at absolute offset: 0xa451c
    }

    Title Title.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xbfccc
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xec8a0
    }
}

class :: {
}

class MyHomePage extends StatefulWidget {

    _MyHomePageState@526382462 createState(DynamicType) {
        Code at absolute offset: 0x13e298
    }
}

class _MyHomePageState@526382462 extends State {

    VoidType _incrementCounter@526382462(DynamicType) {
        Code at absolute offset: 0xecaa8
    }

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xf4aac
    }

    DynamicType get:_incrementCounter@526382462(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class DateTime extends Object implements Comparable {

    DateTime DateTime.now(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DateTime DateTime._withValue@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xed670
    }

    DateTime DateTime._now@0150898(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int _getCurrentMicros@0150898() {
        Code at absolute offset: 0xee40c
    }

    int _timeZoneOffsetInSecondsForClampedSeconds@0150898(DynamicType) {
        Code at absolute offset: 0xed88c
    }

    List _computeUpperPart@0150898(DynamicType) {
        Code at absolute offset: 0xecd7c
    }

    DynamicType get:_parts@0150898(DynamicType) {
        Code at absolute offset: 0xecd10
    }

    int get:_localDateInUtcMicros@0150898(DynamicType) {
        Code at absolute offset: 0xee31c
    }

    int _dayFromYear@0150898(DynamicType) {
        Code at absolute offset: 0xedea0
    }

    int _weekDay@0150898(DynamicType) {
        Code at absolute offset: 0xede34
    }

    int _equivalentYear@0150898(DynamicType) {
        Code at absolute offset: 0xedcec
    }

    int _yearsFromSecondsSinceEpoch@0150898(DynamicType) {
        Code at absolute offset: 0xee020
    }

    int _equivalentSeconds@0150898(DynamicType) {
        Code at absolute offset: 0xedbc4
    }

    int _timeZoneOffsetInSeconds@0150898(DynamicType) {
        Code at absolute offset: 0xedb80
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x173090
    }

    int compareTo(DynamicType, DynamicType) {
        Code at absolute offset: 0x12604c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x1566bc
    }

    String _fourDigits@0150898(DynamicType) {
        Code at absolute offset: 0xed9d4
    }

    String _threeDigits@0150898(DynamicType) {
        Code at absolute offset: 0xed90c
    }

    String _twoDigits@0150898(DynamicType) {
        Code at absolute offset: 0xee298
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x140ca4
    }

    DateTime add(DynamicType, DynamicType) {
        Code at absolute offset: 0xed5e4
    }

    int get:year(DynamicType) {
        Code at absolute offset: 0xee11c
    }

    int get:month(DynamicType) {
        Code at absolute offset: 0xee24c
    }

    int get:day(DynamicType) {
        Code at absolute offset: 0xee200
    }

    int get:hour(DynamicType) {
        Code at absolute offset: 0xed840
    }

    int get:minute(DynamicType) {
        Code at absolute offset: 0xee168
    }

    int get:second(DynamicType) {
        Code at absolute offset: 0xee3c0
    }

    int get:millisecond(DynamicType) {
        Code at absolute offset: 0xee1b4
    }

    int get:microsecond(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class MyApp extends StatelessWidget {

    Widget build(DynamicType, DynamicType) {
        Code at absolute offset: 0xec924
    }

    String myTitle(DynamicType) {
        Code at absolute offset: 0xecb3c
    }

    String myOtherPrint(DynamicType, DynamicType) {
        Code at absolute offset: 0xecc20
    }
}

class AnnotatedRegion<T> extends SingleChildRenderObjectWidget {

    T get:value(DynamicType) {
        Code at absolute offset: 0x1d772
    }

    RenderObject createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x169b04
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x175388
    }
}

class :: {
}

class ElevationOverlay extends Object {

    Color applyOverlay(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf16f0
    }
}

class :: {
}

class PrimaryScrollController extends InheritedWidget {

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x144030
    }
}

class :: {
}

class FlexibleSpaceBarSettings extends InheritedWidget {

    bool updateShouldNotify(DynamicType, DynamicType) {
        Code at absolute offset: 0x143a94
    }
}

class :: {
}

class FlexibleSpaceBar extends Object {

    Widget createSettings(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xf2b24
    }
}

class PerformanceOverlay extends LeafRenderObjectWidget {

    RenderPerformanceOverlay createRenderObject(DynamicType, DynamicType) {
        Code at absolute offset: 0x16ac28
    }

    VoidType updateRenderObject(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x176de0
    }
}

class :: {
}

class RenderPerformanceOverlay extends RenderBox {

    RenderPerformanceOverlay RenderPerformanceOverlay.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType set:optionsMask(DynamicType, DynamicType) {
        Code at absolute offset: 0xf3780
    }

    bool get:sizedByParent(DynamicType) {
        Code at absolute offset: 0x80f34
    }

    bool get:alwaysNeedsCompositing(DynamicType) {
        Code at absolute offset: 0x80f34
    }

    double get:_intrinsicHeight@335266397(DynamicType) {
        Code at absolute offset: 0xf36f4
    }

    VoidType performResize(DynamicType) {
        Code at absolute offset: 0xf7314
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xff1ec
    }
}

class :: {
}

class PerformanceOverlayOption extends Object {
}

class RenderErrorBox extends RenderBox {
    EdgeInsets padding
    double minimumWidth
    Color backgroundColor

    String get:message(DynamicType) {
        Code at absolute offset: 0xf727e
    }

    EdgeInsets get:padding() {
        Code at absolute offset: 0xfaa0
    }

    Color get:backgroundColor() {
        Code at absolute offset: 0xfaa0
    }

    RenderErrorBox RenderErrorBox.(DynamicType, DynamicType) {
        Code at absolute offset: 0xf72bc
    }

    bool get:sizedByParent(DynamicType) {
        Code at absolute offset: 0x80f34
    }

    bool hitTestSelf(DynamicType, DynamicType) {
        Code at absolute offset: 0x80f34
    }

    VoidType performResize(DynamicType) {
        Code at absolute offset: 0xf7210
    }

    VoidType paint(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfe6e4
    }
}

class :: {
}

class __Float64x2List&_TypedList&_Float64x2ListMixin@7027147 extends _TypedList@7027147 implements _Float64x2ListMixin@7027147 {

    int lastIndexWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x109134
    }

    List +(DynamicType, DynamicType) {
        Code at absolute offset: 0xf8c62
    }

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10c7bc
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13c810
    }

    Iterable take(DynamicType, DynamicType) {
        Code at absolute offset: 0x109840
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x133a10
    }

    Iterable get:reversed(DynamicType) {
        Code at absolute offset: 0x125cc4
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x135c84
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x139b98
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x1350f0
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x13a3b0
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x1366d8
    }

    Iterable expand(DynamicType, DynamicType) {
        Code at absolute offset: 0x1233cc
    }

    Float64x2 firstWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x122338
    }

    Float64x2 elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x129280
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x122a6e
    }

    VoidType sort(DynamicType, DynamicType) {
        Code at absolute offset: 0x123000
    }

    Float64x2 get:first(DynamicType) {
        Code at absolute offset: 0x133dc0
    }

    Float64x2 get:last(DynamicType) {
        Code at absolute offset: 0x128830
    }

    Float64x2List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x109e94
    }
}

class _Float64x2ListMixin@7027147 extends Object implements List {
}

class Float64x2List extends Object implements List, TypedData {

    Float64x2List Float64x2List.(DynamicType, DynamicType) {
        Code at absolute offset: 0xf8cc4
    }
}

class __Float64x2ArrayView&_TypedListView&_Float64x2ListMixin@7027147 extends _TypedListView@7027147 implements _Float64x2ListMixin@7027147 {

    int lastIndexWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x109028
    }

    List +(DynamicType, DynamicType) {
        Code at absolute offset: 0xf8ed6
    }

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10bd10
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13c810
    }

    Iterable take(DynamicType, DynamicType) {
        Code at absolute offset: 0x109840
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x133a10
    }

    Iterable get:reversed(DynamicType) {
        Code at absolute offset: 0x125cc4
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x135c84
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x139b98
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x1350f0
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x13a2e8
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x136668
    }

    Iterable expand(DynamicType, DynamicType) {
        Code at absolute offset: 0x123360
    }

    Float64x2 firstWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x122220
    }

    Float64x2 elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x129254
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x122a02
    }

    VoidType sort(DynamicType, DynamicType) {
        Code at absolute offset: 0x123000
    }

    Float64x2 get:first(DynamicType) {
        Code at absolute offset: 0x133d78
    }

    Float64x2 get:last(DynamicType) {
        Code at absolute offset: 0x1287e0
    }

    Float64x2List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x109da8
    }
}

class __Int32x4List&_TypedList&_Int32x4ListMixin@7027147 extends _TypedList@7027147 implements _Int32x4ListMixin@7027147 {

    int lastIndexWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x109134
    }

    List +(DynamicType, DynamicType) {
        Code at absolute offset: 0xf907e
    }

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10dcfc
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13c838
    }

    Iterable take(DynamicType, DynamicType) {
        Code at absolute offset: 0x1098a4
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x133a5c
    }

    Iterable get:reversed(DynamicType) {
        Code at absolute offset: 0x125ce4
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x135cb8
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x139be4
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x135120
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x13a6a0
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x1367b8
    }

    Iterable expand(DynamicType, DynamicType) {
        Code at absolute offset: 0x1234a4
    }

    Int32x4 firstWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x122338
    }

    Int32x4 elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x1293e4
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x122b46
    }

    VoidType sort(DynamicType, DynamicType) {
        Code at absolute offset: 0x123088
    }

    Int32x4 get:first(DynamicType) {
        Code at absolute offset: 0x133f0c
    }

    Int32x4 get:last(DynamicType) {
        Code at absolute offset: 0x12899c
    }

    Int32x4List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10a064
    }
}

class _Int32x4ListMixin@7027147 extends Object implements List {
}

class Int32x4List extends Object implements List, TypedData {

    Int32x4List Int32x4List.(DynamicType, DynamicType) {
        Code at absolute offset: 0xf90e0
    }
}

class __Int32x4ArrayView&_TypedListView&_Int32x4ListMixin@7027147 extends _TypedListView@7027147 implements _Int32x4ListMixin@7027147 {

    int lastIndexWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x109250
    }

    List +(DynamicType, DynamicType) {
        Code at absolute offset: 0xf9256
    }

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10d2b4
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13c838
    }

    Iterable take(DynamicType, DynamicType) {
        Code at absolute offset: 0x1098a4
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x133a5c
    }

    Iterable get:reversed(DynamicType) {
        Code at absolute offset: 0x125ce4
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x135cb8
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x139be4
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x135120
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x13a530
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x136748
    }

    Iterable expand(DynamicType, DynamicType) {
        Code at absolute offset: 0x123438
    }

    Int32x4 firstWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x12245c
    }

    Int32x4 elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x1293b8
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x122ada
    }

    VoidType sort(DynamicType, DynamicType) {
        Code at absolute offset: 0x123088
    }

    Int32x4 get:first(DynamicType) {
        Code at absolute offset: 0x133ec4
    }

    Int32x4 get:last(DynamicType) {
        Code at absolute offset: 0x12894c
    }

    Int32x4List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x109f78
    }
}

class __Float32x4List&_TypedList&_Float32x4ListMixin@7027147 extends _TypedList@7027147 implements _Float32x4ListMixin@7027147 {

    int lastIndexWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x109134
    }

    List +(DynamicType, DynamicType) {
        Code at absolute offset: 0xf939a
    }

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10f22c
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13c860
    }

    Iterable take(DynamicType, DynamicType) {
        Code at absolute offset: 0x109908
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x133aa8
    }

    Iterable get:reversed(DynamicType) {
        Code at absolute offset: 0x125d04
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x135cec
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x139c30
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x135150
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x13a9bc
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x136898
    }

    Iterable expand(DynamicType, DynamicType) {
        Code at absolute offset: 0x12357c
    }

    Float32x4 firstWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x122338
    }

    Float32x4 elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x129534
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x122c1e
    }

    VoidType sort(DynamicType, DynamicType) {
        Code at absolute offset: 0x123110
    }

    Float32x4 get:first(DynamicType) {
        Code at absolute offset: 0x134058
    }

    Float32x4 get:last(DynamicType) {
        Code at absolute offset: 0x128b10
    }

    Float32x4List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10a234
    }
}

class _Float32x4ListMixin@7027147 extends Object implements List {
}

class Float32x4List extends Object implements List, TypedData {

    Float32x4List Float32x4List.(DynamicType, DynamicType) {
        Code at absolute offset: 0xf93fc
    }
}

class __Float32x4ArrayView&_TypedListView&_Float32x4ListMixin@7027147 extends _TypedListView@7027147 implements _Float32x4ListMixin@7027147 {

    int lastIndexWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x109420
    }

    List +(DynamicType, DynamicType) {
        Code at absolute offset: 0xf9572
    }

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10e798
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13c860
    }

    Iterable take(DynamicType, DynamicType) {
        Code at absolute offset: 0x109908
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x133aa8
    }

    Iterable get:reversed(DynamicType) {
        Code at absolute offset: 0x125d04
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x135cec
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x139c30
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x135150
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x13a84c
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x136828
    }

    Iterable expand(DynamicType, DynamicType) {
        Code at absolute offset: 0x123510
    }

    Float32x4 firstWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x122618
    }

    Float32x4 elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x129508
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x122bb2
    }

    VoidType sort(DynamicType, DynamicType) {
        Code at absolute offset: 0x123110
    }

    Float32x4 get:first(DynamicType) {
        Code at absolute offset: 0x134010
    }

    Float32x4 get:last(DynamicType) {
        Code at absolute offset: 0x128ac0
    }

    Float32x4List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10a148
    }
}

class __Float64List&_TypedList&_DoubleListMixin&_TypedDoubleListMixin@7027147 extends __Float32List&_TypedList&_DoubleListMixin@7027147 implements _TypedDoubleListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x110870
    }

    Float64List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10a404
    }
}

class __Float32List&_TypedList&_DoubleListMixin@7027147 extends _TypedList@7027147 implements _DoubleListMixin@7027147 {

    int lastIndexWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x109134
    }

    List +(DynamicType, DynamicType) {
        Code at absolute offset: 0xf9792
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13c888
    }

    Iterable take(DynamicType, DynamicType) {
        Code at absolute offset: 0x10996c
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x133af4
    }

    Iterable get:reversed(DynamicType) {
        Code at absolute offset: 0x125d24
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x135d20
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x139c7c
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x135180
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x13ad38
    }

    T fold(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x128074
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x136978
    }

    Iterable expand(DynamicType, DynamicType) {
        Code at absolute offset: 0x123654
    }

    double firstWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x122338
    }

    double elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x129824
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x122cf6
    }

    VoidType sort(DynamicType, DynamicType) {
        Code at absolute offset: 0x123198
    }

    double get:first(DynamicType) {
        Code at absolute offset: 0x1342a4
    }

    double get:last(DynamicType) {
        Code at absolute offset: 0x128db0
    }
}

class __Float32List&_TypedList&_DoubleListMixin&_TypedDoubleListMixin@7027147 extends __Float32List&_TypedList&_DoubleListMixin@7027147 implements _TypedDoubleListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x111ee4
    }

    Float32List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10a5d4
    }
}

class __Float32ArrayView&_TypedListView&_DoubleListMixin&_TypedDoubleListMixin@7027147 extends __Float32ArrayView&_TypedListView&_DoubleListMixin@7027147 implements _TypedDoubleListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x111390
    }

    Float32List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10a4e8
    }
}

class __Uint64List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8List&_TypedList&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x113518
    }

    Uint64List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10a7a4
    }
}

class __Int8List&_TypedList&_IntListMixin@7027147 extends _TypedList@7027147 implements _IntListMixin@7027147 {

    int lastIndexWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x109134
    }

    List +(DynamicType, DynamicType) {
        Code at absolute offset: 0xf9c36
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13c8b0
    }

    Iterable take(DynamicType, DynamicType) {
        Code at absolute offset: 0x1099d0
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x133b40
    }

    Iterable get:reversed(DynamicType) {
        Code at absolute offset: 0x125d44
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x135d54
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x139cc8
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x1351b0
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x13af4c
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x136a58
    }

    Iterable expand(DynamicType, DynamicType) {
        Code at absolute offset: 0x12372c
    }

    int firstWhere(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x122338
    }

    int elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x129a4c
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x122dd2
    }

    VoidType sort(DynamicType, DynamicType) {
        Code at absolute offset: 0x123218
    }

    int get:first(DynamicType) {
        Code at absolute offset: 0x13442c
    }

    int get:last(DynamicType) {
        Code at absolute offset: 0x128f70
    }

    VoidType fillRange(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x133834
    }
}

class Uint64List extends Object implements List, _TypedIntList@7027147 {

    Uint64List Uint64List.(DynamicType, DynamicType) {
        Code at absolute offset: 0xf9c98
    }
}

class __Uint64ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8ArrayView&_TypedListView&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x112a0c
    }

    Uint64List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10a6b8
    }
}

class __Int64List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8List&_TypedList&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x114adc
    }

    Int64List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10a974
    }
}

class __Uint32List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8List&_TypedList&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x116098
    }

    Uint32List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10ab44
    }
}

class __Uint32ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8ArrayView&_TypedListView&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x115594
    }

    Uint32List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10aa58
    }
}

class __Int32List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8List&_TypedList&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11766c
    }

    Int32List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10ad14
    }
}

class __Uint16List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8List&_TypedList&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x118110
    }

    Uint16List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10aee4
    }
}

class __Uint16ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8ArrayView&_TypedListView&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfa2a0
    }

    Uint16List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10adf8
    }
}

class __Int16List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8List&_TypedList&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x118e2c
    }

    Int16List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10b0b4
    }
}

class Int16List extends Object implements List, _TypedIntList@7027147 {

    Int16List Int16List.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfae68
    }
}

class __Int16ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8ArrayView&_TypedListView&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfb064
    }

    Int16List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10afc8
    }
}

class __Uint8ClampedList&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8List&_TypedList&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11a63c
    }

    Uint8ClampedList sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10b284
    }
}

class Uint8ClampedList extends Object implements List, _TypedIntList@7027147 {

    Uint8ClampedList Uint8ClampedList.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfbc80
    }
}

class __Uint8ClampedArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8ArrayView&_TypedListView&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x119b48
    }

    Uint8ClampedList sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10b198
    }
}

class __Uint8List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8List&_TypedList&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11bb8c
    }

    Uint8List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10b454
    }
}

class __Int8List&_TypedList&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8List&_TypedList&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11d0fc
    }

    Int8List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10b624
    }
}

class __Int8ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin@7027147 extends __Int8ArrayView&_TypedListView&_IntListMixin@7027147 implements _TypedIntListMixin@7027147 {

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11c604
    }

    Int8List sublist(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x10b538
    }
}

class ImageConfiguration extends Object {

    ImageConfiguration copyWith(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfddb4
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x18461c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15b2a0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1519d8
    }
}

class :: {
}

class :: {

    Offset positionDependentBox(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x101458
    }
}

class _RenderButtonBarRow@154102673 extends RenderFlex {

    BoxConstraints get:constraints(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
}

class ExpandIterable<S, T> extends Iterable {

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12dcb0
    }
}

class TextSelection extends TextRange {

    TextSelection TextSelection.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x148ae4
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x178d64
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x1581f8
    }
}

class :: {
}

class MappedListIterable<S, T> extends ListIterable {

    int get:length(DynamicType) {
        Code at absolute offset: 0x132d44
    }

    T elementAt(DynamicType, DynamicType) {
        Code at absolute offset: 0x109c00
    }
}

class UnmodifiableListBase<E> extends ListBase implements UnmodifiableListMixin {

    VoidType []=(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x12208c
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x122e42
    }

    VoidType sort(DynamicType, DynamicType) {
        Code at absolute offset: 0x1232c8
    }

    VoidType setRange(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x11db74
    }
}

class UnmodifiableListMixin<E> extends Object implements List {
}

class FixedLengthListBase<E> extends ListBase implements FixedLengthListMixin {

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x122eaa
    }
}

class FixedLengthListMixin<E> extends Object {
}

class _ImmutableMapKeyIterable@0150898<E> extends EfficientLengthIterable {

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12d570
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x132b4c
    }
}

class _CompactIterable@3220832<E> extends Iterable {

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12d8e0
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x132d44
    }
}

class _HashMapKeyIterable@3220832<K, V> extends _HashMapIterable@3220832 {

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12d5ec
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x130c6c
    }
}

class _HashMapIterable@3220832<K, V, E> extends EfficientLengthIterable {

    int get:length(DynamicType) {
        Code at absolute offset: 0x132ba8
    }
}

class EmptyIterable<E> extends EfficientLengthIterable {

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12d884
    }

    VoidType forEach(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x39550
    }

    String join(DynamicType, DynamicType) {
        Code at absolute offset: 0x12f6a4
    }

    Iterable where(DynamicType, DynamicType) {
        Code at absolute offset: 0x13214c
    }

    Iterable map(DynamicType, DynamicType) {
        Code at absolute offset: 0x12e970
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x1283b0
    }

    List toList(DynamicType, DynamicType) {
        Code at absolute offset: 0x1303ec
    }
}

class EfficientLengthSkipIterable<E> extends SkipIterable implements EfficientLengthIterable {

    EfficientLengthSkipIterable EfficientLengthSkipIterable._@11040228(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    EfficientLengthSkipIterable EfficientLengthSkipIterable.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x12869c
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x132efc
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x128490
    }
}

class SkipIterable<E> extends Iterable {

    SkipIterable SkipIterable._@11040228(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    SkipIterable SkipIterable.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x128578
    }

    Iterable skip(DynamicType, DynamicType) {
        Code at absolute offset: 0x1286e4
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12dd60
    }
}

class DragGestureRecognizer extends OneSequenceGestureRecognizer {
    OffsetPair _initialPosition@126099969
    OffsetPair _pendingDragOffset@126099969
    double _globalDistanceMoved@126099969

    OffsetPair get:_initialPosition@126099969(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    OffsetPair get:_pendingDragOffset@126099969(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    double get:_globalDistanceMoved@126099969(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DragGestureRecognizer DragGestureRecognizer.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x129d28
    }

    VelocityTracker _defaultBuilder@126099969(DynamicType) {
        Code at absolute offset: 0x12a03c
    }

    bool isPointerAllowed(DynamicType, DynamicType) {
        Code at absolute offset: 0x143680
    }

    VoidType addAllowedPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0x13b3a4
    }

    VoidType handleEvent(DynamicType, DynamicType) {
        Code at absolute offset: 0x12a128
    }

    VoidType acceptGesture(DynamicType, DynamicType) {
        Code at absolute offset: 0x15a2b4
    }

    VoidType rejectGesture(DynamicType, DynamicType) {
        Code at absolute offset: 0x14bda4
    }

    VoidType didStopTrackingLastPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0x14e25c
    }

    VoidType _giveUpPointer@126099969(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x12a904
    }

    VoidType _checkDown@126099969(DynamicType) {
        Code at absolute offset: 0x12ab70
    }

    VoidType _checkStart@126099969(DynamicType, DynamicType) {
        Code at absolute offset: 0x12aa8c
    }

    VoidType _checkUpdate@126099969(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x129eb4
    }

    VoidType _checkEnd@126099969(DynamicType, DynamicType) {
        Code at absolute offset: 0x12ac54
    }

    VoidType _checkCancel@126099969(DynamicType) {
        Code at absolute offset: 0x12b188
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x1447cc
    }

    DynamicType get:handleEvent(DynamicType) {
        Code at absolute offset: 0x1546e0
    }
}

class :: {
}

class _DragState@126099969 extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class PanGestureRecognizer extends DragGestureRecognizer {

    PanGestureRecognizer PanGestureRecognizer.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool isFlingGesture(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool _hasSufficientGlobalDistanceToAccept@126099969(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class HorizontalDragGestureRecognizer extends DragGestureRecognizer {

    HorizontalDragGestureRecognizer HorizontalDragGestureRecognizer.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x129cd8
    }

    bool isFlingGesture(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool _hasSufficientGlobalDistanceToAccept@126099969(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Offset _getDeltaForDetails@126099969(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class VerticalDragGestureRecognizer extends DragGestureRecognizer {

    VerticalDragGestureRecognizer VerticalDragGestureRecognizer.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x129cd8
    }

    bool isFlingGesture(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    bool _hasSufficientGlobalDistanceToAccept@126099969(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Offset _getDeltaForDetails@126099969(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _UnmodifiableSet@3220832<E> extends _SetBase@3220832 {

    Set _newSet@3220832(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _AllMatchesIterable@0150898 extends IterableBase {

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12d520
    }
}

class _ImmutableMapValueIterable@0150898<E> extends EfficientLengthIterable {

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12d5a8
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x39550
    }
}

class _StringAllMatchesIterable@0150898 extends Iterable {

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12d894
    }
}

class MappedIterable<S, T> extends Iterable {

    MappedIterable MappedIterable.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x12db18
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12da94
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x132d44
    }
}

class EfficientLengthMappedIterable<S, T> extends MappedIterable implements EfficientLengthIterable {
}

class _SplayTreeKeyIterator@3220832<K, Node> extends _SplayTreeIterator@3220832 {

    _SplayTreeKeyIterator@3220832 _SplayTreeKeyIterator@3220832.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class OutOfMemoryError extends Object implements Error {

    OutOfMemoryError OutOfMemoryError.(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x141300
    }

    StackTrace get:stackTrace(DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class StackOverflowError extends Object implements Error {

    StackOverflowError StackOverflowError.(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x141310
    }

    StackTrace get:stackTrace(DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class _TapTracker@128391311 extends Object {

    _TapTracker@128391311 _TapTracker@128391311.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13c1ac
    }

    VoidType startTrackingPointer(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13b7bc
    }

    VoidType stopTrackingPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0x13bb90
    }

    bool isWithinGlobalTolerance(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13c3d0
    }

    bool hasElapsedMinTime(DynamicType) {
        Code at absolute offset: 0x13c3b8
    }
}

class :: {
}

class DoubleTapGestureRecognizer extends GestureRecognizer {

    DoubleTapGestureRecognizer DoubleTapGestureRecognizer.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13bff4
    }

    bool isPointerAllowed(DynamicType, DynamicType) {
        Code at absolute offset: 0x143828
    }

    VoidType addAllowedPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0x13b574
    }

    VoidType _trackTap@128391311(DynamicType, DynamicType) {
        Code at absolute offset: 0x13b6c8
    }

    VoidType _handleEvent@128391311(DynamicType, DynamicType) {
        Code at absolute offset: 0x13b91c
    }

    VoidType acceptGesture(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType rejectGesture(DynamicType, DynamicType) {
        Code at absolute offset: 0x14bddc
    }

    VoidType _reject@128391311(DynamicType, DynamicType) {
        Code at absolute offset: 0x13ba54
    }

    VoidType dispose(DynamicType) {
        Code at absolute offset: 0x144ad8
    }

    VoidType _reset@128391311(DynamicType) {
        Code at absolute offset: 0x13c30c
    }

    VoidType _registerFirstTap@128391311(DynamicType, DynamicType) {
        Code at absolute offset: 0x13bd10
    }

    VoidType _registerSecondTap@128391311(DynamicType, DynamicType) {
        Code at absolute offset: 0x13bc04
    }

    VoidType _clearTrackers@128391311(DynamicType) {
        Code at absolute offset: 0x13bdc8
    }

    VoidType _freezeTracker@128391311(DynamicType, DynamicType) {
        Code at absolute offset: 0x13bb2c
    }

    VoidType _startDoubleTapTimer@128391311(DynamicType) {
        Code at absolute offset: 0x13be60
    }

    VoidType _stopDoubleTapTimer@128391311(DynamicType) {
        Code at absolute offset: 0x13c2bc
    }

    VoidType _checkUp@128391311(DynamicType, DynamicType) {
        Code at absolute offset: 0x13bcb4
    }

    DynamicType get:_handleEvent@128391311(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_reject@128391311(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    DynamicType get:_reset@128391311(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _CountdownZoned@128391311 extends Object {

    _CountdownZoned@128391311 _CountdownZoned@128391311.(DynamicType, DynamicType) {
        Code at absolute offset: 0x13c12c
    }

    VoidType _onTimeout@128391311(DynamicType) {
        Code at absolute offset: 0x13c10c
    }

    DynamicType get:_onTimeout@128391311(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {

    String debugFormatDouble(DynamicType) {
        Code at absolute offset: 0x13d310
    }
}

class _AssertionError@0150898 extends Error implements AssertionError {

    Object get:message(DynamicType) {
        Code at absolute offset: 0x13ee4a
    }

    _AssertionError@0150898 _AssertionError@0150898._create@0150898(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13f0d4
    }

    DynamicType _throwNew@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13f0a0
    }

    DynamicType _throwNewNullAssertion@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13f034
    }

    DynamicType _doThrowNew@0150898(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13eff4
    }

    DynamicType _doThrowNewSource@0150898(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13efac
    }

    DynamicType _evaluateAssertion@0150898(DynamicType) {
        Code at absolute offset: 0x13ee54
    }

    String get:_messageString@0150898(DynamicType) {
        Code at absolute offset: 0x13edbc
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x13eb70
    }
}

class _TypeError@0150898 extends Error implements TypeError, CastError {

    _TypeError@0150898 _TypeError@0150898._create@0150898(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13f1d4
    }

    DynamicType _throwNew@0150898(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13f190
    }

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class CastError extends Error {
}

class TypeError extends Error {
}

class _CastError@0150898 extends Error implements CastError, TypeError {

    _CastError@0150898 _CastError@0150898._create@0150898(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13f1d4
    }

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class _CompileTimeError@0150898 extends Error {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class NullThrownError extends Error {

    NullThrownError NullThrownError.(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x13f2ac
    }
}

class AbstractClassInstantiationError extends Error {

    AbstractClassInstantiationError AbstractClassInstantiationError._create@0150898(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x13f740
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x13f6c0
    }
}

class CyclicInitializationError extends Error {

    CyclicInitializationError CyclicInitializationError.(DynamicType, DynamicType) {
        Code at absolute offset: 0x140964
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x1408e8
    }
}

class _InternalError@0150898 extends Object {

    _InternalError@0150898 _InternalError@0150898.(DynamicType, DynamicType) {
        Code at absolute offset: 0x140b60
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x140b08
    }
}

class IntegerDivisionByZeroException extends Object implements Exception {

    IntegerDivisionByZeroException IntegerDivisionByZeroException.(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x141b94
    }
}

class _StringStackTrace@0150898 extends Object implements StackTrace {

    String toString(DynamicType) {
        Code at absolute offset: 0x13a1d8
    }
}

class TimeoutException extends Object implements Exception {

    String get:message(DynamicType) {
        Code at absolute offset: 0x19b76
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x141e8c
    }
}

class _ControllerStream@4048458<T> extends _StreamImpl@4048458 {

    StreamSubscription _createSubscription@4048458(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1738bc
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x1567f0
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x173818
    }
}

class IsolateSpawnException extends Object implements Exception {

    String get:message(DynamicType) {
        Code at absolute offset: 0x19b76
    }

    IsolateSpawnException IsolateSpawnException.(DynamicType, DynamicType) {
        Code at absolute offset: 0x140b60
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x143340
    }
}

class MaterialPointArcTween extends Tween {

    VoidType _initialize@143458455(DynamicType) {
        Code at absolute offset: 0x14a630
    }

    Offset get:center(DynamicType) {
        Code at absolute offset: 0x14b4c0
    }

    double get:radius(DynamicType) {
        Code at absolute offset: 0x14b454
    }

    double get:beginAngle(DynamicType) {
        Code at absolute offset: 0x14a5c4
    }

    double get:endAngle(DynamicType) {
        Code at absolute offset: 0x14a5c4
    }

    VoidType set:begin(DynamicType, DynamicType) {
        Code at absolute offset: 0x1671fc
    }

    VoidType set:end(DynamicType, DynamicType) {
        Code at absolute offset: 0x15e420
    }

    Offset lerp(DynamicType, DynamicType) {
        Code at absolute offset: 0x157170
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14b7f0
    }
}

class :: {

    T _maxBy@143458455(DynamicType, DynamicType) {
        Code at absolute offset: 0x14b650
    }
}

class _Diagonal@143458455 extends Object {
}

class _CornerId@143458455 extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class MaterialRectArcTween extends RectTween {

    VoidType _initialize@143458455(DynamicType) {
        Code at absolute offset: 0x14a260
    }

    double _diagonalSupport@143458455(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x14a494
    }

    Offset _cornerFor@143458455(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x14b52c
    }

    MaterialPointArcTween get:beginArc(DynamicType) {
        Code at absolute offset: 0x14b794
    }

    MaterialPointArcTween get:endArc(DynamicType) {
        Code at absolute offset: 0x14a204
    }

    VoidType set:begin(DynamicType, DynamicType) {
        Code at absolute offset: 0x167104
    }

    VoidType set:end(DynamicType, DynamicType) {
        Code at absolute offset: 0x15e328
    }

    Rect lerp(DynamicType, DynamicType) {
        Code at absolute offset: 0x156f4c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14a108
    }
}

class _CupertinoLocalizationsDelegate@68010061 extends LocalizationsDelegate {

    bool isSupported(DynamicType, DynamicType) {
        Code at absolute offset: 0x174d40
    }

    Future load(DynamicType, DynamicType) {
        Code at absolute offset: 0x16e0ac
    }

    bool shouldReload(DynamicType, DynamicType) {
        Code at absolute offset: 0x16d81c
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14ba48
    }
}

class CupertinoLocalizations extends Object {
}

class :: {
}

class DefaultCupertinoLocalizations extends Object implements CupertinoLocalizations {

    Future load(DynamicType) {
        Code at absolute offset: 0x14ba88
    }
}

class CircleBorder extends OutlinedBorder {

    ShapeBorder scale(DynamicType, DynamicType) {
        Code at absolute offset: 0x165424
    }

    ShapeBorder lerpFrom(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x162714
    }

    ShapeBorder lerpTo(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x167b7c
    }

    Path getOuterPath(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x164a48
    }

    VoidType paint(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15b91c
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x180e94
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15a8f8
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14d370
    }
}

class :: {
}

class StadiumBorder extends OutlinedBorder {

    ShapeBorder scale(DynamicType, DynamicType) {
        Code at absolute offset: 0x165560
    }

    ShapeBorder lerpFrom(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x162c44
    }

    ShapeBorder lerpTo(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x168040
    }

    Path getOuterPath(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x164ccc
    }

    VoidType paint(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15be60
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x18111c
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x15a8f8
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14d580
    }
}

class :: {
}

class _StadiumToRoundedRectangleBorder@300467860 extends OutlinedBorder {

    ShapeBorder scale(DynamicType, DynamicType) {
        Code at absolute offset: 0x1655f0
    }

    ShapeBorder lerpFrom(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x163120
    }

    ShapeBorder lerpTo(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16842c
    }

    BorderRadius _adjustBorderRadius@300467860(DynamicType, DynamicType) {
        Code at absolute offset: 0x14d604
    }

    Path getOuterPath(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x164e0c
    }

    VoidType paint(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15c134
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1812a0
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x1595b0
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14dbd4
    }
}

class _StadiumToCircleBorder@300467860 extends OutlinedBorder {

    ShapeBorder scale(DynamicType, DynamicType) {
        Code at absolute offset: 0x1655a4
    }

    ShapeBorder lerpFrom(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x162e90
    }

    ShapeBorder lerpTo(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x168198
    }

    Rect _adjustRect@300467860(DynamicType, DynamicType) {
        Code at absolute offset: 0x14d798
    }

    BorderRadius _adjustBorderRadius@300467860(DynamicType, DynamicType) {
        Code at absolute offset: 0x14d728
    }

    Path getOuterPath(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x164d84
    }

    VoidType paint(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15bf64
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x1811c8
    }

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x157670
    }

    String toString(DynamicType) {
        Code at absolute offset: 0x14dab4
    }
}

class FloatingLabelBehavior extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x14e200
    }
}

class :: {
}

class InputDecorationTheme extends _State&Object&Diagnosticable@398042623 {

    int get:hashCode(DynamicType) {
        Code at absolute offset: 0x159098
    }

    bool ==(DynamicType, DynamicType) {
        Code at absolute offset: 0x17bbd4
    }
}

class _Random@12383281 extends Object implements Random {
    Uint32List _state@12383281
    _Random@12383281 _prng@12383281

    Uint32List get:_state@12383281(DynamicType) {
        Code at absolute offset: 0xe3bfc
    }

    _Random@12383281 get:_prng@12383281() {
        Code at absolute offset: 0xfaa0
    }

    VoidType _nextState@12383281(DynamicType) {
        Code at absolute offset: 0x14fd30
    }

    int nextInt(DynamicType, DynamicType) {
        Code at absolute offset: 0x14fff4
    }

    Uint32List _setupSeed@12383281(DynamicType) {
        Code at absolute offset: 0x14fe0c
    }

    Uint32List _initialSeed@12383281() {
        Code at absolute offset: 0x14ff7c
    }

    int _nextSeed@12383281() {
        Code at absolute offset: 0x14fe8c
    }
}

class Random extends Object {

    Random Random.(DynamicType, DynamicType) {
        Code at absolute offset: 0x14fd6c
    }
}

class Tolerance extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0x151fb0
    }
}

class :: {
}

class SystemSoundType extends Object {

    String toString(DynamicType) {
        Code at absolute offset: 0xedf0
    }
}

class :: {
}

class SystemSound extends Object {

    Future play(DynamicType) {
        Code at absolute offset: 0x1544b4
    }
}

class _AbstractType@0150898 extends Object implements Type {

    String toString(DynamicType) {
        Code at absolute offset: 0x156590
    }
}

class _AddStreamState@4048458<T> extends Object {

    _AddStreamState@4048458 _AddStreamState@4048458.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15867c
    }

    DynamicType makeErrorHandler(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType pause(DynamicType) {
        Code at absolute offset: 0x158640
    }

    VoidType resume(DynamicType) {
        Code at absolute offset: 0x15860c
    }

    Future cancel(DynamicType) {
        Code at absolute offset: 0x158538
    }

    VoidType complete(DynamicType) {
        Code at absolute offset: 0x1584fc
    }
}

class :: {

    int hashObjects(DynamicType) {
        Code at absolute offset: 0x15c91c
    }

    int _finish@528285449(DynamicType) {
        Code at absolute offset: 0x15c970
    }
}

class _ZoneDelegate@4048458 extends Object implements ZoneDelegate {

    VoidType handleUncaughtError(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x15cfe0
    }
}

class _DelayedDone@4048458 extends Object implements _DelayedEvent@4048458 {

    VoidType perform(DynamicType, DynamicType) {
        Code at absolute offset: 0x161268
    }

    _DelayedEvent@4048458 get:next(DynamicType) {
        Code at absolute offset: 0x47c30
    }

    VoidType set:next(DynamicType, DynamicType) {
        Code at absolute offset: 0x15fe7c
    }
}

class _DelayedError@4048458 extends _DelayedEvent@4048458 {

    VoidType perform(DynamicType, DynamicType) {
        Code at absolute offset: 0x1611cc
    }
}

class _IterablePendingEvents@4048458<T> extends _PendingEvents@4048458 {

    _IterablePendingEvents@4048458 _IterablePendingEvents@4048458.(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType handleNext(DynamicType, DynamicType) {
        Code at absolute offset: 0x168964
    }
}

class :: {

    ImageConfiguration createLocalImageConfiguration(DynamicType, DynamicType) {
        Code at absolute offset: 0x16a68c
    }
}

class _StreamControllerAddStreamState@4048458<T> extends _AddStreamState@4048458 {

    _StreamControllerAddStreamState@4048458 _StreamControllerAddStreamState@4048458.(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x16f990
    }
}

class _CustomHashMap@3220832<K, V> extends _HashMap@3220832 {

    _CustomHashMap@3220832 _CustomHashMap@3220832.(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class SnackBarClosedReason extends Object {
}

class :: {
}

class SnackBar extends StatefulWidget {
}

class MaterialColor extends ColorSwatch {
}

class :: {
}

class MaterialAccentColor extends ColorSwatch {
}

class _RegisterBinaryZoneFunction@4048458 extends Object {
}

class _RegisterUnaryZoneFunction@4048458 extends Object {
}

class _RegisterNullaryZoneFunction@4048458 extends Object {
}

class _RunBinaryZoneFunction@4048458 extends Object {
}

class _RunUnaryZoneFunction@4048458 extends Object {
}

class _RunNullaryZoneFunction@4048458 extends Object {
}

class :: {
    _Closure@0150898 compute

    _Closure@0150898 get:compute() {
        Code at absolute offset: 0xfaa0
    }
}

class Isolate extends Object {

    Future _spawnCommon@1026248(DynamicType) {
        Code at absolute offset: 0x19cad8
    }

    VoidType _sendOOB@1026248(DynamicType, DynamicType) {
        Code at absolute offset: 0x19c858
    }

    Future resolvePackageUri(DynamicType) {
        Code at absolute offset: 0x19cabc
    }

    Future spawn(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x19c894
    }

    VoidType kill(DynamicType, DynamicType) {
        Code at absolute offset: 0x19c7d8
    }
}

class VMLibraryHooks extends Object {
    DynamicType timerFactory
    DynamicType eventHandlerSendData
    DynamicType timerMillisecondClock
    DynamicType _computeScriptUri@11040228
    DynamicType _cachedScript@11040228

    DynamicType get:platformScript() {
        Code at absolute offset: 0x19d2e4
    }
}

class _IsolateConfiguration@404206865<Q, R> extends Object {

    Q get:message(DynamicType) {
        Code at absolute offset: 0x1d792
    }

    FutureOr apply(DynamicType) {
        Code at absolute offset: 0x19d7a8
    }
}

class :: {

    Future compute(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x19da6c
    }

    Future _spawn@404206865(DynamicType) {
        Code at absolute offset: 0x19d80c
    }
}

class Flow extends Object {

    Flow begin(DynamicType) {
        Code at absolute offset: 0x19e3fc
    }

    Flow step(DynamicType) {
        Code at absolute offset: 0x19e394
    }

    Flow end(DynamicType) {
        Code at absolute offset: 0x19e3d0
    }
}

class Priority extends Object {

    Priority +(DynamicType, DynamicType) {
        Code at absolute offset: 0x19f4d4
    }

    Priority -(DynamicType, DynamicType) {
        Code at absolute offset: 0x19f46c
    }
}

class :: {
}

class _AsyncBlock@5383715 extends Object {

    VoidType _start@5383715(DynamicType, DynamicType) {
        Code at absolute offset: 0x1a1610
    }

    VoidType _finish@5383715(DynamicType, DynamicType) {
        Code at absolute offset: 0x1a15ac
    }
}

class TimelineTask extends Object {

    TimelineTask TimelineTask.(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    VoidType start(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1a1b64
    }

    VoidType finish(DynamicType, DynamicType) {
        Code at absolute offset: 0x1a1aac
    }
}

class _LocationCount@450171358 extends Object {
}

class :: {

    Iterable transformDebugCreator(DynamicType) {
        Code at absolute offset: 0x1a744c
    }

    Iterable _parseDiagnosticsNode@450171358(DynamicType) {
        Code at absolute offset: 0x1a7398
    }

    Iterable _describeRelevantUserCode@450171358(DynamicType) {
        Code at absolute offset: 0x1a6da4
    }
}

class _WidgetInspectorService@450171358 extends Object implements WidgetInspectorService {

    _WidgetInspectorService@450171358 _WidgetInspectorService@450171358.(DynamicType) {
        Code at absolute offset: 0x1a6fdc
    }

    bool isWidgetCreationTracked(DynamicType) {
        Code at absolute offset: 0x1a6f94
    }
}

class WidgetInspectorService extends Object {
    WidgetInspectorService _instance@450171358

    WidgetInspectorService get:_instance@450171358() {
        Code at absolute offset: 0xfaa0
    }

    WidgetInspectorService get:instance() {
        Code at absolute offset: 0x1a7348
    }
}

class _ElementLocationStatsTracker@450171358 extends Object {

    _ElementLocationStatsTracker@450171358 _ElementLocationStatsTracker@450171358.(DynamicType) {
        Code at absolute offset: 0x1a718c
    }

    VoidType add(DynamicType, DynamicType) {
        Code at absolute offset: 0x1a72cc
    }
}

class InspectorSelection extends Object {

    InspectorSelection InspectorSelection.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _InspectorReferenceData@450171358 extends Object {
}

class Dart_CObject extends Struct {
    int #sizeOf

    int get:#sizeOf() {
        Code at absolute offset: 0x1ac7d0
    }

    Dart_CObject Dart_CObject.#fromPointer(DynamicType, DynamicType) {
        Code at absolute offset: 0x47c30
    }
}

class Struct extends NativeType {
}

class _NativeWasmImports@9179448 extends NativeFieldWrapperClass1 implements WasmImports {

    Function getFunction(DynamicType, DynamicType) {
        Code at absolute offset: 0x1ac800
    }
}

class WasmImports extends Object {
}

class :: {
}

class _ForceState@122518508 extends Object {
}

class ForcePressDetails extends Object {
}

class ForcePressGestureRecognizer extends OneSequenceGestureRecognizer {

    VoidType handleEvent(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class :: {
}

class TabBarIndicatorSize extends Object {
}

class :: {
}

class NavigationRailLabelType extends Object {
}

class :: {
}

class ListTileStyle extends Object {
}

class :: {
}

class BottomNavigationBarType extends Object {
}

class :: {
}

class ScaleGestureRecognizer extends OneSequenceGestureRecognizer {

    VoidType handleEvent(DynamicType, DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _ScaleState@133213599 extends Object {
}

class ScaleStartDetails extends Object {
}

class ScaleUpdateDetails extends Object {
}

class ScaleEndDetails extends Object {
}

class :: {
}

class StrutStyle extends _DiagnosticableTree&Object&Diagnosticable@99198569 {
}

class :: {
    int _port@17205832
    String _ip@17205832
    bool _autoStart@17205832
    bool _authCodesDisabled@17205832
    bool _originCheckDisabled@17205832
    String _serviceInfoFilename@17205832
    bool _isWindows@17205832
    bool _isFuchsia@17205832
    DynamicType _signalWatch@17205832
    bool _enableServicePortFallback@17205832
    bool _waitForDdsToAdvertiseService@17205832
}

class :: {
}

class :: {
}

class Float32x4 extends Object {
}

class Endian extends Object {
}

class Float64x2 extends Object {
}

class Int32x4 extends Object {
}

class :: {

    VoidType main() {
        Code at absolute offset: 0x1ae40c
    }
}

class :: {
}

class :: {
}

class TransferableTypedData extends Object {
}

class CodeUnits extends UnmodifiableListBase {
}

class ClassID extends Object {

    int getID(DynamicType) {
        Code at absolute offset: 0x1ae47c
    }
}

class :: {
}

class _NativeInteger@8050071 extends NativeType {
}

class _NativeDouble@8050071 extends NativeType {
}

class UserTag extends Object {
}

class pragma extends Object {
}

class _DoneStreamSubscription@4048458<T> extends Object implements StreamSubscription {

    VoidType _sendDone@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _BroadcastStreamController@4048458<T> extends Object implements _StreamControllerBase@4048458 {

    VoidType _close@4048458(DynamicType) {
        Code at absolute offset: 0xfaa0
    }
}

class _StreamIterator@4048458 extends Object {
    Object _stateData@4048458

    Object get:_stateData@4048458(DynamicType) {
        Code at absolute offset: 0xe3bfc
    }

    VoidType set:_stateData@4048458(DynamicType, DynamicType) {
        Code at absolute offset: 0x80ff8
    }
}

class _ScheduleImmediate@4048458 extends Object {
    _Closure@0150898 _closure@4048458
}

class _CompactLinkedHashSet@3220832<E> extends __CompactLinkedHashSet&_HashFieldBase&_HashBase&_OperatorEqualsAndHashCode&SetMixin@3220832 implements LinkedHashSet {

    _CompactLinkedHashSet@3220832 _CompactLinkedHashSet@3220832.(DynamicType) {
        Code at absolute offset: 0xfaa0
    }

    int get:length(DynamicType) {
        Code at absolute offset: 0x1333e0
    }

    E get:first(DynamicType) {
        Code at absolute offset: 0x12bc6c
    }

    VoidType _rehash@3220832(DynamicType) {
        Code at absolute offset: 0x16cc70
    }

    VoidType clear(DynamicType) {
        Code at absolute offset: 0x74094
    }

    VoidType _init@3220832(DynamicType, DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x735b8
    }

    bool add(DynamicType, DynamicType) {
        Code at absolute offset: 0x16c906
    }

    Object _getKeyOrData@3220832(DynamicType, DynamicType) {
        Code at absolute offset: 0x5a1b0
    }

    bool contains(DynamicType, DynamicType) {
        Code at absolute offset: 0x12e510
    }

    bool remove(DynamicType, DynamicType) {
        Code at absolute offset: 0x16165c
    }

    Iterator get:iterator(DynamicType) {
        Code at absolute offset: 0x12ed58
    }

    Set toSet(DynamicType) {
        Code at absolute offset: 0x12d0d0
    }

    VoidType _regenerateIndex@3220832(DynamicType) {
        Code at absolute offset: 0x1af1ce
    }

    DynamicType get:contains(DynamicType) {
        Code at absolute offset: 0xe4ab4
    }
}

class Future<T> extends Object {
    _Future@4048458 _nullFuture@4048458

    _Future@4048458 get:_nullFuture@4048458() {
        Code at absolute offset: 0xfaa0
    }

    Future Future.(DynamicType, DynamicType) {
        Code at absolute offset: 0x1ab1c8
    }

    Future Future.sync(DynamicType, DynamicType) {
        Code at absolute offset: 0x1abe3c
    }

    Future Future.value(DynamicType, DynamicType) {
        Code at absolute offset: 0x80c3c
    }

    Future Future.error(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x978f8
    }

    Future wait(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x97328
    }
}

class List<E> extends Object implements EfficientLengthIterable {

    List List._fromLiteral@0150898(DynamicType, DynamicType) {
        Code at absolute offset: 0x2e67c
    }

    List List.filled(DynamicType, DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x1301b0
    }

    List List.empty(DynamicType, DynamicType) {
        Code at absolute offset: 0x1302b8
    }

    List List.from(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x12090
    }

    List List.of(DynamicType, DynamicType, DynamicType) {
        Code at absolute offset: 0x73758
    }

    List castFrom(DynamicType) {
        Code at absolute offset: 0x612e8
    }
}

